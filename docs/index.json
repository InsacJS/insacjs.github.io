[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "lib/Insac.js",
    "content": "/** @ignore */ const express = require('express')\n/** @ignore */ const https   = require('https')\n/** @ignore */ const path    = require('path')\n\n/** @ignore */ const config = require('./config/app.config')\n\n/** @ignore */ const Apidoc   = require('./core/Apidoc')\n/** @ignore */ const Database = require('./core/Database')\n/** @ignore */ const Logger   = require('./core/Logger')\n\n/** @ignore */ const util = require('./tools/util')\n\n/**\n* Clase principal, utilizada para controlar la aplicación.\n*/\nclass Insac {\n  /**\n  * Crea una instancia de la aplicación.\n  */\n  constructor () {\n    /**\n    * Instancia del servidor express.\n    * @type {Function}\n    */\n    this.app = createServer(config)\n\n    /**\n    * Función que se ejecuta después de Inicializar el módulo.\n    * @type {AsyncFunction}\n    */\n    this.actionOnInit = null\n\n    /**\n    * Función que se ejecuta después de Instalar el módulo.\n    * @type {AsyncFunction}\n    */\n    this.actionOnSetup = null\n\n    /**\n    * Función que se ejecuta después de Cargar el módulo.\n    * @type {AsyncFunction}\n    */\n    this.actionOnStart = null\n  }\n\n  /**\n  * Adiciona un módulo a la aplicación.\n  * @param {!String}  moduleName - Nombre del módulo.\n  */\n  addModule (moduleName) {\n    const app          = this.getApp()\n    moduleName         = moduleName.toLowerCase()\n    const MODULE_NAME  = moduleName.toUpperCase()\n    const MODULES_PATH = path.resolve(app.config.PATH.sources, 'modules')\n    try {\n      util.find(MODULES_PATH, `${moduleName}.module.js`, ({ filePath, dirPath, fileName }) => {\n        if (app.modules.includes(MODULE_NAME)) {\n          throw new Error(`El módulo ${MODULE_NAME} ya ha sido adicionado`)\n        }\n        const filesInfo = util.find(dirPath, `${moduleName}.config.js`)\n        let moduleConfig = {}\n        if (filesInfo.length > 0) {\n          moduleConfig = require(filesInfo[0].filePath)\n          app.logger.appPrimary('[archivo]', `${filesInfo[0].filePath.replace(app.config.PATH.project, '')} ${app.logger.OK}`)\n        }\n        moduleConfig.moduleName = MODULE_NAME\n        moduleConfig.modulePath = dirPath\n        app.config[MODULE_NAME] = moduleConfig\n        app[MODULE_NAME]        = require(filePath)(app)\n        app.modules.push(MODULE_NAME)\n        app.logger.appPrimary('[archivo]', `${filePath.replace(app.config.PATH.project, '')} ${app.logger.OK}`)\n        app.logger.appPrimary()\n      })\n      if (!app.modules.includes(MODULE_NAME)) {\n        throw new Error(`Se requiere el archivo '${moduleName}.module.js'`)\n      }\n    } catch (err) {\n      app.logger.appError('Error:', `Ocurrió un error al adicionar el módulo '${moduleName}'. ${err.message}\\n`)\n      throw err\n    }\n  }\n\n  /**\n  * Adiciona una función para que se ejecute en un determinado momento.\n  * @param {!String}        [type='onStart'] - Tipo de evento (onInit, onSetup, onStart).\n  * @param {!AsyncFunction} action           - Función de tipo asincrono\n  */\n  addAction (type, action) {\n    if (type === 'onInit')  this.actionOnInit  = action\n    if (type === 'onSetup') this.actionOnSetup = action\n    if (type === 'onStart') this.actionOnStart = action\n  }\n\n  /**\n  * Configura, instala, carga y ejecuta la aplicación,\n  * dependiendo del modo de ejecución.\n  * @return {Promise}\n  */\n  async init () {\n    const app = this.getApp()\n\n    const SETUP  = app.config.DATABASE.setup\n    const START  = app.config.SERVER.start\n    const LISTEN = app.config.SERVER.listen\n\n    try {\n      app.loaded = false\n\n      if (SETUP || START) {\n        app.logger.appTitle('CONFIGURACIÓN INICIAL')\n        await loadTools(app)\n        await loadBeforeHooks(app)\n        if (this.actionOnInit) await this.actionOnInit()\n      }\n\n      if (SETUP) {\n        app.logger.appTitle('INSTALANDO APLICACIÓN')\n        await app.DB.onInit(app)\n        if (app.config.DATABASE.onSetup.dropDatabase)   await app.DB.dropDatabase(app)\n        if (app.config.DATABASE.onSetup.createDatabase) await app.DB.createDatabase(app)\n        await setupModules(app)\n        if (this.actionOnSetup) await this.actionOnSetup()\n        await app.DB.sequelize.close()\n      }\n\n      if (START)  {\n        app.logger.appTitle('CARGANDO APLICACIÓN')\n        await app.apidoc.onInit(app)\n        await app.DB.onInit(app)\n        await startModules(app)\n        if (this.actionOnStart) await this.actionOnStart()\n      }\n\n      if (SETUP || START) {\n        app.logger.appTitle('CONFIGURACIÓN FINAL')\n        await loadAfterHooks(app)\n        if (app.apidoc.isEnabled()) { await app.apidoc.build(app) }\n        app.logger.appAccent()\n        if (SETUP && START)  { app.logger.appAccent('La aplicación ha sido instalada y cargada con éxito.') }\n        if (SETUP && !START) { app.logger.appAccent('La aplicación ha sido instalada con éxito.') }\n        if (!SETUP && START) { app.logger.appAccent('La aplicación ha sido cargada con éxito.') }\n        app.logger.appAccent()\n      }\n\n      if (START && LISTEN) {\n        app.logger.appTitle('EJECUTANDO APLICACIÓN')\n        await listen(app)\n      }\n\n      app.loaded = true\n    } catch (err) {\n      app.logger.appError('Error:', `Ocurrió un error al cargar la aplicación. ${err.message}\\n`)\n      throw err\n    }\n  }\n\n  /**\n  * Cierra el servidor y la conexión con la base de datos.\n  * @return  {Promise}\n  */\n  async close () {\n    const app = this.getApp()\n    if (app.SERVER) {\n      await app.SERVER.close()\n    }\n    await app.DB.sequelize.close()\n  }\n\n  /**\n  * Devuelve la instancia del servidor express.\n  * @return {Function}\n  */\n  getApp () {\n    return this.app\n  }\n}\n\n/**\n* @ignore\n* Crea una instancia del servidor express.\n* @param {!Object} config - Configuración de la aplicación.\n* @return {Function}\n*/\nfunction createServer (config) {\n  const app   = express()\n  app.config  = config\n  app.apidoc  = new Apidoc()\n  app.DB      = new Database()\n  app.logger  = new Logger(app)\n  app.modules = [] // Para almacenar los nombres de los módulos\n  app.getResourceModules = () => {\n    const resourceModules = []\n    app.modules.forEach(mod => {\n      if (app[mod] && app[mod].hasComponent('resources', '.route.js')) { resourceModules.push(mod) }\n    })\n    return resourceModules\n  }\n  app.logger.appLogo(app)\n  return app\n}\n\n/**\n* @ignore\n* Carga las herramientas o utilitarios generales de la aplicación.\n* @param {!Object} app - Instancia del servidor express.\n* @return {Function}\n*/\nasync function loadTools (app) {\n  const TOOLS_PATH = path.resolve(app.config.PATH.sources, 'tools')\n  app.tools = {}\n  if (util.isDir(TOOLS_PATH)) {\n    await util.findAsync(TOOLS_PATH, '.tool.js', async ({ fileName, filePath }) => {\n      app.tools[fileName] = await util.loadFile(app, filePath)\n    })\n  }\n}\n\n/**\n* @ignore\n* Carga los archivos de configuración (before hooks) que se requieren\n* antes de cargar los módulos.\n* @param {!Function} app - Instancia del servidor express.\n*/\nasync function loadBeforeHooks (app) {\n  await require('./hooks/app.before.hook')(app)\n  app.logger.appPrimary('[archivo]', `app.before.hook.js (default) ${app.logger.OK}`)\n\n  const HOOKS_PATH  = path.resolve(app.config.PATH.sources, 'hooks')\n  if (util.isDir(HOOKS_PATH)) {\n    await util.findAsync(HOOKS_PATH, '.before.hook.js', async ({ filePath, fileName }) => {\n      await require(filePath)(app)\n      app.logger.appPrimary('[archivo]', `${filePath.replace(app.config.PATH.project, '')} ${app.logger.OK}`)\n    })\n  }\n  app.logger.appPrimary()\n}\n\n/**\n* @ignore\n* Carga los archivos de configuración (after hooks) que se requieren\n* después de cargar los módulos.\n* @param {!Function} app - Instancia del servidor express.\n*/\nasync function loadAfterHooks (app) {\n  const HOOKS_PATH  = path.resolve(app.config.PATH.sources, 'hooks')\n  if (util.isDir(HOOKS_PATH)) {\n    await util.findAsync(HOOKS_PATH, '.after.hook.js', async ({ filePath, fileName }) => {\n      await require(filePath)(app)\n      app.logger.appPrimary('[archivo]', `${filePath.replace(app.config.PATH.project, '')} ${app.logger.OK}`)\n    })\n  }\n  await require('./hooks/app.after.hook')(app)\n  app.logger.appPrimary('[archivo]', `app.after.hook.js (default) ${app.logger.OK}`)\n  app.logger.appPrimary()\n}\n\n/**\n* @ignore\n* Instala todos los módulos.\n* @param {!Function} app - Instancia del servidor express.\n*/\nasync function setupModules (app) {\n  for (let i in app.modules) {\n    const MODULE = app[app.modules[i]]\n    if (app.config.DATABASE.onSetup.modules.length === 0 || app.config.DATABASE.onSetup.modules.includes(MODULE.getName())) {\n      if (MODULE.hasSetup()) {\n        app.logger.appTitle2(`Módulo ${MODULE.getName()} ...`)\n        await MODULE.loadComponent(app, 'hooks', '.before.hook.js')\n        await MODULE.onInit(app)\n        await MODULE.onSetup(app)\n        await MODULE.loadComponent(app, 'hooks', '.after.hook.js')\n      }\n    }\n  }\n}\n\n/**\n* @ignore\n* Carga todos los módulos.\n* @param {!Function} app - Instancia del servidor express.\n*/\nasync function startModules (app) {\n  for (let i in app.modules) {\n    const MODULE = app[app.modules[i]]\n    app.logger.appTitle2(`Módulo ${MODULE.getName()} ...`)\n    await MODULE.loadComponent(app, 'hooks', '.before.hook.js')\n    await MODULE.onInit(app)\n    await MODULE.onStart(app)\n    await MODULE.loadComponent(app, 'hooks', '.after.hook.js')\n  }\n}\n\n/**\n* @ignore\n* Despliega la aplicación.\n* @param {!Function} app - Instancia del servidor express.\n* @return {Promise}\n*/\nasync function listen (app) {\n  if (app.config.SERVER.https) {\n    app.SERVER = await https.createServer(app.config.SERVER.httpsOptions, app).listen(app.config.SERVER.port)\n  } else {\n    app.SERVER = await app.listen(app.config.SERVER.port)\n  }\n  const URL = `${app.config.SERVER.protocol}://${app.config.SERVER.hostname}:${app.config.SERVER.port}`\n  app.logger.appPrimary(`[SERVICIO]`, `${URL} ${app.logger.OK}`)\n  if (app.apidoc.isEnabled()) {\n    app.getResourceModules().forEach(mod => {\n      app.logger.appPrimary(`[APIDOC]  `, `${URL}/apidoc/${mod} ${app.logger.OK}`)\n    })\n    app.logger.appPrimary()\n  }\n  if (!app.apidoc.isEnabled()) {\n    await app.apidoc.remove(app)\n  }\n}\n\nmodule.exports = Insac\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/Insac.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "express",
    "memberof": "lib/Insac.js",
    "static": true,
    "longname": "lib/Insac.js~express",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "https",
    "memberof": "lib/Insac.js",
    "static": true,
    "longname": "lib/Insac.js~https",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/Insac.js",
    "static": true,
    "longname": "lib/Insac.js~path",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "config",
    "memberof": "lib/Insac.js",
    "static": true,
    "longname": "lib/Insac.js~config",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "Apidoc",
    "memberof": "lib/Insac.js",
    "static": true,
    "longname": "lib/Insac.js~Apidoc",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "Database",
    "memberof": "lib/Insac.js",
    "static": true,
    "longname": "lib/Insac.js~Database",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "Logger",
    "memberof": "lib/Insac.js",
    "static": true,
    "longname": "lib/Insac.js~Logger",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "util",
    "memberof": "lib/Insac.js",
    "static": true,
    "longname": "lib/Insac.js~util",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "class",
    "name": "Insac",
    "memberof": "lib/Insac.js",
    "static": true,
    "longname": "lib/Insac.js~Insac",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": "Clase principal, utilizada para controlar la aplicación.",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 58,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/Insac.js~Insac",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/Insac.js~Insac#constructor",
    "access": "public",
    "description": "Crea una instancia de la aplicación.",
    "lineNumber": 20
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "app",
    "memberof": "lib/Insac.js~Insac",
    "static": false,
    "longname": "lib/Insac.js~Insac#app",
    "access": "public",
    "description": "Instancia del servidor express.",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "actionOnInit",
    "memberof": "lib/Insac.js~Insac",
    "static": false,
    "longname": "lib/Insac.js~Insac#actionOnInit",
    "access": "public",
    "description": "Función que se ejecuta después de Inicializar el módulo.",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "AsyncFunction"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "actionOnSetup",
    "memberof": "lib/Insac.js~Insac",
    "static": false,
    "longname": "lib/Insac.js~Insac#actionOnSetup",
    "access": "public",
    "description": "Función que se ejecuta después de Instalar el módulo.",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "AsyncFunction"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "actionOnStart",
    "memberof": "lib/Insac.js~Insac",
    "static": false,
    "longname": "lib/Insac.js~Insac#actionOnStart",
    "access": "public",
    "description": "Función que se ejecuta después de Cargar el módulo.",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "AsyncFunction"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "addModule",
    "memberof": "lib/Insac.js~Insac",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/Insac.js~Insac#addModule",
    "access": "public",
    "description": "Adiciona un módulo a la aplicación.",
    "lineNumber": 50,
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "moduleName",
        "description": "Nombre del módulo."
      }
    ],
    "return": null
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "addAction",
    "memberof": "lib/Insac.js~Insac",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/Insac.js~Insac#addAction",
    "access": "public",
    "description": "Adiciona una función para que se ejecute en un determinado momento.",
    "lineNumber": 88,
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'onStart'",
        "defaultRaw": "'onStart'",
        "name": "type",
        "description": "Tipo de evento (onInit, onSetup, onStart)."
      },
      {
        "nullable": false,
        "types": [
          "AsyncFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "Función de tipo asincrono"
      }
    ],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "init",
    "memberof": "lib/Insac.js~Insac",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/Insac.js~Insac#init",
    "access": "public",
    "description": "Configura, instala, carga y ejecuta la aplicación,\ndependiendo del modo de ejecución.",
    "lineNumber": 99,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "close",
    "memberof": "lib/Insac.js~Insac",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/Insac.js~Insac#close",
    "access": "public",
    "description": "Cierra el servidor y la conexión con la base de datos.",
    "lineNumber": 161,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "getApp",
    "memberof": "lib/Insac.js~Insac",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/Insac.js~Insac#getApp",
    "access": "public",
    "description": "Devuelve la instancia del servidor express.",
    "lineNumber": 173,
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "createServer",
    "memberof": "lib/Insac.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/Insac.js~createServer",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 184,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuración de la aplicación."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "loadTools",
    "memberof": "lib/Insac.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/Insac.js~loadTools",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 208,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "loadBeforeHooks",
    "memberof": "lib/Insac.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/Insac.js~loadBeforeHooks",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 224,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": null
  },
  {
    "__docId__": 74,
    "kind": "function",
    "name": "loadAfterHooks",
    "memberof": "lib/Insac.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/Insac.js~loadAfterHooks",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 244,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": null
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "setupModules",
    "memberof": "lib/Insac.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/Insac.js~setupModules",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 262,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": null
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "startModules",
    "memberof": "lib/Insac.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/Insac.js~startModules",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 282,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "listen",
    "memberof": "lib/Insac.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/Insac.js~listen",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/Insac.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 299,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "lib/config/apidoc.config.js",
    "content": "/** @ignore */ const PROTOCOL = process.env.PROTOCOL\n/** @ignore */ const HOSTNAME = process.env.HOSTNAME\n/** @ignore */ const PORT     = process.env.PORT\n\n/**\n* Configuración por defecto del APIDOC.\n* @type {Object}\n* @property {Boolean} enabled=true         - Habilita la creación del apidoc.\n* @property {String}  title='Apidoc'       - Título de la página del apidoc.\n* @property {String}  name='Documentación' - Título principal del apidoc.\n* @property {String}  version='1.0.0'      - Versión principal del apidoc.\n* @property {String}  url                  - Dirección URL utilizada para completar las rutas del apidoc.\n* @property {String}  sampleUrl            - Dirección URL de las peticiones de ejemplo.\n* @property {Object}  template             - Configuración del template.\n* @property {Object}  header               - Configuración del contenido del encabezado del apidoc.\n* @property {String}  header.title         - Título.\n* @property {String}  header.filename      - Nombre del archivo.\n* @property {Object}  footer               - Configuración del contenido del pié de página del apidoc.\n* @property {String}  footer.title         - Título.\n* @property {String}  footer.filename      - Nombre del archivo.\n*/\nconst APIDOC = {\n  enabled: true,\n\n  title     : 'Apidoc',\n  name      : 'Documentación',\n  version   : '1.0.0',\n  url       : `${PROTOCOL}://${HOSTNAME}:${PORT}`,\n  sampleUrl : `${PROTOCOL}://${HOSTNAME}:${PORT}`,\n\n  template: {\n    withGenerator : false,\n    withCompare   : true,\n    forceLanguage : 'es'\n  },\n\n  header: null,\n\n  footer: {\n    title    : 'INSTRUCCIONES',\n    filename : 'FOOTER.md'\n  }\n}\n\nmodule.exports = APIDOC\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/config/apidoc.config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "variable",
    "name": "PROTOCOL",
    "memberof": "lib/config/apidoc.config.js",
    "static": true,
    "longname": "lib/config/apidoc.config.js~PROTOCOL",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/apidoc.config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "HOSTNAME",
    "memberof": "lib/config/apidoc.config.js",
    "static": true,
    "longname": "lib/config/apidoc.config.js~HOSTNAME",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/apidoc.config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "PORT",
    "memberof": "lib/config/apidoc.config.js",
    "static": true,
    "longname": "lib/config/apidoc.config.js~PORT",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/apidoc.config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "APIDOC",
    "memberof": "lib/config/apidoc.config.js",
    "static": true,
    "longname": "lib/config/apidoc.config.js~APIDOC",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/apidoc.config.js",
    "importStyle": null,
    "description": "Configuración por defecto del APIDOC.",
    "lineNumber": 22,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "enabled",
        "description": "Habilita la creación del apidoc."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'Apidoc'",
        "defaultRaw": "'Apidoc'",
        "name": "title",
        "description": "Título de la página del apidoc."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'Documentación'",
        "defaultRaw": "'Documentación'",
        "name": "name",
        "description": "Título principal del apidoc."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'1.0.0'",
        "defaultRaw": "'1.0.0'",
        "name": "version",
        "description": "Versión principal del apidoc."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Dirección URL utilizada para completar las rutas del apidoc."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "sampleUrl",
        "description": "Dirección URL de las peticiones de ejemplo."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": "Configuración del template."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "header",
        "description": "Configuración del contenido del encabezado del apidoc."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "header.title",
        "description": "Título."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "header.filename",
        "description": "Nombre del archivo."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "footer",
        "description": "Configuración del contenido del pié de página del apidoc."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "footer.title",
        "description": "Título."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "footer.filename",
        "description": "Nombre del archivo."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "lib/config/app.config.js",
    "content": "/** @ignore */ const path = require('path')\n/** @ignore */ const _    = require('lodash')\n\n/** @ignore */ const util = require('../tools/util')\n\n/** @ignore */ const PROJECT_PATH = process.env.PROJECT_PATH = process.env.PROJECT_PATH || process.cwd()\n\n/**\n* Configuración por defecto de las rutas de las carpetas del proyecto.\n* @type {Object}\n* @property {String} project         - Ruta absoluta de la carpeta del proyecto.\n* @property {String} sources='src'   - Ruta absoluta de la carpeta 'src'.\n* @property {String} logs='logs'     - Ruta absoluta de la carpeta 'logs'.\n* @property {String} public='public' - Ruta absoluta de la carpeta 'public'.\n*/\nconst PATH = {}\nPATH.project = process.env.PROJECT_PATH = process.env.PROJECT_PATH || process.cwd()\nPATH.sources = process.env.SOURCES_PATH = path.resolve(PATH.project, process.env.SOURCES_PATH || 'src')\nPATH.logs    = process.env.LOGS_PATH    = path.resolve(PATH.project, process.env.LOGS_PATH    || 'logs')\nPATH.public  = process.env.PUBLIC_PATH  = path.resolve(PATH.project, process.env.PUBLIC_PATH  || 'public')\n\n/**\n* @ignore\n* Fusiona dos objetos, sin fusionar los arrays cuyo contenido sean de tipo básico.\n* @param {Object} objValue - Objeto A\n* @param {Object} srcValue - Objeto B\n*/\nfunction customizer (objValue, srcValue) {\n  if (_.isArray(objValue)) {\n    if (objValue.length > 0 && typeof objValue[0] === 'object') {\n      return _.merge(objValue, srcValue)\n    }\n    return srcValue\n  }\n}\n\n/**\n* @ignore\n* Devuelve el contenido de un archivo de configuración.\n* @param {String} fileName - Nombre del archivo de configuracón.\n* @return {Object}\n*/\nfunction getConfigFile (fileName) {\n  let filesInfo = util.find(PATH.sources, `${fileName}.config.js`)\n  const customConfig = (filesInfo.length > 0) ? _.cloneDeep(require(filesInfo[0].filePath)) : {}\n  const config = _.cloneDeep(require(`./${fileName}.config.js`))\n  _.mergeWith(config, customConfig, customizer)\n  setNodeEnv(fileName, config)\n  return config\n}\n\n/**\n* @ignore\n* Sincroniza las variables de entorno con los .archivos de configuración,\n* dando prioridad a las variables de entorno.\n* @param {String} fileName - Nombre del archivo de configuracón.\n* @param {Object} config   - Configuración.\n*/\nfunction setNodeEnv (fileName, config) {\n  switch (fileName) {\n    case 'logger':\n      if (process.env.COLORS)     { config.colors                  = process.env.COLORS === 'true' } else { process.env.COLORS     = `${config.colors}`                  }\n      if (process.env.LOGGER)     { config.enabled                 = process.env.LOGGER === 'true' } else { process.env.LOGGER     = `${config.enabled}`                 }\n      if (process.env.LOGS_LEVEL) { config.console.transport.level = process.env.LOGS_LEVEL        } else { process.env.LOGS_LEVEL = `${config.console.transport.level}` }\n      break\n    case 'server':\n      if (process.env.START)    { config.start    = process.env.START === 'true'  } else { process.env.START    = `${config.start}`    }\n      if (process.env.LISTEN)   { config.listen   = process.env.LISTEN === 'true' } else { process.env.LISTEN   = `${config.listen}`   }\n      if (process.env.PROTOCOL) { config.protocol = process.env.PROTOCOL          } else { process.env.PROTOCOL = `${config.protocol}` }\n      if (process.env.HOSTNAME) { config.hostname = process.env.HOSTNAME          } else { process.env.HOSTNAME = `${config.hostname}` }\n      if (process.env.PORT)     { config.port     = process.env.PORT              } else { process.env.PORT     = `${config.port}`     }\n      if (process.env.NODE_ENV) { config.env      = process.env.NODE_ENV          } else { process.env.NODE_ENV = `${config.env}`      }\n      break\n    case 'database':\n      if (process.env.SQL_LOG) { config.sqlLog          = process.env.SQL_LOG === 'true' } else { process.env.SQL_LOG  = `${config.sqlLog}`          }\n      if (process.env.SETUP)   { config.setup           = process.env.SETUP   === 'true' } else { process.env.SETUP    = `${config.setup}`           }\n      if (process.env.DB_NAME) { config.database        = process.env.DB_NAME            } else { process.env.DB_NAME  = `${config.database}`        }\n      if (process.env.DB_USER) { config.username        = process.env.DB_USER            } else { process.env.DB_USER  = `${config.username}`        }\n      if (process.env.DB_PASS) { config.password        = process.env.DB_PASS            } else { process.env.DB_PASS  = `${config.password}`        }\n      if (process.env.DIALECT) { config.params.dialect  = process.env.DIALECT            } else { process.env.DIALECT  = `${config.params.dialect}`  }\n      if (process.env.DB_HOST) { config.params.host     = process.env.DB_HOST            } else { process.env.DB_HOST  = `${config.params.host}`     }\n      if (process.env.DB_PORT) { config.params.port     = process.env.DB_PORT            } else { process.env.DB_PORT  = `${config.params.port}`     }\n      if (process.env.DB_TZ)   { config.params.timezone = process.env.DB_TZ              } else { process.env.DB_TZ    = `${config.params.timezone}` }\n      break\n    case 'apidoc':\n      if (process.env.APIDOC) { config.enabled = process.env.APIDOC === 'true' } else { process.env.APIDOC = `${config.enabled}` }\n      break\n  }\n}\n\n/**\n* @ignore\n* Obtiene la información del proyecto.\n* @return {Object}\n*/\nfunction getProjectInfo () {\n  const INFO = {\n    appName      : 'App',\n    appVersion   : '1.0.0',\n    insacVersion : '1.0.0'\n  }\n  let insacPackagePath = path.resolve(PROJECT_PATH, 'node_modules/insac/package.json')\n  let appPackagePath   = path.resolve(PROJECT_PATH, 'package.json')\n  try { INFO.insacVersion = require(insacPackagePath).version } catch (e) {}\n  try {\n    const appPackage = require(appPackagePath)\n    INFO.appName     = _.upperFirst(_.replace(_.words(appPackage.name).toString(), /,/g, ' '))\n    INFO.appVersion  = appPackage.version\n  } catch (e) {}\n  return INFO\n}\n\n/**\n* Configuración de la aplicación.\n* @type {Object}\n* @property {Object} PATH     - Configuración de las rutas de las carpetas del proyecto.\n* @property {Object} LOGGER   - Configuración de logger.\n* @property {Object} SERVER   - Configuración del servidor.\n* @property {Object} DATABASE - Configuración de la base de datos.\n* @property {Object} APIDOC   - Configuración del apidoc.\n* @property {Object} RESPONSE - Configuración del formato de respuesta.\n* @property {Object} PROJECT  - Contiene la información básica del proyecto.\n*/\nconst config = {\n  PATH     : PATH,\n  LOGGER   : getConfigFile('logger'),\n  SERVER   : getConfigFile('server'),\n  DATABASE : getConfigFile('database'),\n  APIDOC   : getConfigFile('apidoc'),\n  RESPONSE : getConfigFile('response'),\n  PROJECT  : getProjectInfo()\n}\n\n// Configuración adicional SERVER\nconfig.SERVER.port = parseInt(`${config.SERVER.port}`)\nconfig.SERVER.protocol = config.SERVER.https ? 'https' : 'http'\n\n// Configuración adicional DATABASE\nconfig.DATABASE.params.logging = config.DATABASE.sqlLog ? sql => console.log(`\\n${sql}\\n`) : false\nconfig.DATABASE.params.port = parseInt(`${config.DATABASE.params.port}`)\nif (config.DATABASE.params.dialect === 'sqlite') {\n  delete config.DATABASE.params.timezone\n  if (typeof config.DATABASE.params.storage === 'undefined') {\n    config.DATABASE.params.storage = `${config.DATABASE.database}.sqlite`\n  }\n}\nif (config.DATABASE.params.dialect === 'mssql') {\n  if (typeof config.DATABASE.params.dialectOptions === 'undefined') {\n    config.DATABASE.params.dialectOptions = { encrypt: true }\n  }\n}\n\nmodule.exports = config\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/config/app.config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/config/app.config.js",
    "static": true,
    "longname": "lib/config/app.config.js~path",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/app.config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "_",
    "memberof": "lib/config/app.config.js",
    "static": true,
    "longname": "lib/config/app.config.js~_",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/config/app.config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "util",
    "memberof": "lib/config/app.config.js",
    "static": true,
    "longname": "lib/config/app.config.js~util",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/app.config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "PROJECT_PATH",
    "memberof": "lib/config/app.config.js",
    "static": true,
    "longname": "lib/config/app.config.js~PROJECT_PATH",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/app.config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "PATH",
    "memberof": "lib/config/app.config.js",
    "static": true,
    "longname": "lib/config/app.config.js~PATH",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/app.config.js",
    "importStyle": null,
    "description": "Configuración por defecto de las rutas de las carpetas del proyecto.",
    "lineNumber": 16,
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "project",
        "description": "Ruta absoluta de la carpeta del proyecto."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'src'",
        "defaultRaw": "'src'",
        "name": "sources",
        "description": "Ruta absoluta de la carpeta 'src'."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'logs'",
        "defaultRaw": "'logs'",
        "name": "logs",
        "description": "Ruta absoluta de la carpeta 'logs'."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'public'",
        "defaultRaw": "'public'",
        "name": "public",
        "description": "Ruta absoluta de la carpeta 'public'."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "customizer",
    "memberof": "lib/config/app.config.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/config/app.config.js~customizer",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/app.config.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 28,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "objValue",
        "description": "Objeto A"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "srcValue",
        "description": "Objeto B"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "getConfigFile",
    "memberof": "lib/config/app.config.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/config/app.config.js~getConfigFile",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/app.config.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 43,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "Nombre del archivo de configuracón."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "setNodeEnv",
    "memberof": "lib/config/app.config.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/config/app.config.js~setNodeEnv",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/app.config.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 59,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "Nombre del archivo de configuracón."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuración."
      }
    ],
    "return": null
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "getProjectInfo",
    "memberof": "lib/config/app.config.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/config/app.config.js~getProjectInfo",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/app.config.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 96,
    "ignore": true,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "config",
    "memberof": "lib/config/app.config.js",
    "static": true,
    "longname": "lib/config/app.config.js~config",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/app.config.js",
    "importStyle": null,
    "description": "Configuración de la aplicación.",
    "lineNumber": 124,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "PATH",
        "description": "Configuración de las rutas de las carpetas del proyecto."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "LOGGER",
        "description": "Configuración de logger."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "SERVER",
        "description": "Configuración del servidor."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "DATABASE",
        "description": "Configuración de la base de datos."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "APIDOC",
        "description": "Configuración del apidoc."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "RESPONSE",
        "description": "Configuración del formato de respuesta."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "PROJECT",
        "description": "Contiene la información básica del proyecto."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "file",
    "name": "lib/config/database.config.js",
    "content": "/**\n* Configuración por defecto de la base de datos.\n* @type {Object}\n* @property {Boolean} setup=false          - Habilita la instalación de la base de datos cuando se ejecuta la aplicación.\n* @property {Boolean} sqlLog=false         - Habilita los logs de las consultas SQL.\n* @property {String}  username='postgres'  - Nombre de usuario.\n* @property {String}  password='postgres'  - Contraseña del usuario.\n* @property {String}  database='_exampple' - Nombre de la base de datos.\n* @property {Object}  params]              - Parametros de configuración de la base de datos.\n* @property {Object}  onSetup]             - Parametros de configuración que se utilizan cuando se instala la aplicación.\n*/\nconst DATABASE = {\n  setup  : false,\n  sqlLog : false,\n\n  username : 'postgres',\n  password : 'postgres',\n  database : '_example',\n\n  // http://docs.sequelizejs.com/class/lib/sequelize.js~Sequelize.html#instance-constructor-constructor\n  params: {\n    dialect          : 'postgres', // postgres, mysql, mssql, sqlite\n    host             : '127.0.0.1',\n    port             : 5432, // postgres: 5432, mysql: 3306, mssql: 1433\n    timezone         : '+00:00',\n    lang             : 'es',\n    logging          : false,\n    operatorsAliases : false,\n\n    define: {\n      underscored     : true,\n      freezeTableName : true,\n      timestamps      : true,\n      paranoid        : true,\n      createdAt       : '_fecha_creacion',\n      updatedAt       : '_fecha_modificacion',\n      deletedAt       : '_fecha_eliminacion'\n    }\n  },\n\n  // Para controlar la instalación de la base de datos\n  onSetup: {\n    modules: [],\n\n    dropDatabase   : false,\n    createDatabase : true,\n\n    dropSchemas   : false,\n    createSchemas : true,\n\n    dropTables   : true,\n    createTables : true,\n\n    createSeeders: true\n  }\n}\n\nmodule.exports = DATABASE\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/config/database.config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "DATABASE",
    "memberof": "lib/config/database.config.js",
    "static": true,
    "longname": "lib/config/database.config.js~DATABASE",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/database.config.js",
    "importStyle": null,
    "description": "Configuración por defecto de la base de datos.",
    "lineNumber": 12,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "setup",
        "description": "Habilita la instalación de la base de datos cuando se ejecuta la aplicación."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "sqlLog",
        "description": "Habilita los logs de las consultas SQL."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'postgres'",
        "defaultRaw": "'postgres'",
        "name": "username",
        "description": "Nombre de usuario."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'postgres'",
        "defaultRaw": "'postgres'",
        "name": "password",
        "description": "Contraseña del usuario."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'_exampple'",
        "defaultRaw": "'_exampple'",
        "name": "database",
        "description": "Nombre de la base de datos."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params]",
        "description": "Parametros de configuración de la base de datos."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "onSetup]",
        "description": "Parametros de configuración que se utilizan cuando se instala la aplicación."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 96,
    "kind": "file",
    "name": "lib/config/logger.config.js",
    "content": "/**\n* Configuración por defecto de logger.\n* @type {Object}\n* @property {Boolean} enabled=true - Habilita los logs.\n* @property {Boolean} colors=true  - Habilita los colores de los logs.\n* @property {Object}  console      - Configuración de la salida en la consola.\n* @property {Object}  file         - Configuración de la salida en ficheros.\n* @property {Object}  include      - Configura el registro de los datos de entrada y salida.\n*/\nconst LOGGER = {\n  enabled : true,\n  colors  : true,\n\n  console: {\n    timestamp : true, // Muestra el timestamp\n    reqId     : true, // Muestra el id de la petición\n    transport : {\n      level : 'info', // Nivel de detalle\n      json  : false\n    }\n  },\n\n  file: {\n    // fatal: 0, error: 1, warn: 2, notice: 3, info: 4, verbose: 5, debug: 6, silly: 7\n    levels    : ['error', 'warn', 'info'],\n    transport : {\n      json     : true,\n      maxsize  : 5242880,\n      maxFiles : 5\n    }\n  },\n\n  // Habilita el registro de los datos de entrada y salida\n  include: {\n    request: {\n      path: true\n    },\n\n    response: {\n      success  : true,\n      error    : true,\n      error500 : true\n    },\n\n    input: {\n      headers : false,\n      params  : true,\n      query   : true,\n      body    : true\n    },\n\n    output: {\n      data: false\n    }\n  }\n}\n\nmodule.exports = LOGGER\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/config/logger.config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "LOGGER",
    "memberof": "lib/config/logger.config.js",
    "static": true,
    "longname": "lib/config/logger.config.js~LOGGER",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/logger.config.js",
    "importStyle": null,
    "description": "Configuración por defecto de logger.",
    "lineNumber": 10,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "enabled",
        "description": "Habilita los logs."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "colors",
        "description": "Habilita los colores de los logs."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "console",
        "description": "Configuración de la salida en la consola."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "Configuración de la salida en ficheros."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "include",
        "description": "Configura el registro de los datos de entrada y salida."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 98,
    "kind": "file",
    "name": "lib/config/response.config.js",
    "content": "/**\n* Configuración por defecto del formato de respuestas de las peticiones.\n* @type {Object}\n* @property {Boolean}  all200=false  - Fuerza el envío de una respuesta exitosa para todas las peticiones\n* @property {Function} successFormat - Formato de las peticiones finalizadas exitosamente.\n* @property {Function} errorFormat   - Formato de las peticiones finalizadas con error.\n*/\nconst RESPONSE = {\n  all200: false,\n\n  successFormat: (result) => {\n    const RESULT = {\n      status  : result.status,\n      code    : result.code,\n      message : result.message\n    }\n    if (result.metadata) { RESULT.metadata = result.metadata }\n    if (result.data)     { RESULT.data     = result.data }\n    return RESULT\n  },\n\n  errorFormat: (result) => {\n    result.errors.forEach(err => {\n      if (process.env.NODE_ENV === 'production' || !err.dev) delete err.dev\n    })\n    return {\n      status  : result.status,\n      code    : result.code,\n      message : result.message,\n      errors  : result.errors\n    }\n  }\n}\n\nmodule.exports = RESPONSE\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/config/response.config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "name": "RESPONSE",
    "memberof": "lib/config/response.config.js",
    "static": true,
    "longname": "lib/config/response.config.js~RESPONSE",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/response.config.js",
    "importStyle": null,
    "description": "Configuración por defecto del formato de respuestas de las peticiones.",
    "lineNumber": 8,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "all200",
        "description": "Fuerza el envío de una respuesta exitosa para todas las peticiones"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "successFormat",
        "description": "Formato de las peticiones finalizadas exitosamente."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "errorFormat",
        "description": "Formato de las peticiones finalizadas con error."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "lib/config/server.config.js",
    "content": "/**\n* Configuración por defecto del servidor.\n* @type {Object}\n* @property {Boolean} start=true           - Habilita la carga de los componentes del servidor.\n* @property {Boolean} listen=true          - Habilita el listen del servidor cuando se ejecuta la aplicación.\n* @property {String}  protocol='http'      - Protocolo. Valor asignado automáticamente según la propiedad 'SERVER.https'\n* @property {String}  hostname='localhost' - Nombre del host.\n* @property {String}  port=4000            - Puerto del servidor.\n* @property {String}  env='development'    - Entorno de ejecución.\n* @property {Boolean} cors=true            - Habilita los cors.\n* @property {Object}  corsOptions          - Configuración de los cors. Mas información en: https://github.com/expressjs/cors\n* @property {Boolean} helmet=true          - Habilita la librería helmet.\n* @property {Object}  helmetOptions        - Configuración de helmet. Mas información en: https://github.com/helmetjs/helmet\n* @property {Boolean} https=false          - Habilita la ejecución por https.\n* @property {Object}  httpsOptions         - Opciones de configuración del servidor cuando se ejecuta por https.\n*/\nconst SERVER = {\n  start  : true,\n  listen : true,\n\n  protocol : 'http',\n  hostname : 'localhost',\n  port     : 4000,\n  env      : 'development',\n\n  // https://github.com/expressjs/cors#configuration-options\n  cors        : true,\n  corsOptions : {\n    'origin'                       : '*',\n    'methods'                      : 'GET,POST,PUT,DELETE,OPTIONS',\n    'preflightContinue'            : true,\n    'Access-Control-Allow-Headers' : 'Authorization,Content-Type,Content-Length'\n  },\n\n  // https://helmetjs.github.io/docs/\n  helmet        : true,\n  helmetOptions : {},\n\n  // https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener\n  https        : false,\n  httpsOptions : {}\n}\n\nmodule.exports = SERVER\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/config/server.config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "SERVER",
    "memberof": "lib/config/server.config.js",
    "static": true,
    "longname": "lib/config/server.config.js~SERVER",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/config/server.config.js",
    "importStyle": null,
    "description": "Configuración por defecto del servidor.",
    "lineNumber": 17,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "start",
        "description": "Habilita la carga de los componentes del servidor."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "listen",
        "description": "Habilita el listen del servidor cuando se ejecuta la aplicación."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'http'",
        "defaultRaw": "'http'",
        "name": "protocol",
        "description": "Protocolo. Valor asignado automáticamente según la propiedad 'SERVER.https'"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'localhost'",
        "defaultRaw": "'localhost'",
        "name": "hostname",
        "description": "Nombre del host."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "4000",
        "defaultRaw": 4000,
        "name": "port",
        "description": "Puerto del servidor."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "'development'",
        "defaultRaw": "'development'",
        "name": "env",
        "description": "Entorno de ejecución."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "cors",
        "description": "Habilita los cors."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "corsOptions",
        "description": "Configuración de los cors. Mas información en: https://github.com/expressjs/cors"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "helmet",
        "description": "Habilita la librería helmet."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "helmetOptions",
        "description": "Configuración de helmet. Mas información en: https://github.com/helmetjs/helmet"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "https",
        "description": "Habilita la ejecución por https."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "httpsOptions",
        "description": "Opciones de configuración del servidor cuando se ejecuta por https."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 102,
    "kind": "file",
    "name": "lib/core/Apidoc.js",
    "content": "/** @ignore */ const path = require('path')\n\n/** @ignore */ const ApidocCreator      = require('../libs/ApidocCreator')\n/** @ignore */ const InputDataValidator = require('../libs/InputDataValidator')\n/** @ignore */ const ResponseHandler    = require('../libs/ResponseHandler')\n/** @ignore */ const SequelizeOptions   = require('../libs/SequelizeOptions')\n\n/** @ignore */ const Field  = require('../libs/FieldCreator')\n\n/** @ignore */ const util   = require('../tools/util')\n\n/**\n* Módulo encargado de automatizar la creación del apidoc.\n*/\nclass Apidoc {\n  /**\n  * Crea una instancia de la clase Apidoc.\n  */\n  constructor () {\n    /**\n    * Contiene el apidoc en texto plano, por módulos.\n    * @type {Object}\n    */\n    this.apidocContent = {}\n\n    /**\n    * Enrutador del apidoc.\n    * @type {Object}\n    */\n    this.router = null\n  }\n\n  /**\n  * Inicializa las propiedades de la instancia.\n  * @param {Function} app - Instancia del servidor express.\n  */\n  onInit (app) {\n    this.apidocContent = {}\n    this.router        = ApidocCreator.router((route) => {\n      const MODULE = route.moduleName\n      app[route.method](\n        route.path,\n        this._inputLogsMiddleware(app, route),\n        this._successMiddleware(app, route),\n        this._validatorMiddleware(route),\n        this._optionsMiddleware(app, route),\n        route.middleware || [],\n        route.controller\n      )\n      if (!this.apidocContent[MODULE]) { this.apidocContent[MODULE] = '' }\n      this.apidocContent[MODULE] += `\\n${route.apidoc}\\n`\n    })\n  }\n\n  /**\n  * Indica si el apidoc está habilitado.\n  * @return {Boolean}\n  */\n  isEnabled () {\n    return process.env.APIDOC === 'true'\n  }\n\n  /**\n  * Elimina el directorio que contiene la documentación de los servicios (apidoc).\n  * @param {Function} app - Instancia del servidor express.\n  */\n  remove (app) {\n    const APIDOC_PATH = path.resolve(app.config.PATH.public, 'apidoc')\n    try {\n      if (util.isDir(APIDOC_PATH)) { util.rmdir(APIDOC_PATH) }\n    } catch (e) {\n      app.logger.appWarn(`No se pudo eliminar la carpeta '${APIDOC_PATH.replace(app.config.PATH.project, '')}'.`, e.message)\n    }\n  }\n\n  /**\n  * Construye el apidoc.\n  * @param {Function} app - Instancia del servidor express.\n  * @return {Promise}\n  */\n  async build (app) {\n    const templatePath = path.resolve(__dirname, '../apidoc/template')\n    const tmpPath      = path.resolve(__dirname, '../../.temp')\n    util.mkdir(tmpPath)\n    if (app.config.APIDOC.header) {\n      let HEADER_PATH     = path.resolve(app.config.PATH.project, `./${app.config.APIDOC.header.filename}`)\n      let HEADER_PATH_TMP = path.resolve(tmpPath, app.config.APIDOC.header.filename)\n      if (!util.isFile(HEADER_PATH)) { HEADER_PATH = path.resolve(__dirname, `./../apidoc/HEADER.md`) }\n      util.copyFile(HEADER_PATH, HEADER_PATH_TMP)\n    }\n    if (app.config.APIDOC.footer) {\n      let FOOTER_PATH     = path.resolve(app.config.PATH.project, `./${app.config.APIDOC.footer.filename}`)\n      let FOOTER_PATH_TMP = path.resolve(tmpPath, app.config.APIDOC.footer.filename)\n      if (!util.isFile(FOOTER_PATH)) { FOOTER_PATH = path.resolve(__dirname, `./../apidoc/FOOTER.md`) }\n      util.copyFile(FOOTER_PATH, FOOTER_PATH_TMP)\n    }\n    util.writeFile(path.resolve(tmpPath, 'apidoc.json'), JSON.stringify(app.config.APIDOC, null, 2))\n    app.modules.forEach(mod => {\n      if (app[mod].hasComponent('resources', '.route.js')) {\n        util.writeFile(path.resolve(tmpPath, `doc/${mod}/apidoc.js`), this.apidocContent[mod] || '')\n      }\n    })\n    const output = path.resolve(app.config.PATH.public, 'apidoc')\n    try { util.rmdir(output) } catch (e) { }\n    if (this.isEnabled()) {\n      const resourceModules = app.getResourceModules()\n      for (let i in resourceModules) {\n        const mod = resourceModules[i]\n        try {\n          await this._createApidoc(`doc/${mod}`, `${output}/${mod}`, templatePath, tmpPath)\n          await this._updateIndex(app, output, mod)\n          app.logger.appPrimary('[apidoc]', `Módulo ${mod} ... ${app.logger.OK}`)\n        } catch (e) {\n          app.logger.appError('[apidoc]', `Módulo ${mod} ... ${app.logger.FAIL}\\n`)\n          throw e\n        }\n      }\n    }\n    app.logger.appPrimary()\n    try { util.rmdir(tmpPath) } catch (e) { }\n  }\n\n  /**\n  * Devuelve un middleware que muestra logs de los datos de entrada.\n  * @param {Function} app   - Instancia del servidor express.\n  * @param {Object}   route - Propiedades de la ruta.\n  * @return {Function}\n  */\n  _inputLogsMiddleware (app, route) {\n    if (route.inputLogs) {\n      return (req, res, next) => {\n        app.logger.inputHeaders(req)\n        app.logger.inputParams(req)\n        app.logger.inputQuery(req)\n        app.logger.inputBody(req)\n        return next()\n      }\n    }\n    return []\n  }\n\n  /**\n  * Devuelve un middleware para validar los datos de entrada de un ruta.\n  * @param {Object}   route - Propiedades de la ruta.\n  * @return {Function}\n  */\n  _validatorMiddleware (route) {\n    return InputDataValidator.validate(route.input)\n  }\n\n  /**\n  * Adiciona las funciones de tipo success en el response, para enviar respuestas exitosas.\n  * @param {Function} app   - Instancia del servidor.\n  * @param {Object}   route - Propiedades de la ruta.\n  * @return {Function}\n  */\n  _successMiddleware (app, route) {\n    function onSuccess (result, req) {\n      if (route.outputFilter) {\n        result.data = SequelizeOptions.filter(result.data, {\n          query  : req.query,\n          output : route.output,\n          plain  : route.plain\n        })\n      }\n      req.endAt = Date.now()\n      app.logger.outputData(req, result)\n      app.logger.responseSuccess(req, result)\n    }\n    return ResponseHandler.success({ successFormat: app.config.RESPONSE.successFormat, onSuccess, all200: app.config.RESPONSE.all200 })\n  }\n\n  /**\n  * Adiciona la variable options en el request para realizar consultas sequelize.\n  * @param {Function} app   - Instancia del servidor.\n  * @param {Object}   route - Propiedades de la ruta.\n  * @return {Function}\n  */\n  _optionsMiddleware (app, route) {\n    const MODULE   = route.moduleName\n    const RESOURCE = route.resourceName\n    const MODEL    = (MODULE && RESOURCE && app[MODULE].models) ? app[MODULE].models[RESOURCE] : undefined\n    const IS_LIST  = Array.isArray(route.output)\n    function createOptions (req) {\n      if (IS_LIST) {\n        req.query.limit  = req.query.limit || (Field.LIMIT() ? Field.LIMIT().defaultValue : 50)\n        req.query.page   = req.query.page  || (Field.PAGE()  ? Field.PAGE().defaultValue  : 1)\n        req.query.offset = (req.query.page >= 1) ? ((req.query.page - 1) * req.query.limit) : 0\n        if (MODEL) {\n          req.query.distinct = true\n          req.query.col      = MODEL.primaryKeyAttributes[0]\n        }\n      }\n      return SequelizeOptions.create({ query: req.query, output: route.output, model: MODEL, keys: true })\n    }\n    return (req, res, next) => {\n      req.options = createOptions(req)\n      next()\n    }\n  }\n\n  /**\n  * Ejecuta el comando para crear el APIDOC.\n  * @param {String} input    - Ruta del directorio de entrada.\n  * @param {String} output   - Ruta del directorio de salida.\n  * @param {String} template - Ruta del directorio del template.\n  * @param {String} execPath - Ruta desde donde se ejecutará el comando.\n  * @return {Promise}\n  */\n  async _createApidoc (input, output, template, execPath) {\n    try {\n      await util.cmd(`node \"../../apidoc/bin/apidoc\" -i \"${input}\" -o \"${output}\" -t \"${template}\"`, execPath)\n    } catch (e) {\n      try {\n        await util.cmd(`node \"../node_modules/apidoc/bin/apidoc\" -i \"${input}\" -o \"${output}\" -t \"${template}\"`, execPath)\n      } catch (e) {\n        try {\n          await util.cmd(`apidoc -i \"${input}\" -o \"${output}\" -t \"${template}\"`, execPath)\n        } catch (e) {\n          if (typeof e === 'string' && (e.includes('apidoc: not found') || e.includes('no se reconoce como un comando'))) {\n            throw new Error(`ApidocJS no se encuentra instalado: Ejecute 'npm install -g apidoc' para solucionarlo.`)\n          }\n          throw e\n        }\n      }\n    }\n  }\n\n  /**\n  * Actualiza la propiedad href del archivo index.html.\n  * @param {Function} app    - Instancia del servidor de express.\n  * @param {!String}  output - Ruta del directorio que contiene al archivo index.html\n  * @param {String}   mod    - Nombre del módulo al que pertenece el apidoc.\n  */\n  _updateIndex (app, output, mod) {\n    const INDEX_PATH = path.resolve(output, `${mod}/index.html`)\n    const URL        = app.config.APIDOC.url\n    if (!util.isFile(INDEX_PATH)) {\n      let emptyContent = util.readFile(path.resolve(__dirname, '../apidoc/empty/index.html'))\n      emptyContent = emptyContent.replace('{{INDEX_PAGE_URL}}', `${app.config.APIDOC.url}`)\n      return util.writeFile(INDEX_PATH, emptyContent)\n    }\n    let indexContent   = util.readFile(INDEX_PATH)\n    const BASE_HREF    = indexContent.indexOf(`<base href=\"./\">`) !== -1\n    const REPLACE      = BASE_HREF ? `<base href=\"./\">`             : `<head>`\n    const REPLACE_WITH = BASE_HREF ? `<base href=\"${URL}/apidoc/${mod}/\">` : `<head>\\n  <base href=\"${URL}/apidoc/${mod}/\">`\n    indexContent = indexContent.replace(REPLACE, REPLACE_WITH)\n    util.writeFile(INDEX_PATH, indexContent)\n  }\n}\n\nmodule.exports = Apidoc\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/core/Apidoc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/core/Apidoc.js",
    "static": true,
    "longname": "lib/core/Apidoc.js~path",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Apidoc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "ApidocCreator",
    "memberof": "lib/core/Apidoc.js",
    "static": true,
    "longname": "lib/core/Apidoc.js~ApidocCreator",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Apidoc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "InputDataValidator",
    "memberof": "lib/core/Apidoc.js",
    "static": true,
    "longname": "lib/core/Apidoc.js~InputDataValidator",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Apidoc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "ResponseHandler",
    "memberof": "lib/core/Apidoc.js",
    "static": true,
    "longname": "lib/core/Apidoc.js~ResponseHandler",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Apidoc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "SequelizeOptions",
    "memberof": "lib/core/Apidoc.js",
    "static": true,
    "longname": "lib/core/Apidoc.js~SequelizeOptions",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Apidoc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "Field",
    "memberof": "lib/core/Apidoc.js",
    "static": true,
    "longname": "lib/core/Apidoc.js~Field",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Apidoc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "variable",
    "name": "util",
    "memberof": "lib/core/Apidoc.js",
    "static": true,
    "longname": "lib/core/Apidoc.js~util",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Apidoc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "class",
    "name": "Apidoc",
    "memberof": "lib/core/Apidoc.js",
    "static": true,
    "longname": "lib/core/Apidoc.js~Apidoc",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Apidoc.js",
    "importStyle": null,
    "description": "Módulo encargado de automatizar la creación del apidoc.",
    "lineNumber": 15,
    "interface": false
  },
  {
    "__docId__": 111,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/core/Apidoc.js~Apidoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Apidoc.js~Apidoc#constructor",
    "access": "public",
    "description": "Crea una instancia de la clase Apidoc.",
    "lineNumber": 19
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "apidocContent",
    "memberof": "lib/core/Apidoc.js~Apidoc",
    "static": false,
    "longname": "lib/core/Apidoc.js~Apidoc#apidocContent",
    "access": "public",
    "description": "Contiene el apidoc en texto plano, por módulos.",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 113,
    "kind": "member",
    "name": "router",
    "memberof": "lib/core/Apidoc.js~Apidoc",
    "static": false,
    "longname": "lib/core/Apidoc.js~Apidoc#router",
    "access": "public",
    "description": "Enrutador del apidoc.",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "onInit",
    "memberof": "lib/core/Apidoc.js~Apidoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Apidoc.js~Apidoc#onInit",
    "access": "public",
    "description": "Inicializa las propiedades de la instancia.",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": null
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "isEnabled",
    "memberof": "lib/core/Apidoc.js~Apidoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Apidoc.js~Apidoc#isEnabled",
    "access": "public",
    "description": "Indica si el apidoc está habilitado.",
    "lineNumber": 59,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "remove",
    "memberof": "lib/core/Apidoc.js~Apidoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Apidoc.js~Apidoc#remove",
    "access": "public",
    "description": "Elimina el directorio que contiene la documentación de los servicios (apidoc).",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": null
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "build",
    "memberof": "lib/core/Apidoc.js~Apidoc",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Apidoc.js~Apidoc#build",
    "access": "public",
    "description": "Construye el apidoc.",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "_inputLogsMiddleware",
    "memberof": "lib/core/Apidoc.js~Apidoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Apidoc.js~Apidoc#_inputLogsMiddleware",
    "access": "private",
    "description": "Devuelve un middleware que muestra logs de los datos de entrada.",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "Propiedades de la ruta."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "_validatorMiddleware",
    "memberof": "lib/core/Apidoc.js~Apidoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Apidoc.js~Apidoc#_validatorMiddleware",
    "access": "private",
    "description": "Devuelve un middleware para validar los datos de entrada de un ruta.",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "Propiedades de la ruta."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "_successMiddleware",
    "memberof": "lib/core/Apidoc.js~Apidoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Apidoc.js~Apidoc#_successMiddleware",
    "access": "private",
    "description": "Adiciona las funciones de tipo success en el response, para enviar respuestas exitosas.",
    "lineNumber": 157,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "Propiedades de la ruta."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "_optionsMiddleware",
    "memberof": "lib/core/Apidoc.js~Apidoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Apidoc.js~Apidoc#_optionsMiddleware",
    "access": "private",
    "description": "Adiciona la variable options en el request para realizar consultas sequelize.",
    "lineNumber": 179,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "Propiedades de la ruta."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "_createApidoc",
    "memberof": "lib/core/Apidoc.js~Apidoc",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Apidoc.js~Apidoc#_createApidoc",
    "access": "private",
    "description": "Ejecuta el comando para crear el APIDOC.",
    "lineNumber": 210,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": "Ruta del directorio de entrada."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "output",
        "description": "Ruta del directorio de salida."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": "Ruta del directorio del template."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "execPath",
        "description": "Ruta desde donde se ejecutará el comando."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "_updateIndex",
    "memberof": "lib/core/Apidoc.js~Apidoc",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Apidoc.js~Apidoc#_updateIndex",
    "access": "private",
    "description": "Actualiza la propiedad href del archivo index.html.",
    "lineNumber": 235,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor de express."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "output",
        "description": "Ruta del directorio que contiene al archivo index.html"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "mod",
        "description": "Nombre del módulo al que pertenece el apidoc."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "lib/core/Dao.js",
    "content": "/** @ignore */ const OP = require('sequelize').Op\n\n/**\n* Clase Dao (Data Access Object).\n*/\nclass Dao {\n  /**\n  * Crea una instancia.\n  * @param {SequelizeModel} model - Modelo Sequelize.\n  */\n  constructor (model) {\n    /**\n    * Modelo.\n    * @type {SequelizeModel}\n    */\n    this.model = model\n  }\n\n  /**\n  * Devuelve un registro.\n  * @param {Transaction} t         - Transacción.\n  * @param {Object}      [options] - Opciones de consulta.\n  * @return {Promise}\n  */\n  _findOne (t, options = {}) {\n    options.transaction = t\n    return this.model.findOne(options)\n  }\n\n  /**\n  * Devuelve una lista de registros.\n  * @param {Transaction} t         - Transacción.\n  * @param {Object}      [options] - Opciones de consulta.\n  * @return {Promise}\n  */\n  _findAll (t, options = {}) {\n    options.transaction = t\n    return this.model.findAll(options)\n  }\n\n  /**\n  * Devuelve el número de registros existentes.\n  * @param {Transaction} t         - Transacción.\n  * @param {Object}      [options] - Opciones de consulta.\n  * @return {Promise}\n  */\n  _count (t, options = {}) {\n    options.transaction = t\n    return this.model.count(options)\n  }\n\n  /**\n  * Devuelve una lista de registros y la cantidad de registros existentes.\n  * @param {Transaction} t         - Transacción.\n  * @param {Object}      [options] - Opciones de consulta.\n  * @return {Promise}\n  */\n  _findAndCountAll (t, options = {}) {\n    options.transaction = t\n    return this.model.findAndCountAll(options)\n  }\n\n  /**\n  * Crea un registro.\n  * @param {Transaction} [t]       - Transacción.\n  * @param {!Object}     data      - Datos del registro.\n  * @param {Object}      [options] - Opciones de consulta.\n  * @return {Promise}\n  */\n  _create (t, data, options = {}) {\n    options.transaction = t\n    return this.model.create(data, options)\n  }\n\n  /**\n  * Actualiza un registro.\n  * @param {Transaction} [t]       - Transacción.\n  * @param {!Object}     data      - Datos del registro.\n  * @param {Object}      [options] - Opciones de consulta.\n  * @return {Promise}\n  */\n  _update (t, data, options = {}) {\n    options.transaction = t\n    return this.model.update(data, options)\n  }\n\n  /**\n  * Elimina un registro.\n  * @param {Transaction} [t]       - Transacción.\n  * @param {Object}      [options] - Opciones de consulta.\n  * @return {Promise}\n  */\n  _destroy (t, options = {}) {\n    options.transaction = t\n    return this.model.destroy(options)\n  }\n\n  /**\n  * Restaura un registro.\n  * @param {Transaction} [t]       - Transacción.\n  * @param {Object}      [options] - Opciones de consulta.\n  * @return {Promise}\n  */\n  _restore (t, options = {}) {\n    options.transaction = t\n    return this.model.restore(options)\n  }\n\n  /**\n  * Devuelve un registro.\n  * @param {Transaction} [t]             - Transacción.\n  * @param {Object}      [where]         - Opción de consulta where.\n  * @param {Object}      [not]           - Opción de consulta not.\n  * @param {String[]}    [include=[]]    - Associaciones a incluir.\n  * @param {Boolean}     [paranoid=true] - Indica si se excluirán los registros eliminados.\n  * @return {Promise}\n  */\n  findOne (t, where, not, include = [], paranoid = true) {\n    const options = { transaction: t, paranoid }\n    this._wherenot(options, where, not)\n    this._include(options, include)\n    return this.model.findOne(options)\n  }\n\n  /**\n  * Devuelve una lista de registros.\n  * @param {Transaction} [t]             - Transacción.\n  * @param {Object}      [where]         - Opción de consulta where.\n  * @param {Object}      [not]           - Opción de consulta not.\n  * @param {String[]}    [include=[]]    - Associaciones a incluir.\n  * @param {Boolean}     [paranoid=true] - Indica si se excluirán los registros eliminados.\n  * @return {Promise}\n  */\n  findAll (t, where, not, include = [], paranoid = true) {\n    const options = { transaction: t, paranoid }\n    this._wherenot(options, where, not)\n    this._include(options, include)\n    return this.model.findAll(options)\n  }\n\n  /**\n  * Devuelve la cantidad de registros existentes.\n  * @param {Transaction} [t]             - Transacción.\n  * @param {Object}      [where]         - Opción de consulta where.\n  * @param {Object}      [not]           - Opción de consulta not.\n  * @param {String[]}    [include=[]]    - Associaciones a incluir.\n  * @param {Boolean}     [paranoid=true] - Indica si se excluirán los registros eliminados.\n  * @return {Promise}\n  */\n  count (t, where, not, include = [], paranoid = true) {\n    const options = { transaction: t, paranoid }\n    this._wherenot(options, where, not)\n    this._include(options, include)\n    return this.model.count(options)\n  }\n\n  /**\n  * Devuelve una lista de registros y la cantidad de registros existentes.\n  * @param {Transaction} [t]             - Transacción.\n  * @param {Object}      [where]         - Opción de consulta where.\n  * @param {Object}      [not]           - Opción de consulta not.\n  * @param {String[]}    [include=[]]    - Associaciones a incluir.\n  * @param {Boolean}     [paranoid=true] - Indica si se excluirán los registros eliminados.\n  * @return {Promise}\n  */\n  findAndCountAll (t, where, not, include = [], paranoid = true) {\n    const options = { transaction: t, paranoid }\n    this._wherenot(options, where, not)\n    this._include(options, include)\n    return this.model.findAndCountAll(options)\n  }\n\n  /**\n  * Crea un registro.\n  * @param {Transaction} [t]  - Transacción.\n  * @param {!Object}     data - Datos del registro.\n  * @return {Promise}\n  */\n  create (t, data) {\n    const options = { transaction: t }\n    return this.model.create(data, options)\n  }\n\n  /**\n  * Actualiza un registro.\n  * @param {Transaction} [t]             - Transacción.\n  * @param {!Object}     data            - Datos del registro.\n  * @param {Object}      [where]         - Opción de consulta where.\n  * @param {Object}      [not]           - Opción de consulta not.\n  * @param {Boolean}     [paranoid=true] - Indica si se excluirán los registros eliminados.\n  * @return {Promise}\n  */\n  update (t, data, where, not, paranoid = true) {\n    const options = { transaction: t, paranoid }\n    this._wherenot(options, where, not)\n    return this.model.update(data, options)\n  }\n\n  /**\n  * Elimina un registro.\n  * @param {Transaction} [t]             - Transacción.\n  * @param {Object}      [data]          - Datos a modificar antes de eliminar.\n  * @param {Object}      [where]         - Opción de consulta where.\n  * @param {Object}      [not]           - Opción de consulta not.\n  * @param {Boolean}     [paranoid=true] - Indica si se excluirán los registros eliminados.\n  * @return {Promise}\n  */\n  async destroy (t, data, where, not, paranoid = true) {\n    const options = { transaction: t, paranoid: false }\n    this._wherenot(options, where, not)\n    if (data) { await this.model.update(data, options) }\n    if (paranoid === false) { options.force = true }\n    return this.model.destroy(options)\n  }\n\n  /**\n  * Restaura un registro.\n  * @param {Transaction} [t]     - Transacción..\n  * @param {Object}      [data]  - Datos a modificar antes de restaurar.\n  * @param {Object}      [where] - Opción de consulta where.\n  * @param {Object}      [not]   - Opción de consulta not.\n  * @return {Promise}\n  */\n  async restore (t, data, where, not) {\n    const options = { transaction: t, paranoid: false }\n    this._wherenot(options, where, not)\n    if (data) { await this.model.update(data, options) }\n    options.paranoid = true\n    return this.model.restore(options)\n  }\n\n  /**\n  * Incluye las consultas where y not al objeto options.\n  * @param {!Object} options - Objeto options.\n  * @param {Object}  [where] - Opción de consulta where.\n  * @param {Object}  [not]   - Opción de consulta not.\n  */\n  _wherenot (options, where, not) {\n    if (where) { options.where = where }\n    if (not) {\n      options.where = where || {}\n      options.where[OP.not] = not\n    }\n  }\n\n  /**\n  * Incluye las asociaciones al objeto options.\n  * Si existen asociaciones anidadas, estas deben estar delimitadas por un punto.\n  * @param {!Object}  options - Objeto options.\n  * @param {String[]} include - Associaciones a incluir.\n  */\n  _include (options, include = []) {\n    if (include && include.length > 0) {\n      options.include = []\n      include.forEach(association => {\n        const models = association.split('.')\n        const length = models.length\n        function add (opt, i) {\n          if (i > length - 1) return\n          opt.include  = opt.include || []\n          let include  = { association: models[i] }\n          let included = false\n          opt.include.forEach(inc => { if (inc.association === models[i]) { include = inc; included = true } })\n          if (!included) opt.include.push(include)\n          add(include, i + 1)\n        }\n        add(options, 0)\n      })\n    }\n  }\n}\n\nmodule.exports = Dao\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/core/Dao.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "variable",
    "name": "OP",
    "memberof": "lib/core/Dao.js",
    "static": true,
    "longname": "lib/core/Dao.js~OP",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Dao.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "class",
    "name": "Dao",
    "memberof": "lib/core/Dao.js",
    "static": true,
    "longname": "lib/core/Dao.js~Dao",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Dao.js",
    "importStyle": null,
    "description": "Clase Dao (Data Access Object).",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 129,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#constructor",
    "access": "public",
    "description": "Crea una instancia.",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "Modelo Sequelize."
      }
    ]
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "model",
    "memberof": "lib/core/Dao.js~Dao",
    "static": false,
    "longname": "lib/core/Dao.js~Dao#model",
    "access": "public",
    "description": "Modelo.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "SequelizeModel"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "_findOne",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#_findOne",
    "access": "private",
    "description": "Devuelve un registro.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "Transacción."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Opciones de consulta."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "_findAll",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#_findAll",
    "access": "private",
    "description": "Devuelve una lista de registros.",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "Transacción."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Opciones de consulta."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "_count",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#_count",
    "access": "private",
    "description": "Devuelve el número de registros existentes.",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "Transacción."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Opciones de consulta."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "_findAndCountAll",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#_findAndCountAll",
    "access": "private",
    "description": "Devuelve una lista de registros y la cantidad de registros existentes.",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "Transacción."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Opciones de consulta."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "_create",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#_create",
    "access": "private",
    "description": "Crea un registro.",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": true,
        "name": "t",
        "description": "Transacción."
      },
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Datos del registro."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Opciones de consulta."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "_update",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#_update",
    "access": "private",
    "description": "Actualiza un registro.",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": true,
        "name": "t",
        "description": "Transacción."
      },
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Datos del registro."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Opciones de consulta."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "_destroy",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#_destroy",
    "access": "private",
    "description": "Elimina un registro.",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": true,
        "name": "t",
        "description": "Transacción."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Opciones de consulta."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "_restore",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#_restore",
    "access": "private",
    "description": "Restaura un registro.",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": true,
        "name": "t",
        "description": "Transacción."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Opciones de consulta."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "findOne",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#findOne",
    "access": "public",
    "description": "Devuelve un registro.",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": true,
        "name": "t",
        "description": "Transacción."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "where",
        "description": "Opción de consulta where."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "not",
        "description": "Opción de consulta not."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "include",
        "description": "Associaciones a incluir."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "paranoid",
        "description": "Indica si se excluirán los registros eliminados."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "findAll",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#findAll",
    "access": "public",
    "description": "Devuelve una lista de registros.",
    "lineNumber": 134,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": true,
        "name": "t",
        "description": "Transacción."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "where",
        "description": "Opción de consulta where."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "not",
        "description": "Opción de consulta not."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "include",
        "description": "Associaciones a incluir."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "paranoid",
        "description": "Indica si se excluirán los registros eliminados."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "count",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#count",
    "access": "public",
    "description": "Devuelve la cantidad de registros existentes.",
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": true,
        "name": "t",
        "description": "Transacción."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "where",
        "description": "Opción de consulta where."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "not",
        "description": "Opción de consulta not."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "include",
        "description": "Associaciones a incluir."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "paranoid",
        "description": "Indica si se excluirán los registros eliminados."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "findAndCountAll",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#findAndCountAll",
    "access": "public",
    "description": "Devuelve una lista de registros y la cantidad de registros existentes.",
    "lineNumber": 166,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": true,
        "name": "t",
        "description": "Transacción."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "where",
        "description": "Opción de consulta where."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "not",
        "description": "Opción de consulta not."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "include",
        "description": "Associaciones a incluir."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "paranoid",
        "description": "Indica si se excluirán los registros eliminados."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "create",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#create",
    "access": "public",
    "description": "Crea un registro.",
    "lineNumber": 179,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": true,
        "name": "t",
        "description": "Transacción."
      },
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Datos del registro."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "update",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#update",
    "access": "public",
    "description": "Actualiza un registro.",
    "lineNumber": 193,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": true,
        "name": "t",
        "description": "Transacción."
      },
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Datos del registro."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "where",
        "description": "Opción de consulta where."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "not",
        "description": "Opción de consulta not."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "paranoid",
        "description": "Indica si se excluirán los registros eliminados."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "destroy",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#destroy",
    "access": "public",
    "description": "Elimina un registro.",
    "lineNumber": 208,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": true,
        "name": "t",
        "description": "Transacción."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "data",
        "description": "Datos a modificar antes de eliminar."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "where",
        "description": "Opción de consulta where."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "not",
        "description": "Opción de consulta not."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "paranoid",
        "description": "Indica si se excluirán los registros eliminados."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "restore",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#restore",
    "access": "public",
    "description": "Restaura un registro.",
    "lineNumber": 224,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": true,
        "name": "t",
        "description": "Transacción.."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "data",
        "description": "Datos a modificar antes de restaurar."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "where",
        "description": "Opción de consulta where."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "not",
        "description": "Opción de consulta not."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "_wherenot",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#_wherenot",
    "access": "private",
    "description": "Incluye las consultas where y not al objeto options.",
    "lineNumber": 238,
    "params": [
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Objeto options."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "where",
        "description": "Opción de consulta where."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "not",
        "description": "Opción de consulta not."
      }
    ],
    "return": null
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "_include",
    "memberof": "lib/core/Dao.js~Dao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Dao.js~Dao#_include",
    "access": "private",
    "description": "Incluye las asociaciones al objeto options.\nSi existen asociaciones anidadas, estas deben estar delimitadas por un punto.",
    "lineNumber": 252,
    "params": [
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Objeto options."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "include",
        "description": "Associaciones a incluir."
      }
    ],
    "return": null
  },
  {
    "__docId__": 149,
    "kind": "file",
    "name": "lib/core/Database.js",
    "content": "/** @ignore */ const Sequelize   = require('sequelize')\n/** @ignore */ const path        = require('path')\n/** @ignore */ const _           = require('lodash')\n\n/** @ignore */ const SeedCreator = require('../libs/SeedCreator')\n\n/** @ignore */ const util        = require('../tools/util')\n\n/**\n* Módulo encargado de gestionar la base de datos.\n*/\nclass Database {\n  /**\n  * Crea una instancia de la clase Database.\n  */\n  constructor () {\n    /**\n    * Modelos que no pertenecen a ningun esquema.\n    * @type {Function}\n    */\n    this.models = {}\n\n    /**\n    * Instancia sequelize.\n    * @type {Sequelize}\n    */\n    this.sequelize = null\n\n    /**\n    * Referencia hacia la clase Sequelize\n    * @type {Sequelize}\n    */\n    this.Sequelize = Sequelize\n  }\n\n  /**\n  * Inicializa las propiedades de la instancia.\n  * @param {!Function} app - Instancia del servidor express.\n  */\n  onInit (app) {\n    this.models = {}\n    this._verifyPackagesForDialect(app, app.config.DATABASE.params.dialect)\n    this.sequelize = this._createSequelizeInstance(app)\n  }\n\n  /**\n  * Importa un modelo Sequelize.\n  * @param {!Function} app      - Instancia del servidor express.\n  * @param {!Module}   MODULE   - Instancia del módulo.\n  * @param {!String}   filePath - Ruta del modelo.\n  * @return {SequelizeModel}\n  */\n  importModel (app, MODULE, filePath) {\n    const MODULE_NAME        = MODULE.getName()\n    const MODEL              = this.sequelize.import(filePath)\n    const MODEL_SCHEMA       = MODEL.options.schema\n    MODEL.options.moduleName = MODULE_NAME\n    if (!MODEL_SCHEMA) {\n      app.DB.models[MODEL.name] = MODEL\n    }\n    if (MODEL_SCHEMA && MODULE.getSchema() && MODEL_SCHEMA !== MODULE.getSchema()) {\n      const data = `  Mueva el modelo al módulo correspondiente o defínalo sin la opción schema.\\n`\n      app.logger.appError(`El modelo '${MODEL.name}' está definido bajo el esquema '${MODEL_SCHEMA}'.`, data)\n      process.exit(1)\n    }\n    const SIZE = `${MODEL_SCHEMA ? `${MODEL_SCHEMA}.` : ''}${MODEL.name}`.length\n    if (SIZE > MODULE._max) { MODULE._max = SIZE }\n    return MODEL\n  }\n\n  /**\n  * Asocia los modelos de un módulo.\n  * @param {!Function} app    - Instancia del servidor express.\n  * @param {!Module}   MODULE - Instancia del módulo.\n  */\n  associateModels (app, MODULE) {\n    Object.keys(MODULE.models).forEach((key) => {\n      if ('associate' in MODULE.models[key]) { MODULE.models[key].associate(app) }\n      updateForeignKeys(app, MODULE.models[key])\n    })\n  }\n\n  /**\n  * Crea una instancia de Sequelize con privilegios para crear bases de datos.\n  * @param {!Function} app - Instancia del servidor express.\n  * @return {Sequelize}\n  */\n  createRootInstance (app) {\n    const DIALECT = app.config.DATABASE.params.dialect\n    let database = null\n    switch (DIALECT) {\n      case 'postgres' : database = 'postgres'; break\n      case 'mysql'    : database = null;       break\n      case 'mssql'    : database = 'master';   break\n      case 'sqlite'   : database = 'database'; break\n      default: database = null\n    }\n    const username = app.config.DATABASE.username\n    const password = app.config.DATABASE.password\n    const params   = _.cloneDeep(app.config.DATABASE.params)\n    return new Sequelize(database, username, password, params)\n  }\n\n  /**\n  * Elimina una base de datos.\n  * @param {!Function} app - Instancia del servidor express.\n  */\n  async dropDatabase (app) {\n    const DATABASE = app.config.DATABASE.database\n    let sequelizeROOT\n    try {\n      sequelizeROOT = this.createRootInstance(app)\n      await sequelizeROOT.authenticate()\n      await sequelizeROOT.query(`DROP DATABASE ${DATABASE}`)\n      app.logger.appPrimary('DROP', `DATABASE ${DATABASE} ... ${app.logger.OK}`)\n      app.logger.appPrimary()\n    } catch (e) {\n      const DIALECT = app.config.DATABASE.params.dialect\n      const DATABASE_DOES_NOT_EXISTS = (\n        (DIALECT === 'postgres' && e.parent.code   === '3D000')             ||\n        (DIALECT === 'mysql'    && e.parent.code   === 'ER_DB_DROP_EXISTS') ||\n        (DIALECT === 'mssql'    && e.parent.number === 3701)                ||\n        (DIALECT === 'sqlite'   && e.parent.code   === 'SQLITE_ERROR')\n      )\n      if (e.name === 'SequelizeDatabaseError' && DATABASE_DOES_NOT_EXISTS) {\n        app.logger.appPrimary('DROP', `DATABASE ${DATABASE} ... (No existe) ${app.logger.OK}`)\n        app.logger.appPrimary()\n      } else {\n        app.logger.appError('DROP', `DATABASE ${DATABASE} ... ${app.logger.FAIL}`)\n        app.logger.appPrimary()\n        throw e\n      }\n    } finally {\n      await sequelizeROOT.close()\n    }\n  }\n\n  /**\n  * Crea una base de datos.\n  * @param {!Function} app - Instancia del servidor express.\n  */\n  async createDatabase (app) {\n    const DATABASE = app.config.DATABASE.database\n    let sequelizeROOT\n    try {\n      sequelizeROOT = this.createRootInstance(app)\n      await sequelizeROOT.authenticate()\n      await sequelizeROOT.query(`CREATE DATABASE ${DATABASE}`)\n      app.logger.appPrimary('CREATE', `DATABASE ${DATABASE} ... ${app.logger.OK}`)\n      app.logger.appPrimary()\n    } catch (e) {\n      const DIALECT = app.config.DATABASE.params.dialect\n      const DATABASE_ALREADY_EXIST = (\n        (DIALECT === 'postgres' && e.parent.code   === '42P04')               ||\n        (DIALECT === 'mysql'    && e.parent.code   === 'ER_DB_CREATE_EXISTS') ||\n        (DIALECT === 'mssql'    && e.parent.number === 1801)                  ||\n        (DIALECT === 'sqlite'   && e.parent.code   === 'SQLITE_ERROR')\n      )\n      if (e.name === 'SequelizeDatabaseError' && DATABASE_ALREADY_EXIST) {\n        app.logger.appPrimary('CREATE', `DATABASE ${DATABASE} ... (Ya existe) ${app.logger.OK}`)\n        app.logger.appPrimary()\n      } else {\n        app.logger.appError('CREATE', `DATABASE ${DATABASE} ... ${app.logger.FAIL}`)\n        app.logger.appPrimary()\n        throw e\n      }\n    } finally {\n      await sequelizeROOT.close()\n    }\n  }\n\n  /**\n  * Elimina un esquema de base de datos.\n  * @param {!Function} app    - Instancia del servidor express.\n  * @param {!Module}   MODULE - Instancia del módulo.\n  */\n  async dropSchema (app, MODULE) {\n    const schema = MODULE.getSchema()\n    try {\n      if (await existSchema(app, schema)) {\n        await app.DB.sequelize.dropSchema(schema, { force: true })\n        app.logger.appPrimary('DROP', `SCHEMA ${schema} ... ${app.logger.OK}`)\n        app.logger.appPrimary()\n      } else {\n        app.logger.appPrimary('DROP', `SCHEMA ${schema} ... (No existe) ${app.logger.OK}`)\n        app.logger.appPrimary()\n      }\n    } catch (e) {\n      app.logger.appError('DROP', `SCHEMA ${schema} ... ${app.logger.FAIL}`)\n      app.logger.appPrimary()\n      throw e\n    }\n  }\n\n  /**\n  * Crea un esquema de base de datos.\n  * @param {!Function} app    - Instancia del servidor express.\n  * @param {!Module}   MODULE - Instancia del módulo.\n  * @return {Promise}\n  */\n  async createSchema (app, MODULE) {\n    const schema = MODULE.getSchema()\n    try {\n      if (!await existSchema(app, schema)) {\n        await app.DB.sequelize.createSchema(schema, { force: true })\n        app.logger.appPrimary('CREATE', `SCHEMA ${schema} ... ${app.logger.OK}`)\n        app.logger.appPrimary()\n      } else {\n        app.logger.appPrimary('CREATE', `SCHEMA ${schema} ... (Ya existe) ${app.logger.OK}`)\n        app.logger.appPrimary()\n      }\n    } catch (e) {\n      app.logger.appError('CREATE', `SCHEMA ${schema} ... ${app.logger.FAIL}`)\n      app.logger.appPrimary()\n      throw e\n    }\n  }\n\n  /**\n  * Elimina las tablas que pertenecen a un determinado módulo.\n  * @param {!Function} app    - Instancia del servidor express.\n  * @param {!Module}   MODULE - Instancia del módulo.\n  */\n  async dropTables (app, MODULE) {\n    const loaded = []\n    async function _sync (MODEL) {\n      if (MODULE.getName() !== MODEL.options.moduleName) { return }\n      if (MODEL.associations) {\n        for (let i in MODEL.associations) {\n          const ASSOCIATION = MODEL.associations[i]\n          if (ASSOCIATION.associationType === 'BelongsTo') {\n            if (!loaded.includes(ASSOCIATION.target.name)) {\n              await _sync(ASSOCIATION.target)\n            }\n          }\n        }\n      }\n      await dropTable(app, MODEL)\n      loaded.push(MODEL.name)\n    }\n    for (let key in MODULE.models) {\n      if (!loaded.includes(key)) {\n        await _sync(MODULE.models[key])\n      }\n    }\n    app.logger.appPrimary()\n  }\n\n  /**\n  * Crea las tablas que pertenecen a un determinado módulo.\n  * @param {!Function} app    - Instancia del servidor express.\n  * @param {!Module}   MODULE - Instancia del módulo.\n  */\n  async createTables (app, MODULE) {\n    const loaded = []\n    async function _sync (MODEL) {\n      if (MODULE.getName() !== MODEL.options.moduleName) { return }\n      if (MODEL.associations) {\n        for (let i in MODEL.associations) {\n          const ASSOCIATION = MODEL.associations[i]\n          if (ASSOCIATION.associationType === 'BelongsTo') {\n            if (!loaded.includes(ASSOCIATION.target.name)) {\n              await _sync(ASSOCIATION.target)\n            }\n          }\n        }\n      }\n      await createTable(app, MODEL)\n      loaded.push(MODEL.name)\n    }\n    for (let key in MODULE.models) {\n      if (!loaded.includes(key)) {\n        await _sync(MODULE.models[key])\n      }\n    }\n    app.logger.appPrimary()\n  }\n\n  /**\n  * Crea los seeders que pertenecen a un determinado módulo.\n  * @param {!Function} app    - Instancia del servidor express.\n  * @param {!Module}   MODULE - Instancia del módulo.\n  */\n  async createSeeders (app, MODULE) {\n    if (app.config.SERVER.env === 'production') {\n      const SEEDERS_PATH = path.resolve(MODULE.config.modulePath, 'seeders/production')\n      if (util.isDir(SEEDERS_PATH)) await this._createSeeders(app, MODULE, SEEDERS_PATH)\n    } else {\n      const SEEDERS_PATH = path.resolve(MODULE.config.modulePath, 'seeders')\n      if (util.isDir(SEEDERS_PATH)) await this._createSeeders(app, MODULE, SEEDERS_PATH)\n    }\n  }\n\n  /**\n  * Crea una instancia de la clase Sequelize.\n  * @param {!Function} app - Instancia del servidor express.\n  * @return {Sequelize}\n  */\n  _createSequelizeInstance (app) {\n    try {\n      return new Sequelize(\n        app.config.DATABASE.database,\n        app.config.DATABASE.username,\n        app.config.DATABASE.password,\n        app.config.DATABASE.params\n      )\n    } catch (err) {\n      if (err.name === 'SequelizeConnectionError') {\n        app.logger.appError('No se pudo conectar con la base de datos.', err.message)\n        process.exit(1)\n      }\n      throw err\n    }\n  }\n\n  /**\n  * Verifica que todos los paquetes según el dialecto seleccionado, se encuentren instalados.\n  * @param {!Function} app     - Instancia del servidor express.\n  * @param {!String}   dialect - Nombre del dialecto de base de datos.\n  */\n  _verifyPackagesForDialect (app, dialect) {\n    const MSG = 'Cannot find module'\n    let packageName\n    switch (dialect) {\n      case 'postgres' : try { require('pg')      } catch (e) { if (e.message.includes(MSG)) packageName = 'pg'      } break\n      case 'mysql'    : try { require('mysql2')  } catch (e) { if (e.message.includes(MSG)) packageName = 'mysql2'  } break\n      case 'mssql'    : try { require('tedious') } catch (e) { if (e.message.includes(MSG)) packageName = 'tedious' } break\n      case 'sqlite'   : try { require('sqlite3') } catch (e) { if (e.message.includes(MSG)) packageName = 'sqlite3' } break\n      default:\n        const data = `  Dialectos soportados: postgres, mysql, mssql y sqlite.\\n`\n        app.logger.appError(null, `No existe el dialecto '${dialect}'.`, data)\n    }\n    if (packageName) {\n      const data = `  Ejecute el comando \"npm install --save ${packageName}\" para solucionar el problema.\\n`\n      app.logger.appError(null, `Se requiere el módulo '${packageName}'.`, data)\n    }\n  }\n\n  /**\n  * Instala los seeders de un módulo.\n  * @param {!Function} app         - Instancia del servidor express.\n  * @param {!Module}   MODULE      - Instancia del modulo.\n  * @param {!String}   seedersPath - Ruta del directorio seeders.\n  * @return {Promise}\n  */\n  async _createSeeders (app, MODULE, seedersPath) {\n    const loaded     = []\n    await app.DB.sequelize.transaction(async (t) => {\n      async function _seed (modelName, filePath) {\n        const model = MODULE.models[modelName]\n        if (model.options.schema && model.options.schema !== MODULE.config.schema) { return }\n        if (model.associations) {\n          for (let i in model.associations) {\n            if (model.associations[i].associationType === 'BelongsTo') {\n              if (!loaded.includes(model.associations[i].target.name)) {\n                await util.findAsync(seedersPath, '.seed.js', async ({ fileName, filePath, dirName }) => {\n                  if (dirName !== 'production' || app.config.SERVER.env === 'production') {\n                    if (fileName === model.associations[i].target.name) {\n                      await _seed(fileName, filePath)\n                    }\n                  }\n                })\n              }\n            }\n          }\n        }\n        loaded.push(modelName)\n        await createSeed(app, model, t, filePath)\n      }\n\n      await util.findAsync(seedersPath, '.seed.js', async ({ fileName, filePath, dirName }) => {\n        if (dirName !== 'production' || app.config.SERVER.env === 'production') {\n          if (!loaded.includes(fileName)) {\n            await _seed(fileName, filePath)\n          }\n        }\n      })\n    })\n  }\n}\n\n/**\n* @ignore\n* Indica si existe un determinado esquema de base de datos.\n* @param {!Function} app    - Instancia del servidor express.\n* @param {!String}   schema - Nombre del esquema de base de datos.\n* @return {Boolean}\n*/\nasync function existSchema (app, schema) {\n  const DATABASE = app.config.DATABASE.database\n  const DIALECT  = app.config.DATABASE.params.dialect\n  const ALL_SCHEMAS = await app.DB.sequelize.showAllSchemas()\n  function existInPostgreSQL () {\n    return ALL_SCHEMAS.includes(schema)\n  }\n  function existInMSSQL () {\n    return ALL_SCHEMAS.includes(schema)\n  }\n  function existInMySql () {\n    for (let i in ALL_SCHEMAS) {\n      const obj = ALL_SCHEMAS[i]\n      const key = `Tables_in_${DATABASE}`\n      if (obj[key].startsWith(`${schema}.`)) return true\n    }\n  }\n  function existInSQLite () {\n    for (let i in ALL_SCHEMAS) {\n      const obj = ALL_SCHEMAS[i]\n      if (obj.startsWith(`${schema}.`)) return true\n    }\n  }\n  if (DIALECT === 'postgres') return existInPostgreSQL()\n  if (DIALECT === 'mssql')    return existInMSSQL()\n  if (DIALECT === 'mysql')    return existInMySql()\n  if (DIALECT === 'sqlite')   return existInSQLite()\n  return false\n}\n\n/**\n* @ignore\n* Indica si existe una tabla.\n* @param {!Function}       app   - Instancia del servidor express.\n* @param {!SequelizeModel} MODEL - Instancia de un modelo.\n* @return {Boolean}\n*/\nasync function existTable (app, MODEL) {\n  try {\n    const schema = MODEL.options.schema ? `${MODEL.options.schema}.` : ''\n    await app.DB.sequelize.query(`SELECT 1 FROM ${schema}${MODEL.name}`)\n    return true\n  } catch (e) {\n    const DIALECT = app.config.DATABASE.params.dialect\n    const TABLE_DOES_NOT_EXISTS = (\n      (DIALECT === 'postgres' && e.parent.code   === '42P01')            || // ok\n      (DIALECT === 'mysql'    && e.parent.code   === 'ER_NO_SUCH_TABLE') || // ok\n      (DIALECT === 'mssql'    && e.parent.number === 208)                ||\n      (DIALECT === 'sqlite'   && e.parent.code   === 'SQLITE_ERROR')\n    )\n    if (e.name === 'SequelizeDatabaseError' && TABLE_DOES_NOT_EXISTS) {\n      return false\n    }\n    throw e\n  }\n}\n\n/**\n* @ignore\n* Elimina una tabla.\n* @param {!Function}       app   - Instancia del servidor express.\n* @param {!SequelizeModel} MODEL - Instancia de un modelo.\n*/\nasync function dropTable (app, MODEL) {\n  const MAX          = app[MODEL.options.moduleName]._max + 4\n  const schema       = MODEL.options.schema ? `${MODEL.options.schema}.` : ''\n  const tableNameLog = `${_.padEnd(`${schema}${MODEL.name} `, MAX, '.')}`\n  try {\n    if (!await existTable(app, MODEL)) {\n      app.logger.appPrimary('DROP', `TABLE ${tableNameLog} (No existe) ${app.logger.OK}`)\n    } else {\n      await MODEL.drop({ force: true })\n      app.logger.appPrimary('DROP', `TABLE ${tableNameLog} ${app.logger.OK}`)\n    }\n  } catch (e) {\n    app.logger.appError('DROP', `TABLE ${tableNameLog} ${app.logger.FAIL}\\n`)\n    throw e\n  }\n}\n\n/**\n* @ignore\n* Crea una tabla.\n* @param {!Function}       app   - Instancia del servidor express.\n* @param {!SequelizeModel} MODEL - Instancia de un modelo.\n*/\nasync function createTable (app, MODEL) {\n  const MAX          = app[MODEL.options.moduleName]._max + 4\n  const schema       = MODEL.options.schema ? `${MODEL.options.schema}.` : ''\n  const tableNameLog = `${_.padEnd(`${schema}${MODEL.name} `, MAX, '.')}`\n  try {\n    if (await existTable(app, MODEL)) {\n      app.logger.appPrimary('CREATE', `TABLE ${tableNameLog} (Ya existe) ${app.logger.OK}`)\n    } else {\n      await MODEL.sync({ force: true })\n      app.logger.appPrimary('CREATE', `TABLE ${tableNameLog} ${app.logger.OK}`)\n    }\n  } catch (e) {\n    app.logger.appError('CREATE', `TABLE ${tableNameLog} ${app.logger.FAIL}\\n`)\n    throw e\n  }\n}\n\n/**\n* @ignore\n* Crea los registros de un fichero seed.\n* @param {!Function}            app      - Instancia del servidor express.\n* @param {!SequelizeModel}      MODEL    - Instancia de un modelo.\n* @param {SequelizeTransaction} t        - Transacción creada por sequelize.\n* @param {!String}              filePath - Ruta del archivo seed.\n*/\nasync function createSeed (app, MODEL, t, filePath) {\n  const MAX         = app[MODEL.options.moduleName]._max + 5\n  const DATA        = await util.loadFile(app, filePath)\n  const schemas     = getAllSetupSchemas(app)\n  const fileNameLog = _.padEnd(`${MODEL.name}.seed.js `, MAX, '.')\n  try {\n    const result    = await SeedCreator.create(MODEL, DATA, { schemas, logger: app.logger, transaction: t })\n    const resultMsg = result.entries !== 1 ? `Se insertaron ${result.entries} registros` : `Se insertó ${result.entries} registro`\n    app.logger.appPrimary('[resultado]', `${fileNameLog} (${resultMsg} en ${result.elapsedTime} seg.) ${app.logger.OK}\\n`)\n  } catch (e) {\n    app.logger.appError('[resultado]', `${fileNameLog} ${app.logger.FAIL}\\n`)\n    throw e\n  }\n}\n\n/**\n* @ignore\n* Actualiza las propiedades de las claves foráneas.\n* @param {!Function}       app   - Instancia del servidor express.\n* @param {!SequelizeModel} MODEL - Instancia de un modelo.\n*/\nfunction updateForeignKeys (app, MODEL) {\n  Object.keys(MODEL.attributes).forEach(fieldName => {\n    const FIELD = MODEL.attributes[fieldName]\n    if (FIELD.references) {\n      const F_TARGET = FIELD.targetKey\n      const F_MODEL = FIELD.references.model\n      let F_MODEL_INSTANCE\n      if (typeof F_MODEL === 'string') {\n        F_MODEL_INSTANCE = app.DB.models[F_MODEL]\n      } else {\n        const F_SCHEMA = FIELD.references.model.schema\n        const F_TABLE  = FIELD.references.model.tableName\n        const F_MODULE = F_SCHEMA.toUpperCase()\n        F_MODEL_INSTANCE = app[F_MODULE].models[F_TABLE]\n      }\n      FIELD.validate = F_MODEL_INSTANCE.attributes[F_TARGET].validate\n      FIELD.comment  = FIELD.comment || F_MODEL_INSTANCE.attributes[F_TARGET].comment\n      FIELD.example  = FIELD.example || F_MODEL_INSTANCE.attributes[F_TARGET].example\n    }\n  })\n}\n\n/**\n* @ignore\n* Obtiene una lista de todos los esquemas que pueden ser instalados.\n* @param {!Function} app - Instancia del servidor express.\n* @return {String[]}\n*/\nfunction getAllSetupSchemas (app) {\n  const ALLOWED_SCHEMAS = []\n  app.modules.forEach(modName => {\n    if (app[modName] && app[modName].config.setup && app[modName].config.schema) {\n      ALLOWED_SCHEMAS.push(app[modName].config.schema)\n    }\n  })\n  return ALLOWED_SCHEMAS\n}\n\nmodule.exports = Database\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/core/Database.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "Sequelize",
    "memberof": "lib/core/Database.js",
    "static": true,
    "longname": "lib/core/Database.js~Sequelize",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Database.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/core/Database.js",
    "static": true,
    "longname": "lib/core/Database.js~path",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Database.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "name": "_",
    "memberof": "lib/core/Database.js",
    "static": true,
    "longname": "lib/core/Database.js~_",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/core/Database.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "variable",
    "name": "SeedCreator",
    "memberof": "lib/core/Database.js",
    "static": true,
    "longname": "lib/core/Database.js~SeedCreator",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Database.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "variable",
    "name": "util",
    "memberof": "lib/core/Database.js",
    "static": true,
    "longname": "lib/core/Database.js~util",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Database.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "class",
    "name": "Database",
    "memberof": "lib/core/Database.js",
    "static": true,
    "longname": "lib/core/Database.js~Database",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Database.js",
    "importStyle": null,
    "description": "Módulo encargado de gestionar la base de datos.",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 156,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/core/Database.js~Database",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Database.js~Database#constructor",
    "access": "public",
    "description": "Crea una instancia de la clase Database.",
    "lineNumber": 16
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "models",
    "memberof": "lib/core/Database.js~Database",
    "static": false,
    "longname": "lib/core/Database.js~Database#models",
    "access": "public",
    "description": "Modelos que no pertenecen a ningun esquema.",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "sequelize",
    "memberof": "lib/core/Database.js~Database",
    "static": false,
    "longname": "lib/core/Database.js~Database#sequelize",
    "access": "public",
    "description": "Instancia sequelize.",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "Sequelize"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "Sequelize",
    "memberof": "lib/core/Database.js~Database",
    "static": false,
    "longname": "lib/core/Database.js~Database#Sequelize",
    "access": "public",
    "description": "Referencia hacia la clase Sequelize",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "Sequelize"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "onInit",
    "memberof": "lib/core/Database.js~Database",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Database.js~Database#onInit",
    "access": "public",
    "description": "Inicializa las propiedades de la instancia.",
    "lineNumber": 40,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": null
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "importModel",
    "memberof": "lib/core/Database.js~Database",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Database.js~Database#importModel",
    "access": "public",
    "description": "Importa un modelo Sequelize.",
    "lineNumber": 53,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "Module"
        ],
        "spread": false,
        "optional": false,
        "name": "MODULE",
        "description": "Instancia del módulo."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "Ruta del modelo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SequelizeModel"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "associateModels",
    "memberof": "lib/core/Database.js~Database",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Database.js~Database#associateModels",
    "access": "public",
    "description": "Asocia los modelos de un módulo.",
    "lineNumber": 76,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "Module"
        ],
        "spread": false,
        "optional": false,
        "name": "MODULE",
        "description": "Instancia del módulo."
      }
    ],
    "return": null
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "createRootInstance",
    "memberof": "lib/core/Database.js~Database",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Database.js~Database#createRootInstance",
    "access": "public",
    "description": "Crea una instancia de Sequelize con privilegios para crear bases de datos.",
    "lineNumber": 88,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Sequelize"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "dropDatabase",
    "memberof": "lib/core/Database.js~Database",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Database.js~Database#dropDatabase",
    "access": "public",
    "description": "Elimina una base de datos.",
    "lineNumber": 108,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": null
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "createDatabase",
    "memberof": "lib/core/Database.js~Database",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Database.js~Database#createDatabase",
    "access": "public",
    "description": "Crea una base de datos.",
    "lineNumber": 142,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": null
  },
  {
    "__docId__": 168,
    "kind": "method",
    "name": "dropSchema",
    "memberof": "lib/core/Database.js~Database",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Database.js~Database#dropSchema",
    "access": "public",
    "description": "Elimina un esquema de base de datos.",
    "lineNumber": 177,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "Module"
        ],
        "spread": false,
        "optional": false,
        "name": "MODULE",
        "description": "Instancia del módulo."
      }
    ],
    "return": null
  },
  {
    "__docId__": 169,
    "kind": "method",
    "name": "createSchema",
    "memberof": "lib/core/Database.js~Database",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Database.js~Database#createSchema",
    "access": "public",
    "description": "Crea un esquema de base de datos.",
    "lineNumber": 201,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "Module"
        ],
        "spread": false,
        "optional": false,
        "name": "MODULE",
        "description": "Instancia del módulo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "dropTables",
    "memberof": "lib/core/Database.js~Database",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Database.js~Database#dropTables",
    "access": "public",
    "description": "Elimina las tablas que pertenecen a un determinado módulo.",
    "lineNumber": 224,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "Module"
        ],
        "spread": false,
        "optional": false,
        "name": "MODULE",
        "description": "Instancia del módulo."
      }
    ],
    "return": null
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "createTables",
    "memberof": "lib/core/Database.js~Database",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Database.js~Database#createTables",
    "access": "public",
    "description": "Crea las tablas que pertenecen a un determinado módulo.",
    "lineNumber": 254,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "Module"
        ],
        "spread": false,
        "optional": false,
        "name": "MODULE",
        "description": "Instancia del módulo."
      }
    ],
    "return": null
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "createSeeders",
    "memberof": "lib/core/Database.js~Database",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Database.js~Database#createSeeders",
    "access": "public",
    "description": "Crea los seeders que pertenecen a un determinado módulo.",
    "lineNumber": 284,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "Module"
        ],
        "spread": false,
        "optional": false,
        "name": "MODULE",
        "description": "Instancia del módulo."
      }
    ],
    "return": null
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "_createSequelizeInstance",
    "memberof": "lib/core/Database.js~Database",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Database.js~Database#_createSequelizeInstance",
    "access": "private",
    "description": "Crea una instancia de la clase Sequelize.",
    "lineNumber": 299,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Sequelize"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "_verifyPackagesForDialect",
    "memberof": "lib/core/Database.js~Database",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Database.js~Database#_verifyPackagesForDialect",
    "access": "private",
    "description": "Verifica que todos los paquetes según el dialecto seleccionado, se encuentren instalados.",
    "lineNumber": 321,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dialect",
        "description": "Nombre del dialecto de base de datos."
      }
    ],
    "return": null
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "_createSeeders",
    "memberof": "lib/core/Database.js~Database",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Database.js~Database#_createSeeders",
    "access": "private",
    "description": "Instala los seeders de un módulo.",
    "lineNumber": 346,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "Module"
        ],
        "spread": false,
        "optional": false,
        "name": "MODULE",
        "description": "Instancia del modulo."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "seedersPath",
        "description": "Ruta del directorio seeders."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 176,
    "kind": "function",
    "name": "existSchema",
    "memberof": "lib/core/Database.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/core/Database.js~existSchema",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Database.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 389,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": "Nombre del esquema de base de datos."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 177,
    "kind": "function",
    "name": "existTable",
    "memberof": "lib/core/Database.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/core/Database.js~existTable",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Database.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 426,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "MODEL",
        "description": "Instancia de un modelo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 178,
    "kind": "function",
    "name": "dropTable",
    "memberof": "lib/core/Database.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/core/Database.js~dropTable",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Database.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 452,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "MODEL",
        "description": "Instancia de un modelo."
      }
    ],
    "return": null
  },
  {
    "__docId__": 179,
    "kind": "function",
    "name": "createTable",
    "memberof": "lib/core/Database.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/core/Database.js~createTable",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Database.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 475,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "MODEL",
        "description": "Instancia de un modelo."
      }
    ],
    "return": null
  },
  {
    "__docId__": 180,
    "kind": "function",
    "name": "createSeed",
    "memberof": "lib/core/Database.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/core/Database.js~createSeed",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Database.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 500,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "MODEL",
        "description": "Instancia de un modelo."
      },
      {
        "nullable": null,
        "types": [
          "SequelizeTransaction"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "Transacción creada por sequelize."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "Ruta del archivo seed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 181,
    "kind": "function",
    "name": "updateForeignKeys",
    "memberof": "lib/core/Database.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/core/Database.js~updateForeignKeys",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Database.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 521,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "MODEL",
        "description": "Instancia de un modelo."
      }
    ],
    "return": null
  },
  {
    "__docId__": 182,
    "kind": "function",
    "name": "getAllSetupSchemas",
    "memberof": "lib/core/Database.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/core/Database.js~getAllSetupSchemas",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Database.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 549,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 183,
    "kind": "file",
    "name": "lib/core/Logger.js",
    "content": "/** @ignore */ const _      = require('lodash')\n/** @ignore */ const moment = require('moment')\n/** @ignore */ const util   = require('util')\n/** @ignore */ const path   = require('path')\n/** @ignore */ const fs     = require('fs')\n/** @ignore */ const mkdirp = require('mkdirp')\n\n/** @ignore */ const { createLogger, format, transports } = require('winston')\n/** @ignore */ const { printf } = format\n\n/**\n* Clase para crear logs.\n*/\nclass Logger {\n  /**\n  * Crea una instancia de Logger.\n  * @param {Function} app - Instancia del servidor express.\n  */\n  constructor (app) {\n    /**\n    * Configuración de la aplicación.\n    * @type {Object}\n    */\n    this.config = app.config\n\n    /**\n    * Colores para los logs.\n    * @type {Object}\n    */\n    this.colors = {}\n\n    /**\n    * Estilos para los logs.\n    * @type {Object}\n    */\n    this.styles = {}\n\n    /**\n    * Contiene los niveles de logs.\n    * @type {Object}\n    */\n    this.levels = {}\n\n    /**\n    * Contiene los colores asociados a los diferentes niveles de logs.\n    * @type {Object}\n    */\n    this.levelColors = {}\n\n    /**\n    * Instancia de winston logger.\n    * @type {WinstonLogger}\n    */\n    this.winstonLogger = null\n\n    /**\n    * Cadena de texto que representa un Ok.\n    * @type {String}\n    */\n    this.OK = ''\n\n    /**\n    * Cadena de texto que representa un Fail.\n    * @type {String}\n    */\n    this.FAIL = ''\n\n    this.init(app)\n  }\n\n  /**\n  * Inicializa las propiedades.\n  * @param {Function} app\n  */\n  init (app) {\n    const colors = this.colors = {}\n\n    // Colores básicos\n    // ansicolor: https://github.com/shiena/ansicolor/blob/master/README.md\n    colors.BLACK         = `\\x1b[30m`\n    colors.RED           = `\\x1b[31m`\n    colors.GREEN         = `\\x1b[32m`\n    colors.YELLOW        = `\\x1b[33m`\n    colors.BLUE          = `\\x1b[34m`\n    colors.MAGENTA       = `\\x1b[35m`\n    colors.CYAN          = `\\x1b[36m`\n    colors.LIGHT_GREY    = `\\x1b[90m`\n    colors.LIGHT_RED     = `\\x1b[91m`\n    colors.LIGHT_GREEN   = `\\x1b[92m`\n    colors.LIGHT_YELLOW  = `\\x1b[93m`\n    colors.LIGHT_BLUE    = `\\x1b[94m`\n    colors.LIGHT_MAGENTA = `\\x1b[95m`\n    colors.LIGHT_CYAN    = `\\x1b[96m`\n    colors.LIGHT_WHITE   = `\\x1b[97m`\n\n    if (process.env.COLORS === 'false') {\n      Object.keys(colors).forEach(key => { colors[key] = '' })\n    }\n    colors.RESET   = `\\x1b[0m`\n    colors.WHITE = colors.LIGHT_WHITE\n\n    const styles = this.styles = {}\n\n    // Estilos básicos\n    styles.BOLD          = `\\x1b[1m`\n    styles.BOLD_OFF      = `\\x1b[21m`\n    styles.UNDERLINE     = `\\x1b[4m`\n    styles.UNDERLINE_OFF = `\\x1b[24m`\n    styles.BLINK         = `\\x1b[5m`\n    styles.BLINK_OFF     = `\\x1b[25m`\n\n    styles.RESET   = `\\x1b[0m`\n\n    // Colores del sistema\n    colors.PRIMARY = `${styles.BOLD}${colors.LIGHT_BLUE}`\n    colors.ACCENT  = `${styles.BOLD}`\n    colors.TEXT    = `${colors.RESET}`\n\n    colors.FATAL   = `${styles.BOLD}${colors.RED}`\n    colors.ERROR   = `${styles.BOLD}${colors.LIGHT_RED}`\n    colors.WARN    = `${styles.BOLD}${colors.LIGHT_YELLOW}`\n    colors.NOTICE  = `${styles.BOLD}${colors.LIGHT_GREEN}`\n    colors.INFO    = `${styles.BOLD}${colors.LIGHT_WHITE}`\n    colors.VERBOSE = `${styles.BOLD}${colors.LIGHT_CYAN}`\n    colors.DEBUG   = `${styles.BOLD}${colors.LIGHT_BLUE}`\n    colors.SILLY   = `${styles.BOLD}${colors.LIGHT_MAGENTA}`\n\n    const LEVELS = this.levels = {}\n\n    LEVELS.fatal   = 0 // Mensajes críticos\n    LEVELS.error   = 1 // Mensajes de error\n    LEVELS.warn    = 2 // Mensajes de advertencia\n    LEVELS.notice  = 3 // Mensajes importantes\n    LEVELS.info    = 4 // Mensajes informativos\n    LEVELS.verbose = 5 // Mensajes detallados\n    LEVELS.debug   = 6 // Mensajes para el depurador\n    LEVELS.silly   = 7 // Mensajes sin importancia\n\n    this.levelColors = {\n      fatal   : colors.RED,\n      error   : colors.LIGHT_RED,\n      warn    : colors.LIGHT_YELLOW,\n      notice  : colors.LIGHT_GREEN,\n      info    : colors.RESET,\n      verbose : colors.LIGHT_CYAN,\n      debug   : colors.LIGHT_BLUE,\n      silly   : colors.LIGHT_MAGENTA\n    }\n\n    this.winstonLogger = createLogger({\n      levels      : LEVELS,\n      transports  : createTransports(app, this),\n      exitOnError : false\n    })\n\n    this.OK   = `${colors.TEXT}${process.platform === 'linux' ? '\\u2713' : ''}${colors.RESET}`\n    this.FAIL = `${colors.TEXT}${process.platform === 'linux' ? '\\u2715' : 'x'}${colors.RESET}`\n\n    createLoggerFunctions(this)\n  }\n\n  /**\n  * Indica si los logs están habilitados.\n  * @return {Boolean}\n  */\n  isEnabled () {\n    return process.env.LOGGER === 'true'\n  }\n\n  /**\n  * Muestra un mensaje del logo de la aplicación.\n  * @param {!Function} app . Instancia del servidor express.\n  */\n  appLogo (app) {\n    if (!this.isEnabled()) return\n    const colors  = app.logger.colors\n    const WIDTH   = 40\n    const version = _.pad(`Versión ${app.config.PROJECT.insacVersion}`, WIDTH, ' ')\n    let msg = '\\n'\n    msg += ` ${colors.PRIMARY} ${_.pad(`=====================================`, WIDTH, ' ')} ${colors.RESET}\\n`\n    msg += ` ${colors.PRIMARY} ${_.pad(`  ---------------------------------  `, WIDTH, ' ')} ${colors.RESET}\\n`\n    msg +=  ` ${colors.ACCENT} ${_.pad('    I N S A C   F R A M E W O R K    ', WIDTH, ' ')} ${colors.RESET}\\n`\n    msg += ` ${colors.PRIMARY} ${_.pad(`  =================================  `, WIDTH, ' ')} ${colors.RESET}\\n`\n    msg += ` ${colors.PRIMARY} ${_.pad(`-------------------------------------`, WIDTH, ' ')} ${colors.RESET}\\n\\n`\n    msg += ` ${colors.ACCENT} ${version} ${colors.RESET}\\n\\n\\n`\n    msg += ` ${colors.PRIMARY}Sistema :${colors.RESET} ${colors.TEXT}${app.config.PROJECT.appName}${colors.RESET}\\n`\n    msg += ` ${colors.PRIMARY}Versión :${colors.RESET} ${colors.TEXT}${app.config.PROJECT.appVersion}${colors.RESET}\\n`\n    msg += ` ${colors.PRIMARY}Entorno :${colors.RESET} ${colors.TEXT}${app.config.SERVER.env}${colors.RESET}\\n\\n\\n`\n    process.stdout.write(msg)\n  }\n\n  /**\n  * Muestra el título principal de una tarea.\n  * @param {String} title - Título principal.\n  */\n  appTitle (title) {\n    if (!this.isEnabled()) return\n    const colors = this.colors\n    let msg = ''\n    msg += `\\n`\n    msg += ` ${colors.ACCENT}${title}${colors.RESET}\\n`\n    msg += ` ${colors.PRIMARY}${_.pad('', title.length, '=')}${colors.RESET}\\n`\n    msg += `\\n`\n    process.stdout.write(msg)\n  }\n\n  /**\n  * Muestra el título secundario de una tarea.\n  * @param {String} title - Título secundario.\n  */\n  appTitle2 (title) {\n    if (!this.isEnabled()) return\n    const colors = this.colors\n    process.stdout.write(`\\n`)\n    process.stdout.write(` ${colors.ACCENT}${title}${colors.RESET}\\n`)\n    process.stdout.write(`\\n`)\n  }\n\n  /**\n  * Para imprimir mensajes con el color Primary.\n  * @param {String} title   - Título.\n  * @param {String} message - Mensaje.\n  * @param {Object} data    - Datos adicionales.\n  */\n  appPrimary (title = '', message = '', data = '') {\n    if (!this.isEnabled()) return\n    const colors = this.colors\n    const C1 = colors.PRIMARY\n    const C2 = colors.TEXT\n    const C3 = colors.TEXT\n    const RT = colors.RESET\n    process.stdout.write(` ${C1}${title}${RT} ${C2}${message}${RT} ${C3}${data}${RT}\\n`)\n  }\n\n  /**\n  * Para imprimir mensajes con el color Accent.\n  * @param {String} title   - Título.\n  * @param {String} message - Mensaje.\n  * @param {Object} data    - Datos adicionales.\n  */\n  appAccent (title = '', message = '', data = '') {\n    if (!this.isEnabled()) return\n    const colors = this.colors\n    const styles = this.styles\n    const C1 = colors.ACCENT\n    const C2 = colors.TEXT\n    const C3 = colors.TEXT\n    const RT = `${colors.RESET}${styles.RESET}`\n    process.stdout.write(` ${C1}${title}${RT} ${C2}${message}${RT} ${C3}${data}${RT}\\n`)\n  }\n\n  /**\n  * Para imprimir mensajes con el color Error.\n  * @param {String} title   - Título.\n  * @param {String} message - Mensaje.\n  * @param {Object} data    - Datos adicionales.\n  */\n  appError (title = '', message = '', data = '') {\n    if (!this.isEnabled()) return\n    const colors = this.colors\n    const C1 = colors.ERROR\n    const C2 = colors.TEXT\n    const C3 = colors.TEXT\n    const RT = colors.RESET\n    process.stdout.write(` ${C1}${title}${RT} ${C2}${message}${RT} ${C3}${data}${RT}\\n`)\n  }\n\n  /**\n  * Muestra por consola la ruta de una petición.\n  * @param {Request} req - Objeto request.\n  */\n  requestPath (req) {\n    if (!this.isEnabled() || !this.config.LOGGER.include.request.path) return\n    const METHOD    = req.method\n    const PATH_NAME = req._parsedUrl.pathname\n    const MESSAGE   = `[${METHOD}] ${PATH_NAME}`\n    this.info(req, MESSAGE)\n  }\n\n  /**\n  * Muestra por consola el contenido de los headers de una petición.\n  * @param {Request} req - Objeto request.\n  */\n  inputHeaders (req) {\n    if (!this.isEnabled() || !this.config.LOGGER.include.input.headers) return\n    const MESSAGE = `[HEADERS] ${JSON.stringify(req.headers, null, 2)}`\n    if (Object.keys(req.headers).length > 0) this.info(req, MESSAGE)\n  }\n\n  /**\n  * Muestra por consola el contenido de la query de una petición.\n  * @param {Request} req - Objeto request.\n  */\n  inputParams (req) {\n    if (!this.isEnabled() || !this.config.LOGGER.include.input.params) return\n    const MESSAGE = `[PARAMS] ${JSON.stringify(req.params)}`\n    if (Object.keys(req.params).length > 0) this.info(req, MESSAGE)\n  }\n\n  /**\n  * Muestra por consola el contenido de la query de una petición.\n  * @param {Request} req - Objeto request.\n  */\n  inputQuery (req) {\n    if (!this.isEnabled() || !this.config.LOGGER.include.input.query) return\n    const MESSAGE = `[QUERY] ${req._parsedUrl.search}`\n    if (req._parsedUrl.search) this.info(req, MESSAGE)\n  }\n\n  /**\n  * Muestra por console el contenido del body de una petición.\n  * @param {Request} req - Objeto request.\n  */\n  inputBody (req) {\n    if (!this.isEnabled() || !this.config.LOGGER.include.input.body) return\n    const MESSAGE = `[BODY] ${JSON.stringify(req.body, null, 2)}`\n    if (Object.keys(req.body).length > 0) this.info(req, MESSAGE)\n  }\n\n  /**\n  * Muestra por consola el contenido DATA de la respuesta a una petición.\n  * @param {Request}         req    - Objeto request.\n  * @param {ResponseSuccess} result - Resultado.\n  */\n  outputData (req, result) {\n    if (!this.isEnabled() || !this.config.LOGGER.include.output.data) return\n    const MESSAGE = `[DATA] ${JSON.stringify(result.data || {}, null, 2)}`\n    if (Object.keys(result.data || {}).length > 0) this.info(req, MESSAGE)\n  }\n\n  /**\n  * Muestra por consola el resultado de una peticion.\n  * @param {Request}         req    - Objeto request.\n  * @param {ResponseSuccess} result - Resultado.\n  */\n  responseSuccess (req, result) {\n    if (!this.isEnabled() || !this.config.LOGGER.include.response.success) return\n    const elapsedTime = (req.endAt - req.startAt) / 1000\n    let contentLength = result && result.data ? Buffer.byteLength(JSON.stringify(result.data), 'UTF-8') / 1024 : 0\n    contentLength = Math.round(contentLength * 100) / 100\n    const MESSAGE = `[STATUS] ${result.code} ${result.type} (${elapsedTime} seg.) [data: ${contentLength} KB]`\n    this.notice(req, MESSAGE)\n  }\n\n  /**\n  * Muestra por consola errores de tipo 400.\n  * @param {Request}       req - Objeto request.\n  * @param {ResponseError} err - Instancia de un error.\n  */\n  responseError (req, err) {\n    if (!this.isEnabled() || !this.config.LOGGER.include.response.error) return\n    let errors = ''\n    err.errors.forEach(e => { errors += `\\n - ${e.msg}` })\n    if (errors !== '') errors = `${errors}`\n    const MESSAGE = `[STATUS] ${err.code} ${err.type}${errors}`\n    this.warn(req, MESSAGE)\n  }\n\n  /**\n  * Muestra por consola el error producido por un error de tipo 500.\n  * @param {Request}       req - Objeto request.\n  * @param {ResponseError} err - Instancia de un error.\n  */\n  responseError500 (req, err) {\n    if (!this.isEnabled() || !this.config.LOGGER.include.response.error500) return\n    const FECHA     = moment().format('DD/MM/YYYY HH:mm:ss')\n    const METHOD    = req.method\n    const PATH_NAME = req._parsedUrl.pathname\n    const QUERY     = req._parsedUrl.search ? req._parsedUrl.search : ''\n    const BODY      = `\\n${JSON.stringify(req.body, null, 2)}`\n    let message = `\\n ${_.pad(' ERROR INTERNO ', 50, '\\\\')} \\n\\n`\n    message += ` - FECHA      : ${FECHA}\\n`\n    message += ` - REQUEST ID : ${req.id}\\n`\n    message += ` - IP ORIGEN  : ${req.connection.remoteAddress}\\n`\n    message += ` - NAVEGADOR  : ${req.headers['user-agent']}\\n`\n    message += ` - URL        : [${METHOD}] ${PATH_NAME}\\n`\n    message += ` - QUERY      : ${QUERY}\\n`\n    message += ` - BODY       : ${BODY}\\n`\n    const ERR = util.inspect(err, false, null)\n    const MESSAGE = `[STATUS] ${err.code} ${err.type}\\n${message}\\n${ERR}`\n    this.error(req, MESSAGE)\n  }\n}\n\n/**\n* @ignore\n* Crea una lista de transportes que utiliza WinstonLogger.\n* @param {!Function}    app    - Instancia del servidor express.\n* @param {!Logger}      logger - Instancia de logger.\n* @return {Transport[]}\n*/\nfunction createTransports (app, logger) {\n  const TRANSPORTS = []\n  if (logger.isEnabled()) {\n    TRANSPORTS.push(new transports.Console({\n      format           : printf(consoleFormat(app)),\n      level            : logger.config.LOGGER.console.transport.level,\n      handleExceptions : false,\n      colorize         : false,\n      json             : logger.config.LOGGER.console.transport.json\n    }))\n  }\n\n  const LOGS_PATH = logger.config.PATH.logs\n\n  logger.config.LOGGER.file.levels.forEach(levelName => {\n    const LEVEL_PATH = path.resolve(LOGS_PATH, levelName)\n    if (!fs.existsSync(LEVEL_PATH)) { mkdirp.sync(LEVEL_PATH) }\n    TRANSPORTS.push(new transports.File({\n      format           : printf(fileFormat(app)),\n      level            : levelName,\n      handleExceptions : false,\n      colorize         : false,\n      json             : logger.config.LOGGER.file.transport.json,\n      filename         : path.resolve(LEVEL_PATH, `app.${levelName}.log`),\n      maxsize          : logger.config.LOGGER.file.transport.maxsize,\n      maxFiles         : logger.config.LOGGER.file.transport.maxFiles\n    }))\n  })\n  return TRANSPORTS\n}\n\n/**\n* @ignore\n* Devuelve una cadena de texto con formato personalizado para los logs de la consola.\n* @param {!Function} app - Instancia del servidor express.\n* @return {String}\n*/\nfunction consoleFormat (app) {\n  return (info) => {\n    const RESULT = {\n      timestamp : '',\n      reqId     : '',\n      level     : info.level,\n      message   : info.message,\n      data      : ''\n    }\n    if (info.data) {\n      const dataSTR = util.inspect(info.data, false, null)\n      if (dataSTR) { RESULT.data = `\\n${dataSTR}` }\n    }\n    if (app.logger.config.LOGGER.console.timestamp) {\n      RESULT.timestamp = `${moment().format('DD/MM/YYYY HH:mm:ss')} `\n    }\n    if (app.logger.config.LOGGER.console.reqId) {\n      RESULT.reqId = `${info.id || _.pad('', 36, '-')} `\n    }\n    if (app.logger.config.LOGGER.console.transport.json) {\n      return JSON.stringify(RESULT)\n    }\n    const LEVEL_STR = _.padEnd(`[${RESULT.level}]`, 10, ' ')\n    return `${app.logger.levelColors[RESULT.level]}${RESULT.timestamp}${RESULT.reqId}${LEVEL_STR} ${RESULT.message}${RESULT.data}${app.logger.colors.RESET}`\n  }\n}\n\n/**\n* @ignore\n* Devuelve una cadena de texto con formato personalizado para los logs de los ficheros.\n* @param {!Function} app - Instancia del servidor express.\n* @return {String}\n*/\nfunction fileFormat (app) {\n  return (info)  => {\n    const RESULT = {\n      timestamp : moment().format('DD/MM/YYYY HH:mm:ss'),\n      reqId     : info.id || _.pad('', 36, '-'),\n      level     : info.level,\n      message   : info.message,\n      data      : ''\n    }\n    if (info.data) {\n      const dataSTR = util.inspect(info.data, false, null)\n      if (dataSTR) { RESULT.data = `\\n${dataSTR}` }\n    }\n    if (app.logger.config.LOGGER.file.transport.json) {\n      return JSON.stringify(RESULT)\n    }\n    return `${RESULT.timestamp} ${RESULT.reqId} [${RESULT.level}] ${RESULT.message}${RESULT.data}`\n  }\n}\n\n/**\n* @ignore\n* Adiciona funciones personalizadas para todos los niveles de logs soportados.\n* @param {!Logger} logger - Instancia de logger.\n* @return {String}\n*/\nfunction createLoggerFunctions (logger) {\n  const IS_ENABLED = logger.isEnabled()\n  Object.keys(logger.levels).forEach(level => {\n    logger[level] = (req, message, data) => {\n      if (!IS_ENABLED) return\n      logger.winstonLogger[level]({ id: req ? req.id : null, message, data })\n    }\n  })\n}\n\nmodule.exports = Logger\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/core/Logger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 184,
    "kind": "variable",
    "name": "_",
    "memberof": "lib/core/Logger.js",
    "static": true,
    "longname": "lib/core/Logger.js~_",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/core/Logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "variable",
    "name": "moment",
    "memberof": "lib/core/Logger.js",
    "static": true,
    "longname": "lib/core/Logger.js~moment",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 186,
    "kind": "variable",
    "name": "util",
    "memberof": "lib/core/Logger.js",
    "static": true,
    "longname": "lib/core/Logger.js~util",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 187,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/core/Logger.js",
    "static": true,
    "longname": "lib/core/Logger.js~path",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "variable",
    "name": "fs",
    "memberof": "lib/core/Logger.js",
    "static": true,
    "longname": "lib/core/Logger.js~fs",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "variable",
    "name": "mkdirp",
    "memberof": "lib/core/Logger.js",
    "static": true,
    "longname": "lib/core/Logger.js~mkdirp",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "variable",
    "name": "createLogger",
    "memberof": "lib/core/Logger.js",
    "static": true,
    "longname": "lib/core/Logger.js~createLogger",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "variable",
    "name": "printf",
    "memberof": "lib/core/Logger.js",
    "static": true,
    "longname": "lib/core/Logger.js~printf",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "class",
    "name": "Logger",
    "memberof": "lib/core/Logger.js",
    "static": true,
    "longname": "lib/core/Logger.js~Logger",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Logger.js",
    "importStyle": null,
    "description": "Clase para crear logs.",
    "lineNumber": 14,
    "interface": false
  },
  {
    "__docId__": 193,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#constructor",
    "access": "public",
    "description": "Crea una instancia de Logger.",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ]
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "config",
    "memberof": "lib/core/Logger.js~Logger",
    "static": false,
    "longname": "lib/core/Logger.js~Logger#config",
    "access": "public",
    "description": "Configuración de la aplicación.",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 195,
    "kind": "member",
    "name": "colors",
    "memberof": "lib/core/Logger.js~Logger",
    "static": false,
    "longname": "lib/core/Logger.js~Logger#colors",
    "access": "public",
    "description": "Colores para los logs.",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "styles",
    "memberof": "lib/core/Logger.js~Logger",
    "static": false,
    "longname": "lib/core/Logger.js~Logger#styles",
    "access": "public",
    "description": "Estilos para los logs.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 197,
    "kind": "member",
    "name": "levels",
    "memberof": "lib/core/Logger.js~Logger",
    "static": false,
    "longname": "lib/core/Logger.js~Logger#levels",
    "access": "public",
    "description": "Contiene los niveles de logs.",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 198,
    "kind": "member",
    "name": "levelColors",
    "memberof": "lib/core/Logger.js~Logger",
    "static": false,
    "longname": "lib/core/Logger.js~Logger#levelColors",
    "access": "public",
    "description": "Contiene los colores asociados a los diferentes niveles de logs.",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 199,
    "kind": "member",
    "name": "winstonLogger",
    "memberof": "lib/core/Logger.js~Logger",
    "static": false,
    "longname": "lib/core/Logger.js~Logger#winstonLogger",
    "access": "public",
    "description": "Instancia de winston logger.",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "WinstonLogger"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 200,
    "kind": "member",
    "name": "OK",
    "memberof": "lib/core/Logger.js~Logger",
    "static": false,
    "longname": "lib/core/Logger.js~Logger#OK",
    "access": "public",
    "description": "Cadena de texto que representa un Ok.",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 201,
    "kind": "member",
    "name": "FAIL",
    "memberof": "lib/core/Logger.js~Logger",
    "static": false,
    "longname": "lib/core/Logger.js~Logger#FAIL",
    "access": "public",
    "description": "Cadena de texto que representa un Fail.",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "init",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#init",
    "access": "public",
    "description": "Inicializa las propiedades.",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "isEnabled",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#isEnabled",
    "access": "public",
    "description": "Indica si los logs están habilitados.",
    "lineNumber": 166,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "appLogo",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#appLogo",
    "access": "public",
    "description": "Muestra un mensaje del logo de la aplicación.",
    "lineNumber": 174,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": ". Instancia del servidor express."
      }
    ],
    "return": null
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "appTitle",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#appTitle",
    "access": "public",
    "description": "Muestra el título principal de una tarea.",
    "lineNumber": 196,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "Título principal."
      }
    ],
    "return": null
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "appTitle2",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#appTitle2",
    "access": "public",
    "description": "Muestra el título secundario de una tarea.",
    "lineNumber": 211,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "Título secundario."
      }
    ],
    "return": null
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "appPrimary",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#appPrimary",
    "access": "public",
    "description": "Para imprimir mensajes con el color Primary.",
    "lineNumber": 225,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "Título."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "Mensaje."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Datos adicionales."
      }
    ],
    "return": null
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "appAccent",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#appAccent",
    "access": "public",
    "description": "Para imprimir mensajes con el color Accent.",
    "lineNumber": 241,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "Título."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "Mensaje."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Datos adicionales."
      }
    ],
    "return": null
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "appError",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#appError",
    "access": "public",
    "description": "Para imprimir mensajes con el color Error.",
    "lineNumber": 258,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "Título."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "Mensaje."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Datos adicionales."
      }
    ],
    "return": null
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "requestPath",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#requestPath",
    "access": "public",
    "description": "Muestra por consola la ruta de una petición.",
    "lineNumber": 272,
    "params": [
      {
        "nullable": null,
        "types": [
          "Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Objeto request."
      }
    ],
    "return": null
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "inputHeaders",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#inputHeaders",
    "access": "public",
    "description": "Muestra por consola el contenido de los headers de una petición.",
    "lineNumber": 284,
    "params": [
      {
        "nullable": null,
        "types": [
          "Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Objeto request."
      }
    ],
    "return": null
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "inputParams",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#inputParams",
    "access": "public",
    "description": "Muestra por consola el contenido de la query de una petición.",
    "lineNumber": 294,
    "params": [
      {
        "nullable": null,
        "types": [
          "Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Objeto request."
      }
    ],
    "return": null
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "inputQuery",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#inputQuery",
    "access": "public",
    "description": "Muestra por consola el contenido de la query de una petición.",
    "lineNumber": 304,
    "params": [
      {
        "nullable": null,
        "types": [
          "Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Objeto request."
      }
    ],
    "return": null
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "inputBody",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#inputBody",
    "access": "public",
    "description": "Muestra por console el contenido del body de una petición.",
    "lineNumber": 314,
    "params": [
      {
        "nullable": null,
        "types": [
          "Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Objeto request."
      }
    ],
    "return": null
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "outputData",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#outputData",
    "access": "public",
    "description": "Muestra por consola el contenido DATA de la respuesta a una petición.",
    "lineNumber": 325,
    "params": [
      {
        "nullable": null,
        "types": [
          "Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Objeto request."
      },
      {
        "nullable": null,
        "types": [
          "ResponseSuccess"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "Resultado."
      }
    ],
    "return": null
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "responseSuccess",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#responseSuccess",
    "access": "public",
    "description": "Muestra por consola el resultado de una peticion.",
    "lineNumber": 336,
    "params": [
      {
        "nullable": null,
        "types": [
          "Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Objeto request."
      },
      {
        "nullable": null,
        "types": [
          "ResponseSuccess"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "Resultado."
      }
    ],
    "return": null
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "responseError",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#responseError",
    "access": "public",
    "description": "Muestra por consola errores de tipo 400.",
    "lineNumber": 350,
    "params": [
      {
        "nullable": null,
        "types": [
          "Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Objeto request."
      },
      {
        "nullable": null,
        "types": [
          "ResponseError"
        ],
        "spread": false,
        "optional": false,
        "name": "err",
        "description": "Instancia de un error."
      }
    ],
    "return": null
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "responseError500",
    "memberof": "lib/core/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Logger.js~Logger#responseError500",
    "access": "public",
    "description": "Muestra por consola el error producido por un error de tipo 500.",
    "lineNumber": 364,
    "params": [
      {
        "nullable": null,
        "types": [
          "Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Objeto request."
      },
      {
        "nullable": null,
        "types": [
          "ResponseError"
        ],
        "spread": false,
        "optional": false,
        "name": "err",
        "description": "Instancia de un error."
      }
    ],
    "return": null
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "createTransports",
    "memberof": "lib/core/Logger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/core/Logger.js~createTransports",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Logger.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 392,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": "Instancia de logger."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Transport[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 224,
    "kind": "function",
    "name": "consoleFormat",
    "memberof": "lib/core/Logger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/core/Logger.js~consoleFormat",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Logger.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 429,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 225,
    "kind": "function",
    "name": "fileFormat",
    "memberof": "lib/core/Logger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/core/Logger.js~fileFormat",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Logger.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 462,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 226,
    "kind": "function",
    "name": "createLoggerFunctions",
    "memberof": "lib/core/Logger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/core/Logger.js~createLoggerFunctions",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Logger.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 488,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": "Instancia de logger."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 227,
    "kind": "file",
    "name": "lib/core/Module.js",
    "content": "/** @ignore */ const _      = require('lodash')\n/** @ignore */ const path   = require('path')\n\n/** @ignore */ const util   = require('../tools/util')\n\n/** @ignore */ const FieldCreator = require('../libs/FieldCreator')\n\n/**\n* Modelo base para crear módulos.\n*/\nclass Module {\n  /**\n  * Crea una instancia de la clase Module\n  * @param {!Object} config - Configuración del módulo.\n  */\n  constructor (config) {\n    /**\n    * Configuración del módulo.\n    * @type {Object}\n    */\n    this.config               = config\n    this.config.moduleName    = config.moduleName\n    this.config.modulePath    = config.modulePath\n    this.config.setup         = (typeof config.setup === 'boolean') ? config.setup : true\n    if (typeof this.config.schema === 'undefined') {\n      this.config.schema = this.hasComponent('models', '.model.js') ? this.getName().toLowerCase() : null\n    }\n\n    /**\n    * Longitud máxima del nombre de los modelos.\n    * @type {Number}\n    */\n    this._max = 0\n\n    /**\n    * Componentes personalizados.\n    * @type {Object[]} components\n    * @property {!String} components.dirName                 - Nombre de la carpeta.\n    * @property {!String} components.fileExt                 - Extensión del archivo principal.\n    * @property {Object} [components.options]                - Opciones del componente.\n    * @property {Boolean} [components.options.onInit=true]   - Indica si se va a cargar al inicializar el módulo.\n    * @property {Boolean} [components.options.onSetup=false] - Indica si se va a cargar al instalar el módulo.\n    * @property {Boolean} [components.options.onStart=true]  - Indica si se va a cargar al cargar el módulo.\n    */\n    this.components = []\n\n    /**\n    * Función que se ejecuta despues de Inicializar el módulo.\n    * @type {AsyncFunction}\n    */\n    this.actionOnInit = null\n\n    /**\n    * Función que se ejecuta despues de Instalar el módulo.\n    * @type {AsyncFunction}\n    */\n    this.actionOnSetup = null\n\n    /**\n    * Función que se ejecuta despues de Cargar el módulo.\n    * @type {AsyncFunction}\n    */\n    this.actionOnStart = null\n  }\n\n  /**\n  * Se ejecuta al inicializar el módulo.\n  * @param {!Functon} app - Instancia del servidor express.\n  * @return {Promise}\n  */\n  async onInit (app) {\n    const MODULE = this\n    await MODULE.loadComponent(app, 'tools', '.tool.js')\n    await MODULE.loadComponent(app, 'models', '.model.js', ({ fileName, filePath }) => {\n      const key = fileName\n      const val = importModel(app, MODULE, filePath)\n      return { key, val }\n    })\n    if (Object.keys(MODULE.models).length > 0) app.logger.appPrimary()\n    app.DB.associateModels(app, MODULE)\n\n    await MODULE.loadCustomComponents(app, 'onInit')\n    if (this.actionOnInit) await this.actionOnInit()\n  }\n\n  /**\n  * Se ejecuta cuando se instala la aplicación.\n  * @param {!Function} app - Instancia del servidor express.\n  * @return {Promise}\n  */\n  async onSetup (app) {\n    const MODULE = this\n\n    if (MODULE.getSchema() && app.config.DATABASE.onSetup.dropSchemas)   await app.DB.dropSchema(app, MODULE)\n    if (MODULE.getSchema() && app.config.DATABASE.onSetup.createSchemas) await app.DB.createSchema(app, MODULE)\n\n    const MODELS_PATH = MODULE.getPath('models')\n    if (util.isDir(MODELS_PATH) && util.countFiles(MODELS_PATH, '.model.js') > 0) {\n      if (app.config.DATABASE.onSetup.dropTables)   await app.DB.dropTables(app, MODULE)\n      if (app.config.DATABASE.onSetup.createTables) await app.DB.createTables(app, MODULE)\n    }\n\n    const SEEDERS_PATH = MODULE.getPath('seeders')\n    if (util.isDir(SEEDERS_PATH) && util.countFiles(SEEDERS_PATH, '.seed.js') > 0) {\n      if (app.config.DATABASE.onSetup.createSeeders) await app.DB.createSeeders(app, MODULE)\n    }\n\n    await MODULE.loadCustomComponents(app, 'onSetup')\n    if (this.actionOnSetup) await this.actionOnSetup()\n  }\n\n  /**\n  * Se ejecuta al cargar el módulo.\n  * @param {!Function} app - Instancia del servidor express.\n  * @return {Promise}\n  */\n  async onStart (app) {\n    const MODULE = this\n\n    await MODULE.loadComponent(app, 'dao', '.dao.js')\n    await MODULE.loadComponent(app, 'resources', '.route.js', async (info) => {\n      const key = info.dirPath.replace(MODULE.getPath(), '')\n      const val = await loadResource(app, MODULE, info)\n      return { key, val }\n    })\n\n    await MODULE.loadCustomComponents(app, 'onStart')\n    if (this.actionOnStart) await this.actionOnStart()\n  }\n\n  /**\n  * Carga todos los componentes personalizados.\n  * @param {Function} app                                      - Instancia del servidor express.\n  * @param {!String} [loadOption='onInit','onSetup','onStart'] - Opción de cargado.\n  */\n  async loadCustomComponents (app, loadOption) {\n    const MODULE = this\n    for (let i in MODULE.components) {\n      if (MODULE.components[i].options[loadOption]) {\n        const dirName = MODULE.components[i].dirName\n        const fileExt = MODULE.components[i].fileExt\n        await MODULE.loadComponent(app, dirName, fileExt)\n      }\n    }\n  }\n\n  /**\n  * Adiciona un componente personalizado al módulo.\n  * @param {!String} dirName                 - Nombre de la carpeta.\n  * @param {!String} fileExt                 - Extensión del archivo principal.\n  * @param {Object} [options]                - Opciones del componente.\n  * @param {Boolean} [options.onInit=true]   - Indica si se va a cargar al inicializar el módulo.\n  * @param {Boolean} [options.onSetup=false] - Indica si se va a cargar al instalar el módulo.\n  * @param {Boolean} [options.onStart=true]  - Indica si se va a cargar al cargar el módulo.\n  */\n  addComponent (dirName, fileExt, options = {}) {\n    options.onInit  = typeof options.onInit === 'boolean' ? options.onInit : false\n    options.onSetup = typeof options.onSetup === 'boolean' ? options.onSetup : false\n    options.onStart = typeof options.onStart === 'boolean' ? options.onStart : true\n    this.components.push({ dirName, fileExt, options })\n  }\n\n  /**\n  * Adiciona una función para que se ejecute en un determinado momento.\n  * @param {!String}        [type='onStart'] - Tipo de evento (onInit, onSetup, onStart).\n  * @param {!AsyncFunction} action           - Función de tipo asincrono\n  */\n  addAction (type, action) {\n    if (type === 'onInit')  this.actionOnInit  = action\n    if (type === 'onSetup') this.actionOnSetup = action\n    if (type === 'onStart') this.actionOnStart = action\n  }\n\n  /**\n  * Carga un componente al módulo.\n  * @param {!Functon}      app      - Instancia del servidor express.\n  * @param {!String}       dirName  - Nombre de la carpeta.\n  * @param {!String}       fileExt  - Extensión del fichero principal del componente.\n  * @param {AsyncFunction} [onFind] - Función para personalizar el cargado del componente.\n  *                                   Opcionalmente puede devolver una objeto que contiene una clave y un valor.\n  *                                   que se utilizaran para identificar a los ficheros.\n  * @return {Promise}\n  */\n  async loadComponent (app, dirName, fileExt, onFind) {\n    const MODULE    = this\n    const dirPath   = MODULE.getPath(dirName)\n    MODULE[dirName] = {}\n    if (util.isDir(dirPath)) {\n      let fileLoaded = false\n      await util.findAsync(dirPath, fileExt, async (info) => {\n        const result = onFind ? ((await onFind(info)) || {}) : {}\n        const key    = info.fileName\n        let val      = result.val\n        if (!result.val) {\n          val        = await util.loadFile(app, info.filePath)\n          fileLoaded = true\n        }\n        MODULE[dirName][key] = val\n      })\n      if (fileLoaded) app.logger.appPrimary()\n    }\n    return MODULE[dirName]\n  }\n\n  /**\n  * Devuelve el contenido de un archivo, alternativamente, es posible ejecutar\n  * su contenido si se trata de una función devolviendo en todo caso el resultado de dicha función.\n  * @param {String} app      - Instancia del servidor (es para mostrar los logs).\n  * @param {String} filePath - Ruta del archivo.\n  * @return {Object} data\n  * @example\n  * module.exports = (app) => {\n  *   const data = {}\n  *   return data\n  * }\n  *\n  * @example\n  * const data = {}\n  * module.exports = data\n  */\n  async loadFile (app, filePath) { return util.loadFile(app, filePath) }\n\n  /**\n  * Devuelve el nombre del módulo.\n  * @return {String}\n  */\n  getName () { return this.config.moduleName }\n\n  /**\n  * Devuelve el nombre del esquema asociado al módulo.\n  * @return {String}\n  */\n  getSchema () { return this.config.schema }\n\n  /**\n  * Indica si es posible instalar el módulo.\n  * @return {Boolean}\n  */\n  hasSetup () { return this.config.setup }\n\n  /**\n  * Devuelve la ruta absoluta del módulo.\n  * @param {String} [relativePath] - Ruta relativa respecto al módulo.\n  * @return {String}\n  */\n  getPath (relativePath = '') { return path.resolve(this.config.modulePath) }\n  /**\n  * Indica si existen elementos de un determinado componente del módulo.\n  * @param {!String} dirName - Nombre de la carpeta (componente).\n  * @param {!String} fileExt - Extensión del fichero principal del componente.\n  * @return {Boolean}\n  */\n  hasComponent (dirName, fileExt) {\n    const COMPONENT_PATH = this.getPath(dirName)\n    return COMPONENT_PATH && util.countFiles(COMPONENT_PATH, fileExt) > 0\n  }\n}\n\n/**\n* @ignore\n* Importa un modelo Sequelize.\n* @param {!Function} app      - Instancia del servidor express.\n* @param {!Module}   MODULE   - Instancia del módulo.\n* @param {!String}   filePath - Ruta del modelo.\n* @return {SequelizeModel}\n*/\nfunction importModel (app, MODULE, filePath) {\n  try {\n    const MODEL = app.DB.importModel(app, MODULE, filePath)\n    app.logger.appPrimary('[archivo]', `${filePath.replace(app.config.PATH.project, '')} ${app.logger.OK}`)\n    return MODEL\n  } catch (e) {\n    app.logger.appError('[archivo]', `${filePath.replace(app.config.PATH.project, '')} ${app.logger.FAIL}\\n`)\n    throw e\n  }\n}\n\n/**\n* @ignore\n* Devuelve el contenido de un recurso.\n* @param {!Function} app      - Instancia del servidor express.\n* @param {!Module}   MODULE   - Instancia del Módulo.\n* @param {!Object}   fileInfo - Información del fichero principal del componente (example.route.js).\n* @return {Object}\n*/\nasync function loadResource (app, MODULE, { filePath, fileName, dirPath }) {\n  const RESOURCE      = await util.loadFile(app, filePath)\n  const INPUT         = await util.loadFile(app, path.resolve(dirPath, `${fileName}.input.js`))\n  const OUTPUT        = await util.loadFile(app, path.resolve(dirPath, `${fileName}.output.js`))\n  const MIDDLEWARE    = await util.loadFile(app, path.resolve(dirPath, `${fileName}.middleware.js`))\n  const CONTROLLER    = await util.loadFile(app, path.resolve(dirPath, `${fileName}.controller.js`))\n  const RESOURCE_MAME = fileName\n  const MODULE_NAME   = MODULE.getName()\n  let   pathSize      = 0\n  const HAS_RESOURCES = Object.keys(RESOURCE).length > 0\n  Object.keys(RESOURCE).forEach(key => { if (RESOURCE[key].path.length > pathSize) { pathSize = RESOURCE[key].path.length } })\n  if (HAS_RESOURCES) app.logger.appPrimary()\n  Object.keys(RESOURCE).forEach(key => {\n    const ROUTE     = RESOURCE[key]\n    let permissions = []\n    if (MIDDLEWARE[key]) { MIDDLEWARE[key].forEach(mw => { if (mw.permissions) { permissions = mw.permissions } }) }\n    ROUTE.outputFilter = typeof ROUTE.outputFilter !== 'undefined' ? ROUTE.outputFilter : true\n    ROUTE.inputLogs    = typeof ROUTE.inputLogs    !== 'undefined' ? ROUTE.inputLogs    : true\n    ROUTE.key          = key\n    ROUTE.resourceName = RESOURCE_MAME\n    ROUTE.moduleName   = MODULE_NAME\n    ROUTE.name         = `${_toWords(_.upperFirst(_.camelCase(`${key}_${RESOURCE_MAME}`)))}`\n    ROUTE.group        = `${MODULE_NAME} ${_toWords(_.upperFirst(_.camelCase(`${RESOURCE_MAME}`)))}`\n    ROUTE.permissions  = permissions\n    ROUTE.input        = INPUT[key]      || {}\n    ROUTE.output       = OUTPUT[key]     || {}\n    ROUTE.middleware   = MIDDLEWARE[key] || []\n    ROUTE.controller   = CONTROLLER[key]\n    validateFieldGroup(app, 'input',  ROUTE.input,  key)\n    validateFieldGroup(app, 'output', ROUTE.output, key)\n    validateInputParams(app, ROUTE.path, ROUTE.input, key)\n    const routeMethod = _.padEnd(`${ROUTE.method.toUpperCase()}`, 6, ' ')\n    const routePath   = _.padEnd(`${ROUTE.path} `, pathSize + 1, '.')\n    const routeKey    = ROUTE.key\n    if (!ROUTE.controller) {\n      const data = `  Se requiere un controlador.\\n`\n      app.logger.appError('[ruta]', `${routeMethod} ${routePath}... ${routeKey} ${app.logger.FAIL}`, data)\n    }\n    app.apidoc.router[ROUTE.method.toLowerCase()](ROUTE.path, ROUTE)\n    app.logger.appPrimary('[ruta]', `${routeMethod} ${routePath}... ${routeKey} ${app.logger.OK}`)\n  })\n  app.logger.appPrimary()\n  return RESOURCE\n}\n\n/**\n* @ignore\n* Valida el contenido de los ficheros input y output de una ruta.\n* @param {!Function} app  - Instancia del servidor express.\n* @param {!String}   type - Tipo de componente al que pertenece el objeto.\n* @param {!Object}   data - Objeto input u output.\n* @param {!String}   key  - Clave asociada a una ruta.\n*/\nfunction validateFieldGroup (app, type, data, key) {\n  try {\n    FieldCreator.validateGroup(data)\n  } catch (e) {\n    app.logger.appError(null, `Ocurrió un error mientras se cargaba el componente '${type}' de la ruta '${key}'.\\n ${e.message}\\n`)\n    throw e\n  }\n}\n\n/**\n* @ignore\n* Verifica que los parámetros declarados en el objeto INPUT se encuentren\n* definidos en la propiedad 'path' de la ruta.\n* Valida el contenido de los ficheros input y output de una ruta.\n* @param {!Function} app   - Instancia del servidor express.\n* @param {!String}   path  - Propiedad 'path' de la ruta.\n* @param {!Object}   input - Propiedad 'input' de la ruta.\n* @param {!String}   key   - Clave asociada a una ruta.\n*/\nfunction validateInputParams (app, path, input, key) {\n  if (input.params) {\n    const params = Object.keys(input.params)\n    for (let i in params) {\n      if (!path.includes(`:${params[i]}`)) {\n        const msg = `El parámetro 'INPUT.params.${params[i]}' no se encuentra definido el la propiedad 'path'. Se tiene ROUTE.path: ${path}`\n        app.logger.appError('Error:', `Ocurrió un error mientras se cargaba el componente 'input' de la ruta '${key}'. \\n ${msg}\\n`)\n        throw new Error(msg)\n      }\n    }\n  }\n}\n\n/**\n* @ignore\n* Separa el conenido de una frase en palabras.\n* @param {String} text - frase\n* @return {String}\n*/\nfunction _toWords (text) {\n  return _.replace((_.words(text)).toString(), /,/g, ' ')\n}\n\nmodule.exports = Module\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/core/Module.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 228,
    "kind": "variable",
    "name": "_",
    "memberof": "lib/core/Module.js",
    "static": true,
    "longname": "lib/core/Module.js~_",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/core/Module.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/core/Module.js",
    "static": true,
    "longname": "lib/core/Module.js~path",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Module.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "variable",
    "name": "util",
    "memberof": "lib/core/Module.js",
    "static": true,
    "longname": "lib/core/Module.js~util",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Module.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "variable",
    "name": "FieldCreator",
    "memberof": "lib/core/Module.js",
    "static": true,
    "longname": "lib/core/Module.js~FieldCreator",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Module.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "class",
    "name": "Module",
    "memberof": "lib/core/Module.js",
    "static": true,
    "longname": "lib/core/Module.js~Module",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Module.js",
    "importStyle": null,
    "description": "Modelo base para crear módulos.",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 233,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/core/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Module.js~Module#constructor",
    "access": "public",
    "description": "Crea una instancia de la clase Module",
    "lineNumber": 16,
    "params": [
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuración del módulo."
      }
    ]
  },
  {
    "__docId__": 234,
    "kind": "member",
    "name": "config",
    "memberof": "lib/core/Module.js~Module",
    "static": false,
    "longname": "lib/core/Module.js~Module#config",
    "access": "public",
    "description": "Configuración del módulo.",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 235,
    "kind": "member",
    "name": "_max",
    "memberof": "lib/core/Module.js~Module",
    "static": false,
    "longname": "lib/core/Module.js~Module#_max",
    "access": "private",
    "description": "Longitud máxima del nombre de los modelos.",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 236,
    "kind": "member",
    "name": "components",
    "memberof": "lib/core/Module.js~Module",
    "static": false,
    "longname": "lib/core/Module.js~Module#components",
    "access": "public",
    "description": "Componentes personalizados.",
    "lineNumber": 45,
    "properties": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "components.dirName",
        "description": "Nombre de la carpeta."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "components.fileExt",
        "description": "Extensión del archivo principal."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "components.options",
        "description": "Opciones del componente."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "components.options.onInit",
        "description": "Indica si se va a cargar al inicializar el módulo."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "components.options.onSetup",
        "description": "Indica si se va a cargar al instalar el módulo."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "components.options.onStart",
        "description": "Indica si se va a cargar al cargar el módulo."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 237,
    "kind": "member",
    "name": "actionOnInit",
    "memberof": "lib/core/Module.js~Module",
    "static": false,
    "longname": "lib/core/Module.js~Module#actionOnInit",
    "access": "public",
    "description": "Función que se ejecuta despues de Inicializar el módulo.",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "AsyncFunction"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 238,
    "kind": "member",
    "name": "actionOnSetup",
    "memberof": "lib/core/Module.js~Module",
    "static": false,
    "longname": "lib/core/Module.js~Module#actionOnSetup",
    "access": "public",
    "description": "Función que se ejecuta despues de Instalar el módulo.",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "AsyncFunction"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 239,
    "kind": "member",
    "name": "actionOnStart",
    "memberof": "lib/core/Module.js~Module",
    "static": false,
    "longname": "lib/core/Module.js~Module#actionOnStart",
    "access": "public",
    "description": "Función que se ejecuta despues de Cargar el módulo.",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "AsyncFunction"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 240,
    "kind": "method",
    "name": "onInit",
    "memberof": "lib/core/Module.js~Module",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Module.js~Module#onInit",
    "access": "public",
    "description": "Se ejecuta al inicializar el módulo.",
    "lineNumber": 71,
    "params": [
      {
        "nullable": false,
        "types": [
          "Functon"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 241,
    "kind": "method",
    "name": "onSetup",
    "memberof": "lib/core/Module.js~Module",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Module.js~Module#onSetup",
    "access": "public",
    "description": "Se ejecuta cuando se instala la aplicación.",
    "lineNumber": 91,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 242,
    "kind": "method",
    "name": "onStart",
    "memberof": "lib/core/Module.js~Module",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Module.js~Module#onStart",
    "access": "public",
    "description": "Se ejecuta al cargar el módulo.",
    "lineNumber": 117,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "loadCustomComponents",
    "memberof": "lib/core/Module.js~Module",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Module.js~Module#loadCustomComponents",
    "access": "public",
    "description": "Carga todos los componentes personalizados.",
    "lineNumber": 136,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'onInit','onSetup','onStart'",
        "defaultRaw": "'onInit','onSetup','onStart'",
        "name": "loadOption",
        "description": "Opción de cargado."
      }
    ],
    "return": null
  },
  {
    "__docId__": 244,
    "kind": "method",
    "name": "addComponent",
    "memberof": "lib/core/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Module.js~Module#addComponent",
    "access": "public",
    "description": "Adiciona un componente personalizado al módulo.",
    "lineNumber": 156,
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dirName",
        "description": "Nombre de la carpeta."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fileExt",
        "description": "Extensión del archivo principal."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Opciones del componente."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.onInit",
        "description": "Indica si se va a cargar al inicializar el módulo."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.onSetup",
        "description": "Indica si se va a cargar al instalar el módulo."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.onStart",
        "description": "Indica si se va a cargar al cargar el módulo."
      }
    ],
    "return": null
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "addAction",
    "memberof": "lib/core/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Module.js~Module#addAction",
    "access": "public",
    "description": "Adiciona una función para que se ejecute en un determinado momento.",
    "lineNumber": 168,
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'onStart'",
        "defaultRaw": "'onStart'",
        "name": "type",
        "description": "Tipo de evento (onInit, onSetup, onStart)."
      },
      {
        "nullable": false,
        "types": [
          "AsyncFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "Función de tipo asincrono"
      }
    ],
    "return": null
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "loadComponent",
    "memberof": "lib/core/Module.js~Module",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Module.js~Module#loadComponent",
    "access": "public",
    "description": "Carga un componente al módulo.",
    "lineNumber": 184,
    "params": [
      {
        "nullable": false,
        "types": [
          "Functon"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dirName",
        "description": "Nombre de la carpeta."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fileExt",
        "description": "Extensión del fichero principal del componente."
      },
      {
        "nullable": null,
        "types": [
          "AsyncFunction"
        ],
        "spread": false,
        "optional": true,
        "name": "onFind",
        "description": "Función para personalizar el cargado del componente.\n                                  Opcionalmente puede devolver una objeto que contiene una clave y un valor.\n                                  que se utilizaran para identificar a los ficheros."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "loadFile",
    "memberof": "lib/core/Module.js~Module",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/core/Module.js~Module#loadFile",
    "access": "public",
    "description": "Devuelve el contenido de un archivo, alternativamente, es posible ejecutar\nsu contenido si se trata de una función devolviendo en todo caso el resultado de dicha función.",
    "examples": [
      "module.exports = (app) => {\n  const data = {}\n  return data\n}",
      "const data = {}\nmodule.exports = data"
    ],
    "lineNumber": 221,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor (es para mostrar los logs)."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "Ruta del archivo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "data"
    }
  },
  {
    "__docId__": 251,
    "kind": "method",
    "name": "getName",
    "memberof": "lib/core/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Module.js~Module#getName",
    "access": "public",
    "description": "Devuelve el nombre del módulo.",
    "lineNumber": 227,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 252,
    "kind": "method",
    "name": "getSchema",
    "memberof": "lib/core/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Module.js~Module#getSchema",
    "access": "public",
    "description": "Devuelve el nombre del esquema asociado al módulo.",
    "lineNumber": 233,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "hasSetup",
    "memberof": "lib/core/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Module.js~Module#hasSetup",
    "access": "public",
    "description": "Indica si es posible instalar el módulo.",
    "lineNumber": 239,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "getPath",
    "memberof": "lib/core/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Module.js~Module#getPath",
    "access": "public",
    "description": "Devuelve la ruta absoluta del módulo.",
    "lineNumber": 246,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "relativePath",
        "description": "Ruta relativa respecto al módulo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "hasComponent",
    "memberof": "lib/core/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/core/Module.js~Module#hasComponent",
    "access": "public",
    "description": "Indica si existen elementos de un determinado componente del módulo.",
    "lineNumber": 253,
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dirName",
        "description": "Nombre de la carpeta (componente)."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fileExt",
        "description": "Extensión del fichero principal del componente."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 256,
    "kind": "function",
    "name": "importModel",
    "memberof": "lib/core/Module.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/core/Module.js~importModel",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Module.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 267,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "Module"
        ],
        "spread": false,
        "optional": false,
        "name": "MODULE",
        "description": "Instancia del módulo."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "Ruta del modelo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SequelizeModel"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 257,
    "kind": "function",
    "name": "loadResource",
    "memberof": "lib/core/Module.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/core/Module.js~loadResource",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Module.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 286,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "Module"
        ],
        "spread": false,
        "optional": false,
        "name": "MODULE",
        "description": "Instancia del Módulo."
      },
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "fileInfo",
        "description": "Información del fichero principal del componente (example.route.js)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 258,
    "kind": "function",
    "name": "validateFieldGroup",
    "memberof": "lib/core/Module.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/core/Module.js~validateFieldGroup",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Module.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 339,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Tipo de componente al que pertenece el objeto."
      },
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Objeto input u output."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "Clave asociada a una ruta."
      }
    ],
    "return": null
  },
  {
    "__docId__": 259,
    "kind": "function",
    "name": "validateInputParams",
    "memberof": "lib/core/Module.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/core/Module.js~validateInputParams",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/core/Module.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 358,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor express."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Propiedad 'path' de la ruta."
      },
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": "Propiedad 'input' de la ruta."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "Clave asociada a una ruta."
      }
    ],
    "return": null
  },
  {
    "__docId__": 260,
    "kind": "function",
    "name": "_toWords",
    "memberof": "lib/core/Module.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/core/Module.js~_toWords",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/core/Module.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 377,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "frase"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 261,
    "kind": "file",
    "name": "lib/hooks/app.after.hook.js",
    "content": "/** @ignore */ const errors = require('../tools/errors')\n\n/** @ignore */ const { NotFound, BadRequest, InternalServer } = errors\n\nmodule.exports = (app) => {\n  // |======================================================================|\n  // |----------- TAREAS A REALIZAR DESPUÉS DE CARGAR LOS MÓDULOS ----------|\n  // |======================================================================|\n\n  // Controla el método OPTIONS y las rutas no definidas.\n  app.use((req, res, next) => {\n    if (req.method === 'OPTIONS') {\n      return res.status(200).send('ok')\n    }\n    return next(new NotFound({\n      dev: `La ruta ${req.method.toUpperCase()} '${req.originalUrl}' no ha sido definida.`\n    }))\n  })\n\n  // Controla los errores\n  app.use((err, req, res, next) => {\n    if (err && (err.name === 'InputDataValidationError')) {\n      err = BadRequest.create(err.errors)\n    }\n\n    if (err instanceof SyntaxError) {\n      err = BadRequest.create('Error de sintaxis, posiblemente en el formato JSON.')\n    }\n\n    if (err && (err.name !== 'ResponseHandlerError')) {\n      err = InternalServer.create(err)\n    }\n\n    if (err.code === 500) {\n      app.logger.responseError500(req, err)\n    } else {\n      app.logger.responseError(req, err)\n    }\n\n    return res.error(err)\n  })\n}\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/hooks/app.after.hook.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 262,
    "kind": "variable",
    "name": "errors",
    "memberof": "lib/hooks/app.after.hook.js",
    "static": true,
    "longname": "lib/hooks/app.after.hook.js~errors",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/hooks/app.after.hook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "variable",
    "name": "NotFound",
    "memberof": "lib/hooks/app.after.hook.js",
    "static": true,
    "longname": "lib/hooks/app.after.hook.js~NotFound",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/hooks/app.after.hook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 264,
    "kind": "file",
    "name": "lib/hooks/app.before.hook.js",
    "content": "/** @ignore */ const path       = require('path')\n/** @ignore */ const _          = require('lodash')\n/** @ignore */ const helmet     = require('helmet')\n/** @ignore */ const uuid       = require('uuid/v4')\n/** @ignore */ const bodyParser = require('body-parser')\n/** @ignore */ const cors       = require('cors')\n/** @ignore */ const express    = require('express')\n\n/** @ignore */ const Response = require('../libs/ResponseHandler')\n/** @ignore */ const util     = require('../tools/util')\n\nmodule.exports = (app) => {\n  // |======================================================================|\n  // |----------- TAREAS A REALIZAR ANTES DE CARGAR LOS MÓDULOS ------------|\n  // |======================================================================|\n\n  // Asigna un identificador único.\n  app.use((req, res, next) => {\n    req.id      = uuid()\n    req.startAt = Date.now()\n    return next()\n  })\n\n  // Adiciona los métodos para controlar errores.\n  app.use(Response.error({ errorFormat: app.config.RESPONSE.errorFormat, all200: app.config.RESPONSE.all200 }))\n\n  // Convierte el contenido del body a JSON.\n  app.use(bodyParser.json())\n\n  // Controla de seguridad.\n  if (app.config.SERVER.cors)   { app.use(cors(app.config.SERVER.corsOptions))     }\n  if (app.config.SERVER.helmet) { app.use(helmet(app.config.SERVER.helmetOptions)) }\n\n  // Activa la carpeta publica.\n  app.use(express.static(app.config.PATH.public))\n\n  // Define la página de inicio.\n  const compile   = _.template(util.readFile(path.resolve(__dirname, 'home/index.html')))\n  const INFO      = _.cloneDeep(app.config.PROJECT)\n  INFO.modules    = app.apidoc.isEnabled() ? app.getResourceModules() : []\n  const indexPage = compile(INFO)\n  app.get('/', (req, res, next) => {\n    res.status(200).send(indexPage)\n  })\n\n  // Muestra logs de los datos de entrada.\n  app.use((req, res, next) => {\n    app.logger.requestPath(req)\n    return next()\n  })\n\n  // Adiciona fields personalizados a la librería FieldCreator\n  require('./field')\n}\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/hooks/app.before.hook.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 265,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/hooks/app.before.hook.js",
    "static": true,
    "longname": "lib/hooks/app.before.hook.js~path",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/hooks/app.before.hook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "variable",
    "name": "_",
    "memberof": "lib/hooks/app.before.hook.js",
    "static": true,
    "longname": "lib/hooks/app.before.hook.js~_",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/hooks/app.before.hook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 267,
    "kind": "variable",
    "name": "helmet",
    "memberof": "lib/hooks/app.before.hook.js",
    "static": true,
    "longname": "lib/hooks/app.before.hook.js~helmet",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/hooks/app.before.hook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "variable",
    "name": "uuid",
    "memberof": "lib/hooks/app.before.hook.js",
    "static": true,
    "longname": "lib/hooks/app.before.hook.js~uuid",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/hooks/app.before.hook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 269,
    "kind": "variable",
    "name": "bodyParser",
    "memberof": "lib/hooks/app.before.hook.js",
    "static": true,
    "longname": "lib/hooks/app.before.hook.js~bodyParser",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/hooks/app.before.hook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 270,
    "kind": "variable",
    "name": "cors",
    "memberof": "lib/hooks/app.before.hook.js",
    "static": true,
    "longname": "lib/hooks/app.before.hook.js~cors",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/hooks/app.before.hook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 271,
    "kind": "variable",
    "name": "express",
    "memberof": "lib/hooks/app.before.hook.js",
    "static": true,
    "longname": "lib/hooks/app.before.hook.js~express",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/hooks/app.before.hook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 272,
    "kind": "variable",
    "name": "Response",
    "memberof": "lib/hooks/app.before.hook.js",
    "static": true,
    "longname": "lib/hooks/app.before.hook.js~Response",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/hooks/app.before.hook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "variable",
    "name": "util",
    "memberof": "lib/hooks/app.before.hook.js",
    "static": true,
    "longname": "lib/hooks/app.before.hook.js~util",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/hooks/app.before.hook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "file",
    "name": "lib/hooks/field.js",
    "content": "/** @ignore */ const Field = require('../libs/FieldCreator')\n\n// |=============================================================|\n// |-------------- CAMPOS DE TIPO CLAVE PRIMARIA ----------------|\n// |=============================================================|\n\nField.use('ID', Field.INTEGER({\n  primaryKey    : true,\n  autoIncrement : true,\n  allowNull     : false,\n  validate      : { min: 1 }\n}))\n\n// |=============================================================|\n// |-------------- CAMPOS DE AUDITORIA --------------------------|\n// |=============================================================|\n\nField.use('CREATED_AT', Field.DATE({\n  comment: 'Fecha de creación del registro.'\n}))\nField.use('UPDATED_AT', Field.DATE({\n  comment: 'Fecha de modificación del registro.'\n}))\nField.use('DELETED_AT', Field.DATE({\n  comment: 'Fecha de eliminación del registro.'\n}))\nField.use('CREATED_USER', Field.INTEGER({\n  comment: 'ID del usuario que crea el registro.'\n}))\nField.use('UPDATED_USER', Field.INTEGER({\n  comment: 'ID del usuario que modifica el registro.'\n}))\nField.use('DELETED_USER', Field.INTEGER({\n  comment: 'ID del usuario que elimina el registro.'\n}))\nField.use('STATUS', Field.ENUM(['ACTIVO', 'INACTIVO', 'ELIMINADO'], {\n  comment      : 'Estado en el que se encuentra el registro.',\n  defaultValue : 'ACTIVO'\n}))\n\n// |=============================================================|\n// |-------------- CAMPOS DE FILTROS Y CONSULTAS ----------------|\n// |=============================================================|\n\nField.use('FIELDS', Field.STRING({\n  comment : 'Campos a devolver en el resultado.',\n  example : 'id_usuario,username,persona(id_persona,nombres)'\n}))\nField.use('ORDER', Field.STRING({\n  comment : 'Orden en el que se devolverá el resultado.',\n  example : 'apellido,-nombres'\n}))\nField.use('LIMIT', Field.INTEGER({\n  comment      : 'Límite de registros por página.',\n  defaultValue : 50,\n  validate     : { min: 1 }\n}))\nField.use('PAGE', Field.INTEGER({\n  comment      : 'Número de página de una lista de registros.',\n  defaultValue : 1,\n  validate     : { min: 1 }\n}))\n\nmodule.exports = Field\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/hooks/field.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 275,
    "kind": "variable",
    "name": "Field",
    "memberof": "lib/hooks/field.js",
    "static": true,
    "longname": "lib/hooks/field.js~Field",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/hooks/field.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 276,
    "kind": "file",
    "name": "lib/libs/ApidocCreator.js",
    "content": "/** @ignore */ const _ = require('lodash')\n\n/**\n* @ignore\n* Crea la documentación de un servicio.\n*/\nclass ApidocCreator {\n  /**\n  * Devuelve un objeto que permite crear la documentación de una ruta, con la\n  * opción de ejecutar una función cuando la crea.\n  * @param {Function} [onCreate] - Función de tipo (route, apidoc) => { } que se ejecuta cuando se crea una ruta.\n  * @return {Object}\n  * @example\n  * const onCreate = (route, apidoc) => {\n  *   console.log(route)\n  *   console.log(apidoc)\n  * }\n  */\n  static router (onCreate) {\n    return {\n      get    : (path, properties) => { properties.method = 'get';    properties.path = path; _route(properties, onCreate) },\n      post   : (path, properties) => { properties.method = 'post';   properties.path = path; _route(properties, onCreate) },\n      put    : (path, properties) => { properties.method = 'put';    properties.path = path; _route(properties, onCreate) },\n      patch  : (path, properties) => { properties.method = 'patch';  properties.path = path; _route(properties, onCreate) },\n      delete : (path, properties) => { properties.method = 'delete'; properties.path = path; _route(properties, onCreate) }\n    }\n  }\n}\n\n/**\n* @ignore\n* Crea el apidoc para una ruta.\n* @param {!Object}  properties - Propiedades de la ruta.\n* @param {Function} [onCreate] - Función que se ejecuta cuando se encuentra una ruta.\n*/\nfunction _route (properties, onCreate) {\n  properties.method      = properties.method.toLowerCase()\n  properties.name        = properties.name        || `[${properties.method}] ${properties.path}`\n  properties.group       = properties.group       || 'API'\n  properties.description = properties.description || properties.name\n  properties.version     = properties.version     || 1\n  const INPUT = {\n    headers : properties.input ? properties.input.headers || {} : {},\n    params  : properties.input ? properties.input.params  || {} : {},\n    query   : properties.input ? properties.input.query   || {} : {},\n    body    : properties.input ? properties.input.body    || {} : {}\n  }\n  const OUTPUT = properties.output || {}\n  properties.input  = INPUT\n  properties.output = OUTPUT\n\n  let apidoc = ''\n  apidoc += _header(properties)\n\n  apidoc += _createApidoc('', INPUT.headers, '@apiHeader', 'Datos de entrada - headers')\n  apidoc += _createApidoc('', INPUT.params,  '@apiParam',  'Datos de entrada - params')\n  apidoc += _createApidoc('', INPUT.query,   '@apiParam',  'Datos de entrada - query')\n  apidoc += _createApidoc('', INPUT.body,    '@apiParam',  'Datos de entrada - body')\n\n  if (INPUT.body && ((Object.keys(INPUT.body).length > 0) || (Array.isArray(INPUT.body)))) {\n    const example = _example(INPUT.body)\n    apidoc += `* @apiParamExample {json} Ejemplo Petición \\n${example}`\n  }\n  if (properties.inputExamples) {\n    properties.inputExamples.forEach(inputExample => {\n      const example = _customExample(inputExample.data)\n      apidoc += `* @apiParamExample {json} ${inputExample.title}\\n${example}`\n    })\n  }\n  if (properties.sampleRequest) {\n    apidoc += `* @apiSampleRequest ${properties.sampleRequest}\\n`\n  }\n  apidoc += _createApidoc('', OUTPUT, '@apiSuccess', 'Respuesta - body')\n  if (OUTPUT && ((Object.keys(OUTPUT).length > 0) || (Array.isArray(OUTPUT)))) {\n    const example = _example(OUTPUT)\n    apidoc += `* @apiSuccessExample {json} Respuesta Exitosa\\n${example}`\n  }\n  if (properties.outputExamples) {\n    properties.outputExamples.forEach(outputExample => {\n      const example = _customExample(outputExample.data)\n      apidoc += `* @apiSuccessExample {json} ${outputExample.title}\\n${example}`\n    })\n  }\n  apidoc += `*/\\n`\n  properties.apidoc = apidoc\n  if (onCreate) { onCreate(properties, apidoc) }\n}\n\n/**\n* @ignore\n* Crea un ejemplo para el apidoc.\n* @param {Object} obj - Objeto que contiene los campos.\n* @return {String}\n*/\nfunction _example (obj) {\n  let result = ''\n  const example = JSON.stringify(_createData(obj, false), null, 2)\n  example.split('\\n').forEach(line => {\n    result += `* ${line}\\n`\n  })\n  return result\n}\n\n/**\n* @ignore\n* Crea un ejemplo personalizado para el apidoc.\n* @param {Object} obj - Objeto de ejemplo.\n* @return {String}\n*/\nfunction _customExample (obj) {\n  let result = ''\n  const example = JSON.stringify(obj, null, 2)\n  example.split('\\n').forEach(line => {\n    result += `* ${line}\\n`\n  })\n  return result\n}\n\n/**\n* @ignore\n* Crea el encabezado del apidoc.\n* @param {Object} route - Propiedades de la ruta.\n* @return {String}\n*/\nfunction _header (route) {\n  let content = '\\n/**\\n'\n  content += `* @api {${route.method}} ${route.path} ${route.name}\\n`\n  content += `* @apiName ${route.name}\\n`\n  content += `* @apiGroup ${route.group}\\n`\n  content += `* @apiDescription ${route.description}\\n`\n  content += `* @apiVersion ${route.version}.0.0\\n`\n  let define = ``\n  if (route.permissions) {\n    route.permissions.forEach(permission => {\n      define += `\\n/**\\n`\n      define += `* @apiDefine ${permission} Rol: ${permission.toUpperCase()}\\n`\n      define += `* Solo los usuarios que tengan este rol pueden acceder al recurso.\\n`\n      define += `*/\\n`\n      content += `* @apiPermission ${permission}\\n`\n    })\n  }\n  return define + content\n}\n\n/**\n* @ignore\n* Crea los campos del apidoc\n* @param {String} fullprop       - Ruta completa del campo.\n* @param {Object} obj            - Objeto que contiene los campos.\n* @param {String} apidocProperty - Tipo de campo a documentar.\n* @param {String} type           - Tipo de campo.\n* @return {String}\n*/\nfunction _createApidoc (fullprop, obj, apidocProperty, type) {\n  let apidoc = ''\n  if (Array.isArray(obj)) {\n    if (fullprop !== '') {\n      apidoc += `* ${apidocProperty} (${type}) {Object[]} ${fullprop} Lista de objetos **${fullprop}**\\n`\n    }\n    apidoc += _createApidoc(fullprop, obj[0], apidocProperty, type)\n    return apidoc\n  } else {\n    if (fullprop !== '') {\n      apidoc += `* ${apidocProperty} (${type}) {Object} ${fullprop} Datos del objeto **${fullprop}**\\n`\n    }\n    for (let prop in obj) {\n      const field    = obj[prop]\n      const property = (fullprop !== '') ? `${fullprop}.${prop}` : prop\n      if (_isField(field)) {\n        const ONLY_TYPE           = apidocProperty === '@apiSuccess'\n        const description         = _createDescription(field, prop)\n        const validateDescription = _createValidateDescription(field, ONLY_TYPE)\n        let fieldName = ONLY_TYPE ? `[${property}]` : _apidocProp(field, property)\n        let fieldType = _apidocType(field, true) // es true, porque siempre se mostrará solamente el tipo de dato.\n        apidoc += `* ${apidocProperty} (${type}) {${fieldType}} ${fieldName} ${description} ${validateDescription}\\n`\n      } else {\n        if (typeof field === 'object') {\n          apidoc += _createApidoc(property, obj[prop], apidocProperty, type)\n        }\n      }\n    }\n  }\n  return apidoc\n}\n\n/**\n* @ignore\n* Devuelve la descripción de un campo.\n* @param {Object} field      - Atributo.\n* @param {String} fieldName  - Nombre del campo.\n* @return {String}\n*/\nfunction _createDescription (field, fieldName) {\n  if (field.comment)   { return field.comment }\n  if (field.xlabel)    { return field.xlabel }\n  return _.upperFirst(_.replace(fieldName, /_/g, ' ').trim())\n}\n\n/**\n* @ignore\n* Devuelve la descripción del validador de un campo, en formato HTML.\n* @param {Object} field      - Atributo.\n* @param {boolean} onlyType  - Indica si solo se devolverá el tipo o se\n*                              incluirán algunos detalles más específicos.\n* @return {String}\n*/\nfunction _createValidateDescription (field, onlyType) {\n  _normalizeValidate(field)\n  if (!onlyType && field.validate && Object.keys(field.validate).length > 0) {\n    let vals = ''\n    Object.keys(field.validate).forEach(key => {\n      let value = field.validate[key].args\n      if (typeof value === 'undefined') { value = 'true' }\n      vals += `, <strong>${key}: </strong><code>${value}</code>`\n    })\n    return `<br>${vals.substr(2)}`\n  }\n  return ''\n}\n\n/**\n* @ignore\n* Devuelve el formato del nombre del campo, según si es requerido o no.\n* @param {Object} field - Atributo\n* @param {String} prop  - Nombre completo del campo.\n* @return {String}\n*/\nfunction _apidocProp (field, prop) {\n  prop = (typeof field.defaultValue !== 'undefined') ? `${prop}=${field.defaultValue}` : prop\n  return (field.allowNull === false) ? prop : `[${prop}]`\n}\n\n/**\n* @ignore\n* Devuelve el formato tipo del campo, según el tipo de dato.\n* @param {Object}  field    - Atributo\n* @param {boolean} onlyType - Indica si solo se devolverá el tipo o se\n*                             incluirán algunos detalles más específicos.\n* @return {String}\n*/\nfunction _apidocType (field, onlyType) {\n  const IS_ARRAY = field.type.key === 'ARRAY'\n  const TYPE     = IS_ARRAY ? field.type.type : field.type\n  const TYPE_STR = `${_.upperFirst(_.lowerCase(TYPE.key))}${IS_ARRAY ? '[]'  : ''}`\n  if (!onlyType) {\n    if (TYPE.key === 'ENUM' && typeof TYPE.values !== 'undefined') {\n      return `${TYPE_STR}=${TYPE.values.toString()}`\n    }\n  }\n  return TYPE_STR\n}\n\n/**\n* @ignore\n* Normaliza la propiedad validate.\n* @param {Object} field Atributo de un modelo sequelize.\n*/\nfunction _normalizeValidate (field) {\n  if (field.validate) {\n    Object.keys(field.validate).forEach(key => {\n      let validateItem = field.validate[key]\n      if (typeof validateItem === 'function') { return }\n      // Adiciona la propiedad args, si el validador no lo tuviera.\n      // Ejemplo:    min: 10   ->   min: { args: 10 }           isInt: true    ->    isInt: { args: true }\n      if ((typeof validateItem !== 'object') || (typeof validateItem.args === 'undefined')) {\n        field.validate[key] = { args: validateItem }\n      }\n      // Convierte los validadores booleanos:    isInt: { args: true }   ->    isInt: true\n      // Sequelize no admite validateKey: { args: true }, es por eso que si existe, ésta se elimina.\n      if (typeof field.validate[key].args === 'boolean') {\n        delete field.validate[key].args\n        if (typeof field.validate[key].msg === 'undefined') {\n          field.validate[key] = true\n        }\n      }\n      // Corrige el problema cuando se declaran args con valores de 0 y 1.\n      // Se corrige porque Sequelize los toma como valores booleanos, cuando debería tomarlos como números enteros.\n      // Ejemplo:     min: { args: 0 }  ->   min: { args: [0] }    y   min: { args: 1 }  ->   min: { args: [1] }\n      if ((typeof field.validate[key].args !== 'undefined') && ((field.validate[key].args === 0) || (field.validate[key].args === 1))) {\n        field.validate[key].args = [field.validate[key].args]\n      }\n    })\n  }\n}\n\n/**\n* @ignore\n* Crea un objeto para representar un ejemplo de la ruta.\n* @param {Object}  obj          - Objeto con todos los campos.\n* @param {boolean} onlyRequired - Indica si se incluirán solo los atributos requeridos o todos.\n* @return {Object}\n*/\nfunction _createData (obj, onlyRequired) {\n  if (Array.isArray(obj)) {\n    return [_createData(obj[0], onlyRequired)]\n  }\n  const data = {}\n  for (let prop in obj) {\n    const field = obj[prop]\n    if (_isField(field)) {\n      if (onlyRequired === true) {\n        if (field.required) {\n          data[prop] = _exampleData(field)\n        }\n      } else {\n        data[prop] = _exampleData(field)\n      }\n    } else {\n      if (typeof field === 'object') {\n        data[prop] = _createData(obj[prop], onlyRequired)\n      }\n    }\n  }\n  return data\n}\n\n/**\n* @ignore\n* Función que indica si un objeto es un campo o no.\n* @param {Object} obj - Objeto.\n* @return {String}\n*/\nfunction _isField (obj) {\n  if (obj && obj._modelAttribute && (obj._modelAttribute === true)) {\n    return true\n  }\n  return false\n}\n\n/**\n* @ignore\n* Devuelve un dato de ejemplo.\n* @param {Object} field - Atributo.\n* @return {String|Boolean|Number|Object}\n*/\nfunction _exampleData (field) {\n  if (field.example)      { return field.example }\n  if (field.defaultValue) { return field.defaultValue }\n  if (field.type.key === 'STRING')  { return 'text' }\n  if (field.type.key === 'TEXT')    { return 'text block' }\n  if (field.type.key === 'INTEGER') { return 1 }\n  if (field.type.key === 'FLOAT')   { return 12.99 }\n  if (field.type.key === 'BOOLEAN') { return false }\n  if (field.type.key === 'ENUM')    { return field.type.values[0] }\n  if (field.type.key === 'JSON')    { return { json: { data: 'value' } } }\n  if (field.type.key === 'JSONB')   { return { jsonb: { data: 'value' } } }\n  if (field.type.key === 'DATE')     { return '2018-02-03T00:39:45.113Z' }\n  if (field.type.key === 'DATEONLY') { return '2018-02-03' }\n  if (field.type.key === 'TIME')     { return '08:12:30' }\n  if (field.type.key === 'UUID')     { return '15dab328-07dc-4400-a5ea-55f836c40f31' }\n  if (field.type.key === 'ARRAY') {\n    if (field.type.type.key === 'STRING')   { return ['Alfa', 'Beta'] }\n    if (field.type.type.key === 'TEXT')     { return ['Text Block A', 'Text Block B'] }\n    if (field.type.type.key === 'INTEGER')  { return [1, 2] }\n    if (field.type.type.key === 'FLOAT')    { return [1.2, 2.8] }\n    if (field.type.type.key === 'BOOLEAN')  { return [true, false] }\n    if (field.type.type.key === 'DATE')     { return ['2018-02-03T00:39:45.113Z'] }\n    if (field.type.type.key === 'DATEONLY') { return ['2018-02-03'] }\n    if (field.type.type.key === 'TIME')     { return ['08:12:30'] }\n    if (field.type.type.key === 'UUID')     { return ['15dab328-07dc-4400-a5ea-55f836c40f31'] }\n    if (field.type.type.key === 'ENUM')     { return [field.type.type.values[0]] }\n    if (field.type.type.key === 'JSON')     { return [{ json: { data: 'value' } }] }\n    if (field.type.type.key === 'JSONB')    { return [{ jsonb: { data: 'value' } }] }\n    return ['example']\n  }\n  return 'example'\n}\n\nmodule.exports = ApidocCreator\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/ApidocCreator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 277,
    "kind": "variable",
    "name": "_",
    "memberof": "lib/libs/ApidocCreator.js",
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~_",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/ApidocCreator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 278,
    "kind": "class",
    "name": "ApidocCreator",
    "memberof": "lib/libs/ApidocCreator.js",
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~ApidocCreator",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ApidocCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 7,
    "ignore": true,
    "interface": false
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "router",
    "memberof": "lib/libs/ApidocCreator.js~ApidocCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~ApidocCreator.router",
    "access": "public",
    "description": "Devuelve un objeto que permite crear la documentación de una ruta, con la\nopción de ejecutar una función cuando la crea.",
    "examples": [
      "const onCreate = (route, apidoc) => {\n  console.log(route)\n  console.log(apidoc)\n}"
    ],
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "onCreate",
        "description": "Función de tipo (route, apidoc) => { } que se ejecuta cuando se crea una ruta."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 280,
    "kind": "function",
    "name": "_route",
    "memberof": "lib/libs/ApidocCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~_route",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/ApidocCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 36,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "properties",
        "description": "Propiedades de la ruta."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "onCreate",
        "description": "Función que se ejecuta cuando se encuentra una ruta."
      }
    ],
    "return": null
  },
  {
    "__docId__": 281,
    "kind": "function",
    "name": "_example",
    "memberof": "lib/libs/ApidocCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~_example",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/ApidocCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 95,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Objeto que contiene los campos."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 282,
    "kind": "function",
    "name": "_customExample",
    "memberof": "lib/libs/ApidocCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~_customExample",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/ApidocCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 110,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Objeto de ejemplo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 283,
    "kind": "function",
    "name": "_header",
    "memberof": "lib/libs/ApidocCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~_header",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/ApidocCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 125,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "Propiedades de la ruta."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 284,
    "kind": "function",
    "name": "_createApidoc",
    "memberof": "lib/libs/ApidocCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~_createApidoc",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/ApidocCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 154,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fullprop",
        "description": "Ruta completa del campo."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Objeto que contiene los campos."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "apidocProperty",
        "description": "Tipo de campo a documentar."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Tipo de campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 285,
    "kind": "function",
    "name": "_createDescription",
    "memberof": "lib/libs/ApidocCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~_createDescription",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/ApidocCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 193,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Atributo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldName",
        "description": "Nombre del campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 286,
    "kind": "function",
    "name": "_createValidateDescription",
    "memberof": "lib/libs/ApidocCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~_createValidateDescription",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/ApidocCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 207,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Atributo."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "onlyType",
        "description": "Indica si solo se devolverá el tipo o se\n                             incluirán algunos detalles más específicos."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 287,
    "kind": "function",
    "name": "_apidocProp",
    "memberof": "lib/libs/ApidocCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~_apidocProp",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/ApidocCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 228,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Atributo"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "prop",
        "description": "Nombre completo del campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 288,
    "kind": "function",
    "name": "_apidocType",
    "memberof": "lib/libs/ApidocCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~_apidocType",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/ApidocCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 241,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Atributo"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "onlyType",
        "description": "Indica si solo se devolverá el tipo o se\n                            incluirán algunos detalles más específicos."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 289,
    "kind": "function",
    "name": "_normalizeValidate",
    "memberof": "lib/libs/ApidocCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~_normalizeValidate",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/ApidocCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 258,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Atributo de un modelo sequelize."
      }
    ],
    "return": null
  },
  {
    "__docId__": 290,
    "kind": "function",
    "name": "_createData",
    "memberof": "lib/libs/ApidocCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~_createData",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/ApidocCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 293,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Objeto con todos los campos."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "onlyRequired",
        "description": "Indica si se incluirán solo los atributos requeridos o todos."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 291,
    "kind": "function",
    "name": "_isField",
    "memberof": "lib/libs/ApidocCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~_isField",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/ApidocCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 323,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Objeto."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 292,
    "kind": "function",
    "name": "_exampleData",
    "memberof": "lib/libs/ApidocCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ApidocCreator.js~_exampleData",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/ApidocCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 336,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Atributo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Boolean",
        "Number",
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 293,
    "kind": "file",
    "name": "lib/libs/FieldCreator.js",
    "content": "/** @ignore */ const _          = require('lodash')\n/** @ignore */ const Sequelize  = require('sequelize')\n/** @ignore */ const moment     = require('moment')\n\n/**\n* Clase para definir campos.\n*/\nclass FieldCreator {\n  /**\n  * Devuelve un campo de tipo STRING que representa un a cadena de texto.\n  * @param {Number|Object} [LENGTH]              - Longitud de la cadena o propiedades del campo.\n  * @param {Object}        [PROPERTIES]          - Propiedades del campo.\n  * @param {String}        [PROPERTIES.validate] - Objeto para validar el campo.\n  * @return {Object}\n  */\n  static STRING (LENGTH, PROPERTIES = {}) {\n    const length     = (LENGTH && (typeof LENGTH === 'number')) ? LENGTH : 255\n    const properties = (LENGTH && (typeof LENGTH === 'object')) ? LENGTH : PROPERTIES\n    properties.type            = Sequelize.STRING(length)\n    properties.validate        = _createValidate(properties.type, null, properties.validate)\n    properties._modelAttribute = true\n    return properties\n  }\n\n  /**\n  * Devuelve un campo de tipo INTEGER que representa un número entero.\n  * @param {Object} [properties]          - Propiedades del campo.\n  * @param {String} [properties.validate] - Objeto para validar el campo.\n  * @return {Object}\n  */\n  static INTEGER (properties = {}) {\n    properties.type            = Sequelize.INTEGER()\n    properties.validate        = _createValidate(properties.type, { min: 0 }, properties.validate)\n    properties._modelAttribute = true\n    return properties\n  }\n\n  /**\n  * Devuelve un campo de tipo FLOAT que representa un número en coma flotante.\n  * @param {Object} [properties]          - Propiedades del campo.\n  * @param {String} [properties.validate] - Objeto para validar el campo.\n  * @return {Object}\n  */\n  static FLOAT (properties = {}) {\n    properties.type            = Sequelize.FLOAT()\n    properties.validate        = _createValidate(properties.type, { min: 0 }, properties.validate)\n    properties._modelAttribute = true\n    return properties\n  }\n\n  /**\n  * Devuelve un campo de tipo BOOLEAN que representa un valor booleano.\n  * @param {Object} [properties]          - Propiedades del campo.\n  * @param {String} [properties.validate] - Objeto para validar el campo.\n  * @return {Object}\n  */\n  static BOOLEAN (properties = {}) {\n    properties.type            = Sequelize.BOOLEAN()\n    properties.validate        = _createValidate(properties.type, null, properties.validate)\n    properties._modelAttribute = true\n    return properties\n  }\n\n  /**\n  * Devuelve un campo de tipo DATE que representa una fecha.\n  * @param {Object} [properties]          - Propiedades del campo.\n  * @param {String} [properties.validate] - Objeto para validar el campo.\n  * @return {Object}\n  */\n  static DATE (properties = {}) {\n    properties.type            = Sequelize.DATE()\n    properties.validate        = _createValidate(properties.type, null, properties.validate)\n    properties._modelAttribute = true\n    return properties\n  }\n\n  /**\n  * Devuelve un campo de tipo DATEONLY que representa a una fecha sin tiempo.\n  * @param {Object} [properties]          - Propiedades del campo.\n  * @param {String} [properties.validate] - Objeto para validar el campo.\n  * @return {Object}\n  */\n  static DATEONLY (properties = {}) {\n    properties.type            = Sequelize.DATEONLY()\n    properties.validate        = _createValidate(properties.type, null, properties.validate)\n    properties._modelAttribute = true\n    return properties\n  }\n\n  /**\n  * Devuelve un campo de tipo TIME que representa a una hora 00:00:00 - 24:00:00.\n  * @param {Object} [properties]          - Propiedades del campo.\n  * @param {String} [properties.validate] - Objeto para validar el campo.\n  * @return {Object}\n  */\n  static TIME (properties = {}) {\n    properties.type            = Sequelize.TIME()\n    properties.validate        = _createValidate(properties.type, null, properties.validate)\n    properties._modelAttribute = true\n    return properties\n  }\n\n  /**\n  * Devuelve un campo de tipo TEXT que representa un bloque de texto.\n  * @param {Object} [properties]          - Propiedades del campo.\n  * @param {String} [properties.validate] - Objeto para validar el campo.\n  * @return {Object}\n  */\n  static TEXT (properties = {}) {\n    properties.type            = Sequelize.TEXT()\n    properties.validate        = _createValidate(properties.type, null, properties.validate)\n    properties._modelAttribute = true\n    return properties\n  }\n\n  /**\n  * Devuelve un campo de tipo JSON que representa a un objeto de tipo JSON.\n  * @param {Object} [properties]          - Propiedades del campo.\n  * @param {String} [properties.validate] - Objeto para validar el campo.\n  * @return {Object}\n  */\n  static JSON (properties = {}) {\n    properties.type            = Sequelize.JSON()\n    properties.validate        = _createValidate(properties.type, null, properties.validate)\n    properties._modelAttribute = true\n    return properties\n  }\n\n  /**\n  * Devuelve un campo de tipo JSONB que representa a un objeto de tipo JSONB.\n  * @param {Object} [properties]          - Propiedades del campo.\n  * @param {String} [properties.validate] - Objeto para validar el campo.\n  * @return {Object}\n  */\n  static JSONB (properties = {}) {\n    properties.type            = Sequelize.JSONB()\n    properties.validate        = _createValidate(properties.type, null, properties.validate)\n    properties._modelAttribute = true\n    return properties\n  }\n\n  /**\n  * Devuelve un campo de tipo UUID que representa a una cadena de texto de tipo UUID.\n  * @param {Object} [properties]          - Propiedades del campo.\n  * @param {String} [properties.validate] - Objeto para validar el campo.\n  * @return {Object}\n  */\n  static UUID (properties = {}) {\n    properties.type            = Sequelize.UUID()\n    properties.validate        = _createValidate(properties.type, null, properties.validate)\n    properties._modelAttribute = true\n    return properties\n  }\n\n  /**\n  * Devuelve un campo de tipo ARRAY que representa una lista.\n  * Tipo de dato soportado: STRING, INTEGER, FLOAT, BOOLEAN o DATE\n  * @param {Object} field                 - Tipo de dato de los elementos de la lista.\n  * @param {Object} [properties]          - Propiedades del campo.\n  * @param {String} [properties.validate] - Objeto para validar el campo.\n  * @return {Object}\n  */\n  static ARRAY (field, properties = {}) {\n    const args = field.type.key === 'STRING' ? field.type.options.length : (field.type.key === 'ENUM' ? field.type.values : undefined)\n    properties.type            = Sequelize.ARRAY(Sequelize[field.type.key](args))\n    properties.validate        = _createValidate(properties.type, null, properties.validate)\n    properties._modelAttribute = true\n    return properties\n  }\n\n  /**\n  * Devuelve un campo de tipo ENUM que representa un conjunto de valores.\n  * @param {!String[]} values               - Valores del campo.\n  * @param {Object}   [properties]          - Propiedades del campo.\n  * @param {String}   [properties.validate] - Objeto para validar el campo.\n  * @return {Object}\n  */\n  static ENUM (values, properties = {}) {\n    properties.type            = Sequelize.ENUM(values)\n    properties.validate        = _createValidate(properties.type, null, properties.validate)\n    properties._modelAttribute = true\n    return properties\n  }\n\n  /**\n  * Convierte las propiedades de un atributo en una referencia THIS.\n  * Opcionalmente se puede indicar el nombre del modelo.\n  * @param {Object} [properties] - Propiedades del campo.\n  * @return {Object}\n  */\n  static THIS (properties = {}) {\n    properties._this = true\n    return properties\n  }\n\n  /**\n  * Devuelve un campo a partir de un atributo que ya ha sido definido.\n  * @param {!Object} field                 - Atributo sequelize.\n  * @param {Object}  [properties]          - Propiedades a modificar del campo.\n  * @param {String}  [properties.validate] - Objeto para validar el campo.\n  * @return {Object}\n  */\n  static clone (field, properties = {}) {\n    if (!field.type) {\n      throw new Error(`El objeto a clonar debe ser atributo de un modelo sequelize.`)\n    }\n    properties = Object.assign(_.cloneDeep(field), properties)\n    delete properties.fieldName\n    properties._modelAttribute = true\n    return properties\n  }\n\n  /**\n  * Adiciona un tipo de dato personalizado a la lista de tipos existente.\n  * @param {!String} name                    - Nombre con el que se identificará al nuevo tipo de campo.\n  * @param {!Field}  field                   - Instancia de la clase Field.\n  * @param {Object}  options                 - Opciones de adición.\n  * @param {Boolean} [options.force = false] - Indica si se sobreescribirá el tipo de dato anterior, si es que hubiese.\n  */\n  static use (name, field, options = {}) {\n    options.force = typeof options.force === 'boolean' ? options.force : false\n    const NAME = name.toUpperCase()\n    FieldCreator[NAME] = (properties = {}) => { return FieldCreator.clone(field, properties) }\n  }\n\n  /**\n  * Crea un objeto con campos definidos en varios niveles a partir de un modelo.\n  * Los niveles son las asociaciones que tiene el modelo.\n  * @param {SequelizeModel} [model] - Modelo Sequelize.\n  * @param {Object}         obj     - Objeto que contiene campos con referencias THIS.\n  * @return {Object}\n  */\n  static group (model, obj) {\n    return _updateTHIS(model, obj)\n  }\n\n  /**\n  * Valida el contenido de un objeto FieldGrouṕ.\n  * @param {Object} fieldGroup - Objeto a validar.\n  */\n  static validateGroup (fieldGroup) {\n    _validateGroup(fieldGroup)\n  }\n}\n\n/**\n* @ignore\n* Indica si un objeto es una referencia THIS.\n* @param {Object} obj - Objeto.\n* @return {Boolean}\n*/\nfunction _isTHIS (obj) {\n  if (obj && obj._this && (obj._this === true)) {\n    return true\n  }\n  return false\n}\n\n/**\n* @ignore\n* Indica si un objeto es atributo de un modelo.\n* @param {Object} obj - Objeto.\n* @return {Boolean}\n*/\nfunction _isField (obj) {\n  if (obj && obj._modelAttribute && (obj._modelAttribute === true)) {\n    return true\n  }\n  return false\n}\n\n/**\n* @ignore\n* Devuelve un objeto cuyos campos han sido definidos como THIS, con el valor que le corresponde.\n* Si el atributo no tiene un fieldName, se le asigna uno.\n* @param {SequelizeModel} model       - Modelo Sequelize\n* @param {Object}         obj         - Objeto (grupo de fields).\n* @param {String}         fullPath    - Nombre completo de la propiedad.\n* @param {Model}          [baseModel] - Modelo declarado en la función group (Field.group(model, { ... })).\n* @return {Object}\n*/\nfunction _updateTHIS (model, obj, fullPath = '', baseModel) {\n  const RESULT = {}\n  if (Array.isArray(obj)) {\n    return [_updateTHIS(model, obj[0], fullPath, baseModel || model)]\n  }\n  Object.keys(obj).forEach(prop => {\n    const OBJ = obj[prop]\n    const fullPath2 = `${fullPath ? `${fullPath}.` : ''}${prop}`\n    if (_isTHIS(OBJ)) {\n      if (!model || !model.attributes[prop]) {\n        let msg = `El campo '${fullPath2}: THIS()' no es parte del modelo ${baseModel ? `'${baseModel.name}'` : `'${model ? model.name : 'null'}'`}.\\n`\n        throw new Error(msg)\n      }\n      delete OBJ._this\n      RESULT[prop] = Object.assign(_.cloneDeep(model.attributes[prop]), OBJ)\n      return\n    }\n    if (_isField(OBJ)) {\n      OBJ.fieldName = OBJ.fieldName || prop\n      OBJ.field     = OBJ.field     || prop\n      RESULT[prop] = OBJ\n      return\n    }\n    if (typeof OBJ === 'object') {\n      const SUB_MODEL = (model && model.associations[prop]) ? model.associations[prop].target : null\n      RESULT[prop] = _updateTHIS(SUB_MODEL, OBJ, `${fullPath2}`, baseModel || model)\n    }\n  })\n  return RESULT\n}\n\n/**\n* @ignore\n* Valida el objeto FieldGroup.\n* @param {Object} obj      - Objeto de tipo FieldGRoup.\n* @param {String} fullPath - Nombre completo de una propiedad\n*/\nfunction _validateGroup (obj, fullPath = '') {\n  if (Array.isArray(obj)) {\n    if (obj.length !== 1 || typeof obj[0] !== 'object' || Array.isArray(obj[0])) {\n      throw new Error(`El campo '${fullPath}' debe ser un Array de 1 solo elemento de tipo 'object'`)\n    }\n    return _validateGroup(obj[0], fullPath)\n  }\n  Object.keys(obj).forEach(prop => {\n    const OBJ = obj[prop]\n    if (_isField(OBJ)) {\n      return\n    }\n    const fullPath2 = `${fullPath ? `${fullPath}.` : ''}${prop}`\n    if (_isTHIS(OBJ)) {\n      let msg = `El campo '${fullPath2}: THIS()' debe ser parte de un modelo.\\n`\n      throw new Error(msg)\n    }\n    if (typeof OBJ === 'object') {\n      return _validateGroup(OBJ, `${fullPath2}`)\n    }\n    throw new Error(`El campo '${fullPath2}' = '${OBJ}' es inválido.`)\n  })\n}\n\n/**\n* @ignore\n* Devuelve un objeto validate.\n* @param {!SequelizeType} type              - Propiedad tipo del atributo de un modelo sequelize.\n* @param {Object}         [defaultValidate] - Propiedad validate por defecto.\n* @param {Object}         [customValidate]  - Propiedad validate personalizado.\n* @return {Object}\n*/\nfunction _createValidate (type, defaultValidate = {}, customValidate) {\n  if (customValidate === null) { return null }\n  let val = {}\n  if (type.key === 'STRING')   { val = { len: [0, type.options.length] } }\n  if (type.key === 'TEXT')     { val = { len: [0, 2147483647] } }\n  if (type.key === 'INTEGER')  { val = { isInt: true, min: -2147483647, max: 2147483647 } }\n  if (type.key === 'FLOAT')    { val = { isFloat: true, min: -1E+308, max: 1E+308 } }\n  if (type.key === 'ENUM')     { val = { isIn: [type.values] } }\n  if (type.key === 'BOOLEAN')  { val = { isBoolean: true } }\n  if (type.key === 'DATE')     { val = { isDate: true } }\n  if (type.key === 'DATEONLY') { val = { isDate: true } }\n  if (type.key === 'TIME')     { val = { isTime: _isTimeValidate() } }\n  if (type.key === 'JSON')     { val = { isJson: _isJsonValidate() } }\n  if (type.key === 'JSONB')    { val = { isJson: _isJsonValidate() } }\n  if (type.key === 'UUID')     { val = { isUUID: 4 } }\n  if (type.key === 'ARRAY')    { val = { isArray: _isArrayValidate(type.type) } }\n  const FIELD = { validate: Object.assign(Object.assign(val, defaultValidate), customValidate) }\n  _normalizeValidate(FIELD)\n  return FIELD.validate\n}\n\n/**\n* @ignore\n* Devuelve un validador para el tipo de dato TIME.\n* @return {Function}\n*/\nfunction _isTimeValidate () {\n  return (value) => {\n    if (!moment(value, 'HH:mm:ss', true).isValid()) {\n      throw new Error(`Formato válido: HH:mm:ss`)\n    }\n  }\n}\n\n/**\n* @ignore\n* Devuelve un validador para el tipo de dato JSON.\n* @return {Function}\n*/\nfunction _isJsonValidate () {\n  return (value) => {\n    if (typeof value !== 'object') {\n      throw new Error('Debe ser un objeto de tipo JSON.')\n    }\n  }\n}\n\n/**\n* @ignore\n* Devuelve un validador para el tipo de dato ARRAY.\n* @param {SequelizeType} type - Propiedad tipo del atributo de un modelo sequelize.\n* @return {Function}\n*/\nfunction _isArrayValidate (type) {\n  return (value) => {\n    if (!Array.isArray(value)) {\n      throw new Error(`Debe ser un Array.`)\n    }\n    value.forEach(val => {\n      if ((type.key === 'STRING') && !Sequelize.Validator.len(`${val}`, 0, type.options.length)) {\n        throw new Error(`Cada elemento debe ser una cadena de texto con un máximo de ${type.options.length} caracteres.`)\n      }\n      if ((type.key === 'TEXT') && !Sequelize.Validator.len(`${val}`, 0, 2147483647)) {\n        throw new Error(`Cada elemento debe ser una cadena de texto.`)\n      }\n      if ((type.key === 'INTEGER') && !Sequelize.Validator.isInt(`${val}`)) {\n        throw new Error(`Cada elemento debe ser de un número de tipo INTEGER.`)\n      }\n      if ((type.key === 'FLOAT') && !Sequelize.Validator.isFloat(`${val}`)) {\n        throw new Error(`Cada elemento debe ser de un número de tipo FLOAT.`)\n      }\n      if ((type.key === 'BOOLEAN') && !Sequelize.Validator.isBoolean(`${val}`)) {\n        throw new Error(`Cada elemento debe ser de tipo boolean.`)\n      }\n      if ((type.key === 'DATE') && !Sequelize.Validator.isDate(`${val}`)) {\n        throw new Error(`Cada elemento debe ser una fecha válida.`)\n      }\n      if ((type.key === 'DATEONLY') && !Sequelize.Validator.isDate(`${val}`)) {\n        throw new Error(`Cada elemento debe ser una fecha válida.`)\n      }\n      if ((type.key === 'TIME') && !moment(val, 'HH:mm:ss', true).isValid()) {\n        throw new Error(`Cada elemento debe ser una hora válida.`)\n      }\n      if ((type.key === 'JSON') && (typeof val !== 'object')) {\n        throw new Error(`Cada elemento debe ser un objeto de tipo JSON.`)\n      }\n      if ((type.key === 'JSONB') && (typeof val !== 'object')) {\n        throw new Error(`Cada elemento debe ser un objeto de tipo JSON.`)\n      }\n      if ((type.key === 'UUID') && !Sequelize.Validator.isUUID(`${val}`)) {\n        throw new Error(`Cada elemento debe ser una cadena de texto de tipo UUID.`)\n      }\n      if ((type.key === 'ENUM') && !Sequelize.Validator.isIn(`${val}`, type.values)) {\n        throw new Error(`Cada elemento debe ser uno de los siguientes valores: ${type.values.toString()}.`)\n      }\n    })\n  }\n}\n\n/**\n* @ignore\n* Normaliza la propiedad validate.\n* @param {Object} field Atributo de un modelo sequelize.\n*/\nfunction _normalizeValidate (field) {\n  if (field.validate) {\n    Object.keys(field.validate).forEach(key => {\n      let validateItem = field.validate[key]\n      if (typeof validateItem === 'function') { return }\n      // Adiciona la propiedad args, si el validador no lo tuviera.\n      // Ejemplo:    min: 10   ->   min: { args: 10 }           isInt: true    ->    isInt: { args: true }\n      if ((typeof validateItem !== 'object') || (typeof validateItem.args === 'undefined')) {\n        field.validate[key] = { args: validateItem }\n      }\n      // Convierte los validadores booleanos:    isInt: { args: true }   ->    isInt: true\n      // Sequelize no admite validateKey: { args: true }, es por eso que si existe, ésta se elimina.\n      if (typeof field.validate[key].args === 'boolean') {\n        delete field.validate[key].args\n        if (typeof field.validate[key].msg === 'undefined') {\n          field.validate[key] = true\n        }\n      }\n      // Corrige el problema cuando se declaran args con valores de 0 y 1.\n      // Se corrige porque Sequelize los toma como valores booleanos, cuando debería tomarlos como números enteros.\n      // Ejemplo:     min: { args: 0 }  ->   min: { args: [0] }    y   min: { args: 1 }  ->   min: { args: [1] }\n      if ((typeof field.validate[key].args !== 'undefined') && ((field.validate[key].args === 0) || (field.validate[key].args === 1))) {\n        field.validate[key].args = [field.validate[key].args]\n      }\n    })\n  }\n}\n\nmodule.exports = FieldCreator\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/FieldCreator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 294,
    "kind": "variable",
    "name": "_",
    "memberof": "lib/libs/FieldCreator.js",
    "static": true,
    "longname": "lib/libs/FieldCreator.js~_",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/FieldCreator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "variable",
    "name": "Sequelize",
    "memberof": "lib/libs/FieldCreator.js",
    "static": true,
    "longname": "lib/libs/FieldCreator.js~Sequelize",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/FieldCreator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "variable",
    "name": "moment",
    "memberof": "lib/libs/FieldCreator.js",
    "static": true,
    "longname": "lib/libs/FieldCreator.js~moment",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/FieldCreator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "class",
    "name": "FieldCreator",
    "memberof": "lib/libs/FieldCreator.js",
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/FieldCreator.js",
    "importStyle": null,
    "description": "Clase para definir campos.",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 298,
    "kind": "method",
    "name": "STRING",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.STRING",
    "access": "public",
    "description": "Devuelve un campo de tipo STRING que representa un a cadena de texto.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number",
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "LENGTH",
        "description": "Longitud de la cadena o propiedades del campo."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "PROPERTIES",
        "description": "Propiedades del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "PROPERTIES.validate",
        "description": "Objeto para validar el campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 299,
    "kind": "method",
    "name": "INTEGER",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.INTEGER",
    "access": "public",
    "description": "Devuelve un campo de tipo INTEGER que representa un número entero.",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "properties",
        "description": "Propiedades del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "properties.validate",
        "description": "Objeto para validar el campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 300,
    "kind": "method",
    "name": "FLOAT",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.FLOAT",
    "access": "public",
    "description": "Devuelve un campo de tipo FLOAT que representa un número en coma flotante.",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "properties",
        "description": "Propiedades del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "properties.validate",
        "description": "Objeto para validar el campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 301,
    "kind": "method",
    "name": "BOOLEAN",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.BOOLEAN",
    "access": "public",
    "description": "Devuelve un campo de tipo BOOLEAN que representa un valor booleano.",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "properties",
        "description": "Propiedades del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "properties.validate",
        "description": "Objeto para validar el campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 302,
    "kind": "method",
    "name": "DATE",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.DATE",
    "access": "public",
    "description": "Devuelve un campo de tipo DATE que representa una fecha.",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "properties",
        "description": "Propiedades del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "properties.validate",
        "description": "Objeto para validar el campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 303,
    "kind": "method",
    "name": "DATEONLY",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.DATEONLY",
    "access": "public",
    "description": "Devuelve un campo de tipo DATEONLY que representa a una fecha sin tiempo.",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "properties",
        "description": "Propiedades del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "properties.validate",
        "description": "Objeto para validar el campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "TIME",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.TIME",
    "access": "public",
    "description": "Devuelve un campo de tipo TIME que representa a una hora 00:00:00 - 24:00:00.",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "properties",
        "description": "Propiedades del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "properties.validate",
        "description": "Objeto para validar el campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "TEXT",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.TEXT",
    "access": "public",
    "description": "Devuelve un campo de tipo TEXT que representa un bloque de texto.",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "properties",
        "description": "Propiedades del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "properties.validate",
        "description": "Objeto para validar el campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "JSON",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.JSON",
    "access": "public",
    "description": "Devuelve un campo de tipo JSON que representa a un objeto de tipo JSON.",
    "lineNumber": 122,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "properties",
        "description": "Propiedades del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "properties.validate",
        "description": "Objeto para validar el campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 307,
    "kind": "method",
    "name": "JSONB",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.JSONB",
    "access": "public",
    "description": "Devuelve un campo de tipo JSONB que representa a un objeto de tipo JSONB.",
    "lineNumber": 135,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "properties",
        "description": "Propiedades del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "properties.validate",
        "description": "Objeto para validar el campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "UUID",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.UUID",
    "access": "public",
    "description": "Devuelve un campo de tipo UUID que representa a una cadena de texto de tipo UUID.",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "properties",
        "description": "Propiedades del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "properties.validate",
        "description": "Objeto para validar el campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 309,
    "kind": "method",
    "name": "ARRAY",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.ARRAY",
    "access": "public",
    "description": "Devuelve un campo de tipo ARRAY que representa una lista.\nTipo de dato soportado: STRING, INTEGER, FLOAT, BOOLEAN o DATE",
    "lineNumber": 163,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Tipo de dato de los elementos de la lista."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "properties",
        "description": "Propiedades del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "properties.validate",
        "description": "Objeto para validar el campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 310,
    "kind": "method",
    "name": "ENUM",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.ENUM",
    "access": "public",
    "description": "Devuelve un campo de tipo ENUM que representa un conjunto de valores.",
    "lineNumber": 178,
    "params": [
      {
        "nullable": false,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": "Valores del campo."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "properties",
        "description": "Propiedades del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "properties.validate",
        "description": "Objeto para validar el campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 311,
    "kind": "method",
    "name": "THIS",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.THIS",
    "access": "public",
    "description": "Convierte las propiedades de un atributo en una referencia THIS.\nOpcionalmente se puede indicar el nombre del modelo.",
    "lineNumber": 191,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "properties",
        "description": "Propiedades del campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 312,
    "kind": "method",
    "name": "clone",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.clone",
    "access": "public",
    "description": "Devuelve un campo a partir de un atributo que ya ha sido definido.",
    "lineNumber": 203,
    "params": [
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Atributo sequelize."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "properties",
        "description": "Propiedades a modificar del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "properties.validate",
        "description": "Objeto para validar el campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "use",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.use",
    "access": "public",
    "description": "Adiciona un tipo de dato personalizado a la lista de tipos existente.",
    "lineNumber": 220,
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Nombre con el que se identificará al nuevo tipo de campo."
      },
      {
        "nullable": false,
        "types": [
          "Field"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Instancia de la clase Field."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Opciones de adición."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " false",
        "defaultRaw": false,
        "name": "options.force",
        "description": "Indica si se sobreescribirá el tipo de dato anterior, si es que hubiese."
      }
    ],
    "return": null
  },
  {
    "__docId__": 314,
    "kind": "method",
    "name": "group",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.group",
    "access": "public",
    "description": "Crea un objeto con campos definidos en varios niveles a partir de un modelo.\nLos niveles son las asociaciones que tiene el modelo.",
    "lineNumber": 233,
    "params": [
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": true,
        "name": "model",
        "description": "Modelo Sequelize."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Objeto que contiene campos con referencias THIS."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 315,
    "kind": "method",
    "name": "validateGroup",
    "memberof": "lib/libs/FieldCreator.js~FieldCreator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~FieldCreator.validateGroup",
    "access": "public",
    "description": "Valida el contenido de un objeto FieldGrouṕ.",
    "lineNumber": 241,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldGroup",
        "description": "Objeto a validar."
      }
    ],
    "return": null
  },
  {
    "__docId__": 316,
    "kind": "function",
    "name": "_isTHIS",
    "memberof": "lib/libs/FieldCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~_isTHIS",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/FieldCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 252,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Objeto."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 317,
    "kind": "function",
    "name": "_isField",
    "memberof": "lib/libs/FieldCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~_isField",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/FieldCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 265,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Objeto."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 318,
    "kind": "function",
    "name": "_updateTHIS",
    "memberof": "lib/libs/FieldCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~_updateTHIS",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/FieldCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 282,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "Modelo Sequelize"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Objeto (grupo de fields)."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fullPath",
        "description": "Nombre completo de la propiedad."
      },
      {
        "nullable": null,
        "types": [
          "Model"
        ],
        "spread": false,
        "optional": true,
        "name": "baseModel",
        "description": "Modelo declarado en la función group (Field.group(model, { ... }))."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 319,
    "kind": "function",
    "name": "_validateGroup",
    "memberof": "lib/libs/FieldCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~_validateGroup",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/FieldCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 319,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Objeto de tipo FieldGRoup."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fullPath",
        "description": "Nombre completo de una propiedad"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "function",
    "name": "_createValidate",
    "memberof": "lib/libs/FieldCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~_createValidate",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/FieldCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 351,
    "ignore": true,
    "params": [
      {
        "nullable": false,
        "types": [
          "SequelizeType"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Propiedad tipo del atributo de un modelo sequelize."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "defaultValidate",
        "description": "Propiedad validate por defecto."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "customValidate",
        "description": "Propiedad validate personalizado."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 321,
    "kind": "function",
    "name": "_isTimeValidate",
    "memberof": "lib/libs/FieldCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~_isTimeValidate",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/FieldCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 377,
    "ignore": true,
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 322,
    "kind": "function",
    "name": "_isJsonValidate",
    "memberof": "lib/libs/FieldCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~_isJsonValidate",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/FieldCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 390,
    "ignore": true,
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 323,
    "kind": "function",
    "name": "_isArrayValidate",
    "memberof": "lib/libs/FieldCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~_isArrayValidate",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/FieldCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 404,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "SequelizeType"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Propiedad tipo del atributo de un modelo sequelize."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 324,
    "kind": "function",
    "name": "_normalizeValidate",
    "memberof": "lib/libs/FieldCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/FieldCreator.js~_normalizeValidate",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/FieldCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 455,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Atributo de un modelo sequelize."
      }
    ],
    "return": null
  },
  {
    "__docId__": 325,
    "kind": "file",
    "name": "lib/libs/InputDataValidator.js",
    "content": "/** @ignore */ const _               = require('lodash')\n/** @ignore */ const path            = require('path')\n/** @ignore */ const handlebars      = require('handlebars')\n/** @ignore */ const Sequelize       = require('sequelize')\n/** @ignore */ const bodyParser      = require('body-parser')\n/** @ignore */ const ValidationError = require('./ValidationError')\n\n/**\n* @ignore\n* Clase Validator\n*/\nclass InputDataValidator {\n  /**\n  * Devuelve un middleware para Validar los datos de entrada.\n  * @param {Object}   input          - Objeto input.\n  * @param {Object}   options        - Opciones de configuración.\n  * @param {String[]} options.remove - Contiene los campos que serán removidos si no han sdo especificados en el input.\n  * @return {Function}\n  */\n  static validate (input, options = {}) {\n    options.remove = options.remove || ['body']\n    InputDataValidator.ERROR_MSG = require(path.resolve(__dirname, `./lang/${InputDataValidator.LANGUAJE}.js`)).errors\n    if (!input) {\n      return (req, res, next) => { next() }\n    }\n    _addValidator(input)\n    const inputMiddleware = async (req, res, next) => {\n      try {\n        const body    = req.body    || {}\n        const headers = req.headers || {}\n        const params  = req.params  || {}\n        const query   = req.query   || {}\n        const { errors, result } = await _validate(input, { body, headers, params, query })\n        if (errors.length > 0) {\n          return next(new ValidationError(errors))\n        }\n        if (result.headers) Object.keys(result.headers).forEach(key => { req.headers[key] = result.headers[key] })\n        if (result.params)  Object.keys(result.params).forEach(key  => { req.params[key]  = result.params[key]  })\n        if (result.query)   Object.keys(result.query).forEach(key   => { req.query[key]   = result.query[key]   })\n        if (result.body)    Object.keys(result.body).forEach(key    => { req.body[key]    = result.body[key]    })\n        if (options.remove.includes('headers')) req.headers = result.headers\n        if (options.remove.includes('params'))  req.params  = result.params\n        if (options.remove.includes('query'))   req.query   = result.query\n        if (options.remove.includes('body'))    req.body    = result.body\n        next()\n      } catch (err) { next(err) }\n    }\n    return [bodyParser.json(), inputMiddleware]\n  }\n\n  /**\n  * Indica si un objeto es requerido o no.\n  * Si alguno de sus campos contiene la propiedad allowNullObj igual a false, el objeto será requerido.\n  * @param {Object} obj - Objeto de tipo FieldGroup.\n  * @return {Boolean}\n  */\n  static isRequired (obj) {\n    if (_isField(obj)) { return (typeof obj.allowNullObj !== 'undefined') && (obj.allowNullObj === false) }\n    if (Array.isArray(obj)) { obj = obj[0] }\n    for (let prop in obj) {\n      const FIELD = obj[prop]\n      if (_isField(FIELD) && (typeof FIELD.allowNullObj !== 'undefined') && (FIELD.allowNullObj === false)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\n/**\n* @ignore\n* Parsea el valor de un campo, según el tipo de dato.\n* @param {SequelizeField} field - Campo de referencia.\n* @param {Object}         value - Dato a parsear.\n* @return {Object} Dato parseado.\n*/\nfunction _parseValue (field, value) {\n  if (field.type.key === 'STRING')   { return Sequelize.Validator.toString(value + '') }\n  if (field.type.key === 'TEXT')     { return Sequelize.Validator.toString(value + '') }\n  if (field.type.key === 'ENUM')     { return Sequelize.Validator.toString(value + '') }\n  if (field.type.key === 'INTEGER')  { return Sequelize.Validator.toInt(value + '') }\n  if (field.type.key === 'FLOAT')    { return Sequelize.Validator.toFloat(value + '') }\n  if (field.type.key === 'BOOLEAN')  { return Sequelize.Validator.toBoolean(value + '') }\n  if (field.type.key === 'DATE')     { return Sequelize.Validator.toDate(value + '') }\n  if (field.type.key === 'DATEONLY') { return Sequelize.Validator.toString(value + '') }\n  if (field.type.key === 'TIME')     { return Sequelize.Validator.toString(value + '') }\n  if (field.type.key === 'JSON')     { return typeof value === 'string' ? JSON.parse(value) : value }\n  if (field.type.key === 'JSONB')    { return typeof value === 'string' ? JSON.parse(value) : value }\n  if (field.type.key === 'UUID')     { return Sequelize.Validator.toString(value + '') }\n  if (field.type.key === 'ARRAY') {\n    const values = []\n    if (field.type.type.key === 'STRING')   for (let i in value) { values.push(Sequelize.Validator.toString(value[i] + '')) }\n    if (field.type.type.key === 'TEXT')     for (let i in value) { values.push(Sequelize.Validator.toString(value[i] + '')) }\n    if (field.type.type.key === 'ENUM')     for (let i in value) { values.push(Sequelize.Validator.toString(value[i] + '')) }\n    if (field.type.type.key === 'INTEGER')  for (let i in value) { values.push(Sequelize.Validator.toInt(value[i] + '')) }\n    if (field.type.type.key === 'FLOAT')    for (let i in value) { values.push(Sequelize.Validator.toFloat(value[i] + '')) }\n    if (field.type.type.key === 'BOOLEAN')  for (let i in value) { values.push(Sequelize.Validator.toBoolean(value[i] + '')) }\n    if (field.type.type.key === 'DATE')     for (let i in value) { values.push(Sequelize.Validator.toDate(value[i] + '')) }\n    if (field.type.type.key === 'DATEONLY') for (let i in value) { values.push(Sequelize.Validator.toString(value[i] + '')) }\n    if (field.type.type.key === 'TIME')     for (let i in value) { values.push(Sequelize.Validator.toString(value[i] + '')) }\n    if (field.type.type.key === 'JSON')     for (let i in value) { values.push(typeof value[i] === 'string' ? JSON.parse(value[i]) : value[i]) }\n    if (field.type.type.key === 'JSONB')    for (let i in value) { values.push(typeof value[i] === 'string' ? JSON.parse(value[i]) : value[i]) }\n    if (field.type.type.key === 'UUID')     for (let i in value) { values.push(Sequelize.Validator.toString(value[i] + '')) }\n    return values\n  }\n  return value\n}\n\n/**\n* @ignore\n* Valida un objeto de tipo FieldGrouṕ.\n* Devuelve un objeto que contiene el resultado de la validación.\n*  - errors contiene todos los errores encontrados.\n*  - result contiene un objeto con los datos validos según el formato de entrada.\n* @param {Object} field                - Objeto de referencia (FieldGroup Array u Object)\n* @param {String|Boolean|Number} value - Dato a validar.\n* @param {String} path                 - Ruta del campo.\n* @param {String} fieldName            - Nombre del campo.\n* @return {Object}\n*/\nasync function _validate (field, value, path = '', fieldName = '') {\n  // El campo es de tpo FIELD\n  if (_isField(field)) {\n    return _validateField(field, value, path, fieldName)\n  }\n  // El campo es de tpo ARRAY\n  if (Array.isArray(field)) {\n    if (typeof value === 'undefined') {\n      return { errors: [], result: undefined }\n    }\n    let err = []\n    if (!Array.isArray(value)) {\n      err.push({ path: path, value: value, msg: handlebars.compile(InputDataValidator.ERROR_MSG.isArray)({ fieldName: _toWords(fieldName) }) })\n      return { errors: err, result: [] }\n    }\n    let res = []\n    for (let i in value) {\n      const { errors, result } = await _validate(field[0], value[i], path, fieldName)\n      err = err.concat(errors)\n      if (typeof result !== 'undefined') { res.push(result) }\n    }\n    return { errors: err, result: res }\n  }\n  // El campo es de tpo OBJECT\n  return _validateObject(field, value, path, fieldName)\n}\n\n/**\n* @ignore\n* Valida un objeto de tipo Field.\n* Devuelve un objeto que contiene el resultado de la validación.\n*  - errors contiene todos los errores encontrados.\n*  - result contiene un objeto con los datos validos según el formato de entrada.\n* @param {Object} field                - Objeto de referencia (Field)\n* @param {String|Boolean|Number} value - Dato a validar.\n* @param {String} path                 - Ruta del campo.\n* @param {String} fieldName            - Nombre del campo.\n* @return {Object}\n*/\nasync function _validateField (field, value, path, fieldName) {\n  let errors = []\n  try {\n    const MODEL = field.validator.build()\n    MODEL.dataValues[fieldName] = value\n    await MODEL.validate({ fields: [fieldName] })\n    value = (typeof value !== 'undefined') ? _parseValue(field, value) : undefined\n  } catch (err) {\n    if (!err.name || (err.name !== 'SequelizeValidationError')) { throw err }\n    for (let i in err.errors) {\n      const ERROR    = err.errors[i]\n      const FIELD    = field.validator.attributes[fieldName]\n      const VALIDATE = FIELD.validate ? FIELD.validate[ERROR.validatorKey] : undefined\n      let msg = VALIDATE ? VALIDATE.msg : ERROR.message\n      if (typeof VALIDATE === 'function') { msg += ` ${ERROR.message}` }\n      errors.push({\n        path  : path,\n        value : value,\n        msg   : (ERROR.validatorKey === 'is_null') ? FIELD.allowNullMsg : msg\n      })\n    }\n  }\n  return { errors, result: value }\n}\n\n/**\n* @ignore\n* Valida un objeto.\n* Devuelve un objeto que contiene el resultado de la validación.\n*  - errors contiene todos los errores encontrados.\n*  - result contiene un objeto con los datos validos según el formato de entrada.\n* @param {Object} field                - Objeto de referencia (FieldGroup Object).\n* @param {String|Boolean|Number} value - Dato a validar.\n* @param {String} path                 - Ruta del campo.\n* @param {String} fieldName            - Nombre del campo.\n* @return {Object}\n*/\nasync function _validateObject (field, value, path, fieldName) {\n  let err = []\n  if (typeof value === 'undefined') {\n    if (InputDataValidator.isRequired(field)) {\n      err.push({ path: path, value: value, msg: handlebars.compile(InputDataValidator.ERROR_MSG.allowNullObj)({ fieldName: _toWords(fieldName) }) })\n    }\n    return { errors: err, result: undefined }\n  }\n  if (typeof value !== 'object' || Array.isArray(value)) {\n    err.push({ path: path, value: value, msg: handlebars.compile(InputDataValidator.ERROR_MSG.isObject)({ fieldName: _toWords(fieldName) }) })\n    return { errors: err, result: {} }\n  }\n  let res = {}\n  for (let prop in field) {\n    const path2 = (path === '') ? prop : `${path}.${prop}`\n    const { errors, result } = await _validate(field[prop], value[prop], path2, prop)\n    err = err.concat(errors)\n    if (typeof result !== 'undefined') { res[prop] = result }\n  }\n  return { errors: err, result: res }\n}\n\n/**\n* @ignore\n* Función que indica si un objeto es un campo o no.\n* @param {Object} obj Objeto.\n* @return {String}\n*/\nfunction _isField (obj) {\n  if (obj && obj._modelAttribute && (obj._modelAttribute === true)) {\n    return true\n  }\n  return false\n}\n\n/**\n* @ignore\n* Adiciona la propiedad validator.\n* @param {Object} field     - Atributo.\n* @param {String} path      - Ruta del nombre del campo.\n* @param {String} fieldName - Nombre del campo.\n*/\nfunction _addValidator (field, path = '', fieldName = '') {\n  const PARAMS = {\n    dialect          : 'postgres',\n    lang             : 'es',\n    logging          : false,\n    operatorsAliases : false,\n    define           : { underscored: true, freezeTableName: true, timestamps: false }\n  }\n  if (_isField(field)) {\n    const FIELDS = {}\n    FIELDS[fieldName] = _.cloneDeep(field)\n    _updateErrorMsg(FIELDS[fieldName], fieldName)\n    const MODEL_NAME = field.Model ? field.Model.name : 'DEFAULT'\n    field.validator = (new Sequelize(null, null, null, PARAMS)).define(MODEL_NAME, FIELDS)\n  } else {\n    if (Array.isArray(field)) {\n      _addValidator(field[0], path, fieldName)\n    } else {\n      for (let prop in field) {\n        const path2 = (path === '') ? prop : `${path}.${prop}`\n        _addValidator(field[prop], path2, prop)\n      }\n    }\n  }\n}\n\n/**\n* @ignore\n* Actualiza los mensajes de error.\n* @param {String} field     - Atributo.\n* @param {String} fieldName - Nombre del campo.\n* @return {String}\n*/\nfunction _updateErrorMsg (field, fieldName) {\n  _normalizeValidate(field)\n  const data = { fieldName: _toWords(field.fieldName || fieldName) }\n  if (field.validate) {\n    Object.keys(field.validate).forEach(valKey => {\n      let msg = field.validate[valKey].msg || InputDataValidator.ERROR_MSG[valKey] || InputDataValidator.ERROR_MSG.default\n      data.args = field.validate[valKey].args\n      if (Array.isArray(data.args)) { for (let i = 0; i < data.args.length; i++) { data[`args${i}`] = data.args[i] } }\n      if (msg) { msg = handlebars.compile(msg)(data) }\n      if (typeof field.validate[valKey] === 'boolean') {\n        field.validate[valKey] = { msg }\n      } else {\n        field.validate[valKey].msg = msg\n      }\n    })\n  }\n  field.allowNullMsg = handlebars.compile(field.allowNullMsg || InputDataValidator.ERROR_MSG.allowNull)(data)\n}\n\n/**\n* @ignore\n* Normaliza la propiedad validate.\n* @param {Object} field Atributo de un modelo sequelize.\n*/\nfunction _normalizeValidate (field) {\n  if (field.validate) {\n    Object.keys(field.validate).forEach(key => {\n      let validateItem = field.validate[key]\n      if (typeof validateItem === 'function') { return }\n      // Adiciona la propiedad args, si el validador no lo tuviera.\n      // Ejemplo:    min: 10   ->   min: { args: 10 }           isInt: true    ->    isInt: { args: true }\n      if ((typeof validateItem !== 'object') || (typeof validateItem.args === 'undefined')) {\n        field.validate[key] = { args: validateItem }\n      }\n      // Convierte los validadores booleanos:    isInt: { args: true }   ->    isInt: true\n      // Sequelize no admite validateKey: { args: true }, es por eso que si existe, ésta se elimina.\n      if (typeof field.validate[key].args === 'boolean') {\n        delete field.validate[key].args\n        if (typeof field.validate[key].msg === 'undefined') {\n          field.validate[key] = true\n        }\n      }\n      // Corrige el problema cuando se declaran args con valores de 0 y 1.\n      // Se corrige porque Sequelize los toma como valores booleanos, cuando debería tomarlos como números enteros.\n      // Ejemplo:     min: { args: 0 }  ->   min: { args: [0] }    y   min: { args: 1 }  ->   min: { args: [1] }\n      if ((typeof field.validate[key].args !== 'undefined') && ((field.validate[key].args === 0) || (field.validate[key].args === 1))) {\n        field.validate[key].args = [field.validate[key].args]\n      }\n    })\n  }\n}\n\n/**\n* @ignore\n* Converte una palabra compuesta (frase sin espacios) en palabras separadas.\n* @param {String} str - Palabra compuesta.\n* @return {String}\n*/\nfunction _toWords (str) {\n  return _.words(str).toString().replace(/,/g, ' ')\n}\n\nInputDataValidator.LANGUAJE = 'es'\n\nmodule.exports = InputDataValidator\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/InputDataValidator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 326,
    "kind": "variable",
    "name": "_",
    "memberof": "lib/libs/InputDataValidator.js",
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~_",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/libs/InputDataValidator.js",
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~path",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "variable",
    "name": "handlebars",
    "memberof": "lib/libs/InputDataValidator.js",
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~handlebars",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 329,
    "kind": "variable",
    "name": "Sequelize",
    "memberof": "lib/libs/InputDataValidator.js",
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~Sequelize",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 330,
    "kind": "variable",
    "name": "bodyParser",
    "memberof": "lib/libs/InputDataValidator.js",
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~bodyParser",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 331,
    "kind": "variable",
    "name": "ValidationError",
    "memberof": "lib/libs/InputDataValidator.js",
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~ValidationError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 332,
    "kind": "class",
    "name": "InputDataValidator",
    "memberof": "lib/libs/InputDataValidator.js",
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~InputDataValidator",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 12,
    "ignore": true,
    "interface": false
  },
  {
    "__docId__": 333,
    "kind": "method",
    "name": "validate",
    "memberof": "lib/libs/InputDataValidator.js~InputDataValidator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~InputDataValidator.validate",
    "access": "public",
    "description": "Devuelve un middleware para Validar los datos de entrada.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": "Objeto input."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Opciones de configuración."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "options.remove",
        "description": "Contiene los campos que serán removidos si no han sdo especificados en el input."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 334,
    "kind": "method",
    "name": "isRequired",
    "memberof": "lib/libs/InputDataValidator.js~InputDataValidator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~InputDataValidator.isRequired",
    "access": "public",
    "description": "Indica si un objeto es requerido o no.\nSi alguno de sus campos contiene la propiedad allowNullObj igual a false, el objeto será requerido.",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Objeto de tipo FieldGroup."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 335,
    "kind": "function",
    "name": "_parseValue",
    "memberof": "lib/libs/InputDataValidator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~_parseValue",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 77,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "SequelizeField"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Campo de referencia."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Dato a parsear."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Dato parseado."
    }
  },
  {
    "__docId__": 336,
    "kind": "function",
    "name": "_validate",
    "memberof": "lib/libs/InputDataValidator.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~_validate",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 121,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Objeto de referencia (FieldGroup Array u Object)"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Boolean",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Dato a validar."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Ruta del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldName",
        "description": "Nombre del campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 337,
    "kind": "function",
    "name": "_validateField",
    "memberof": "lib/libs/InputDataValidator.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~_validateField",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 160,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Objeto de referencia (Field)"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Boolean",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Dato a validar."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Ruta del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldName",
        "description": "Nombre del campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 338,
    "kind": "function",
    "name": "_validateObject",
    "memberof": "lib/libs/InputDataValidator.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~_validateObject",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 197,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Objeto de referencia (FieldGroup Object)."
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Boolean",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Dato a validar."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Ruta del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldName",
        "description": "Nombre del campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 339,
    "kind": "function",
    "name": "_isField",
    "memberof": "lib/libs/InputDataValidator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~_isField",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 225,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Objeto."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 340,
    "kind": "function",
    "name": "_addValidator",
    "memberof": "lib/libs/InputDataValidator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~_addValidator",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 239,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Atributo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Ruta del nombre del campo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldName",
        "description": "Nombre del campo."
      }
    ],
    "return": null
  },
  {
    "__docId__": 341,
    "kind": "function",
    "name": "_updateErrorMsg",
    "memberof": "lib/libs/InputDataValidator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~_updateErrorMsg",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 272,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Atributo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldName",
        "description": "Nombre del campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 342,
    "kind": "function",
    "name": "_normalizeValidate",
    "memberof": "lib/libs/InputDataValidator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~_normalizeValidate",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 296,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "Atributo de un modelo sequelize."
      }
    ],
    "return": null
  },
  {
    "__docId__": 343,
    "kind": "function",
    "name": "_toWords",
    "memberof": "lib/libs/InputDataValidator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/InputDataValidator.js~_toWords",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/InputDataValidator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 330,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "Palabra compuesta."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 344,
    "kind": "file",
    "name": "lib/libs/ResponseError.js",
    "content": "/**\n* Clase ResponseError\n*/\nclass ResponseError extends Error {\n  /**\n  * Crea una instancia.\n  * @param {String}   type     - Tipo de respuesta.\n  * @param {Number}   code     - Número asociado al tipo de respuesta.\n  * @param {String}   message  - Descripción general de la respuesta.\n  * @param {Object[]} errors   - Lista de errores.\n  * @param {Error}    [parent] - Error padre.\n  */\n  constructor (type, code, message, errors, parent) {\n    super(message)\n    /**\n    * Nombre del objeto\n    * @type {String}\n    */\n    this.name = ResponseError.NAME\n\n    /**\n    * Estado de la respuesta.\n    * @type {String}\n    */\n    this.status = ResponseError.STATUS\n\n    /**\n    * Tipo de error\n    * @type {String}\n    */\n    this.type = type\n\n    /**\n    * Código asociado al tipo de error.\n    * @type {Number}\n    */\n    this.code = code\n\n    /**\n    * Mensaje general del error.\n    * @type {String}\n    */\n    this.message = message\n\n    /**\n    * Lista de errores.\n    * @type {Object[]}\n    */\n    this.errors = errors\n\n    /**\n    * Error padre.\n    * @type {Error}\n    */\n    this.parent = parent\n  }\n}\n\nResponseError.NAME   = 'ResponseHandlerError'\nResponseError.STATUS = 'error'\n\n/**\n* @ignore\n* Crea un objeto ResponseError sin invocar un constructor.\n* Esto es para mantener en la cima del stack el punto exacto donde ocurrio el error.\n* @param {String}   type     - Tipo de respuesta.\n* @param {Number}   code     - Número asociado al tipo de respuesta.\n* @param {String}   message  - Descripción general de la respuesta.\n* @param {Object[]} errors   - Lista de errores.\n* @param {Error}    [parent] - Error padre.\n* @return {ResponseError}\n*/\nResponseError.create = (type, code, message, errors, parent) => {\n  return {\n    name    : ResponseError.NAME,\n    status  : ResponseError.STATUS,\n    type    : type,\n    code    : code,\n    message : message,\n    errors  : errors,\n    parent  : parent\n  }\n}\n\nmodule.exports = ResponseError\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/ResponseError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 345,
    "kind": "class",
    "name": "ResponseError",
    "memberof": "lib/libs/ResponseError.js",
    "static": true,
    "longname": "lib/libs/ResponseError.js~ResponseError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseError.js",
    "importStyle": null,
    "description": "Clase ResponseError",
    "lineNumber": 4,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 346,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/libs/ResponseError.js~ResponseError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/libs/ResponseError.js~ResponseError#constructor",
    "access": "public",
    "description": "Crea una instancia.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Tipo de respuesta."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": "Número asociado al tipo de respuesta."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "Descripción general de la respuesta."
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "errors",
        "description": "Lista de errores."
      },
      {
        "nullable": null,
        "types": [
          "Error"
        ],
        "spread": false,
        "optional": true,
        "name": "parent",
        "description": "Error padre."
      }
    ]
  },
  {
    "__docId__": 347,
    "kind": "member",
    "name": "name",
    "memberof": "lib/libs/ResponseError.js~ResponseError",
    "static": false,
    "longname": "lib/libs/ResponseError.js~ResponseError#name",
    "access": "public",
    "description": "Nombre del objeto",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 348,
    "kind": "member",
    "name": "status",
    "memberof": "lib/libs/ResponseError.js~ResponseError",
    "static": false,
    "longname": "lib/libs/ResponseError.js~ResponseError#status",
    "access": "public",
    "description": "Estado de la respuesta.",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 349,
    "kind": "member",
    "name": "type",
    "memberof": "lib/libs/ResponseError.js~ResponseError",
    "static": false,
    "longname": "lib/libs/ResponseError.js~ResponseError#type",
    "access": "public",
    "description": "Tipo de error",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 350,
    "kind": "member",
    "name": "code",
    "memberof": "lib/libs/ResponseError.js~ResponseError",
    "static": false,
    "longname": "lib/libs/ResponseError.js~ResponseError#code",
    "access": "public",
    "description": "Código asociado al tipo de error.",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 351,
    "kind": "member",
    "name": "message",
    "memberof": "lib/libs/ResponseError.js~ResponseError",
    "static": false,
    "longname": "lib/libs/ResponseError.js~ResponseError#message",
    "access": "public",
    "description": "Mensaje general del error.",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 352,
    "kind": "member",
    "name": "errors",
    "memberof": "lib/libs/ResponseError.js~ResponseError",
    "static": false,
    "longname": "lib/libs/ResponseError.js~ResponseError#errors",
    "access": "public",
    "description": "Lista de errores.",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "Object[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 353,
    "kind": "member",
    "name": "parent",
    "memberof": "lib/libs/ResponseError.js~ResponseError",
    "static": false,
    "longname": "lib/libs/ResponseError.js~ResponseError#parent",
    "access": "public",
    "description": "Error padre.",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 354,
    "kind": "file",
    "name": "lib/libs/ResponseHandler.js",
    "content": "/** @ignore */ const OkSuccess               = require('./successes/OkSuccess')\n/** @ignore */ const CreatedSuccess          = require('./successes/CreatedSuccess')\n/** @ignore */ const NoContentSuccess        = require('./successes/NoContentSuccess')\n/** @ignore */ const BadRequestError         = require('./errors/BadRequestError')\n/** @ignore */ const UnauthorizedError       = require('./errors/UnauthorizedError')\n/** @ignore */ const ForbiddenError          = require('./errors/ForbiddenError')\n/** @ignore */ const NotFoundError           = require('./errors/NotFoundError')\n/** @ignore */ const ConflictError           = require('./errors/ConflictError')\n/** @ignore */ const PreconditionFailedError = require('./errors/PreconditionFailedError')\n/** @ignore */ const InvalidTokenError       = require('./errors/InvalidTokenError')\n/** @ignore */ const InternalServerError     = require('./errors/InternalServerError')\n\n/**\n* @ignore\n* Clase Response\n*/\nclass ResponseHandler {\n  /**\n  * Devuelve un middleware para enviar respuestas exitosas.\n  * @param {Object}   [options]                - Opciones para configurar el formato.\n  * @param {Function} [options.successHandler] - Función que se ejecuta cuando se activa el método success.\n  *                                              En este punto se puede manipular las respuestas.\n  * @param {Function} [options.onSuccess]      - Función que se ejecuta despues de normalizarla y\n  *                                              antes de aplicar el formato. En este punto podemos ver\n  *                                              el contenido original de la respuesta.\n  * @param {Function} [options.successFormat]  - Función que se ejecuta antes de enviar la respuesta.\n  *                                              Devuelve la respuesta final.\n  * @param {Boolean}  [options.all200=false]   - Indica si todas las peticiones tendrán como resultado `status: 200 Ok`\n  * @return {Function}\n  */\n  static success (options = {}) {\n    const successHandler = options.successHandler || ((data) => data)\n    const onSuccess      = options.onSuccess      || (() => {})\n    const successFormat  = options.successFormat  || (result => result)\n    const all200         = (typeof options.all200 !== 'undefined') ? options.all200 : false\n    return (req, res, next) => {\n      res.success = (data) => {\n        const result = normalizeSuccess(successHandler(data))\n        onSuccess(result, req)\n        res.status(all200 ? 200 : result.code).send(successFormat(result))\n      }\n      res.success200 = (...args) => { res.success(OkSuccess.create(...args)) }\n      res.success201 = (...args) => { res.success(CreatedSuccess.create(...args)) }\n      res.success204 = (...args) => { res.success(NoContentSuccess.create(...args)) }\n      next()\n    }\n  }\n\n  /**\n  * Devuelve un middleware para enviar respuestas con error.\n  * @param {Object}   [options]              - Opciones para configurar el formato.\n  * @param {Function} [options.errorHandler] - Función que se ejecuta cuando se activa el método error.\n  *                                            En este punto se puede manipular las respuestas.\n  * @param {Function} [options.onSuccess]    - Función que se ejecuta despues de normalizarla y\n  *                                            antes de aplicar el formato. En este punto podemos ver\n  *                                            el contenido original de la respuesta.\n  * @param {Function} [options.errorFormat]  - Función que se ejecuta antes de enviar la respuesta.\n  *                                            Devuelve la respuesta final.\n  * @param {Boolean} [options.all200=false]  - Indica si todas las peticiones tendrán como resultado `status: 200 Ok`\n  * @return {Function}\n  */\n  static error (options = {}) {\n    const errorHandler = options.errorHandler || ((data) => data)\n    const onError      = options.onError      || ((result) => result)\n    const errorFormat  = options.errorFormat  || (result => {\n      return {\n        name    : result.name,\n        status  : result.status,\n        type    : result.type,\n        code    : result.code,\n        message : result.message,\n        errors  : result.errors,\n        parent  : result.parent\n      }\n    })\n    const all200 = (typeof options.all200 !== 'undefined') ? options.all200 : false\n    return (req, res, next) => {\n      res.error = (data) => {\n        const result = normalizeError(errorHandler(data))\n        onError(result, req)\n        res.status(all200 ? 200 : result.code).send(errorFormat(result))\n      }\n      res.error400 = (...args) => { res.error(BadRequestError.create(...args)) }\n      res.error401 = (...args) => { res.error(UnauthorizedError.create(...args)) }\n      res.error403 = (...args) => { res.error(ForbiddenError.create(...args)) }\n      res.error404 = (...args) => { res.error(NotFoundError.create(...args)) }\n      res.error409 = (...args) => { res.error(ConflictError.create(...args)) }\n      res.error412 = (...args) => { res.error(PreconditionFailedError.create(...args)) }\n      res.error498 = (...args) => { res.error(InvalidTokenError.create(...args)) }\n      res.error500 = (...args) => { res.error(InternalServerError.create(...args)) }\n      next()\n    }\n  }\n}\n\n/**\n* @ignore\n* Normaliza el resultado. Si no es instancia de la clase ResponseSuccess,\n* por defecto se crea un resultado de tipo OkSuccess.\n* @param {Object} data - Resultado.\n* @return {ResponseSuccess}\n*/\nfunction normalizeSuccess (data) {\n  if (data && data.name && data.name === 'ResponseHandlerSuccess') { return data }\n  return OkSuccess.create(data)\n}\n\n/**\n* @ignore\n* Normaliza el resultado. Si no es instancia de la clase ResponseError,\n* por defecto se crea un resultado de tipo InternalServerError.\n* @param {Object} err - Error.\n* @return {ResponseError}\n*/\nfunction normalizeError (err) {\n  if (err && err.name && err.name === 'ResponseHandlerError') { return err }\n  return InternalServerError.create(err)\n}\n\nmodule.exports = ResponseHandler\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/ResponseHandler.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 355,
    "kind": "variable",
    "name": "OkSuccess",
    "memberof": "lib/libs/ResponseHandler.js",
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~OkSuccess",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseHandler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 356,
    "kind": "variable",
    "name": "CreatedSuccess",
    "memberof": "lib/libs/ResponseHandler.js",
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~CreatedSuccess",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseHandler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 357,
    "kind": "variable",
    "name": "NoContentSuccess",
    "memberof": "lib/libs/ResponseHandler.js",
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~NoContentSuccess",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseHandler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 358,
    "kind": "variable",
    "name": "BadRequestError",
    "memberof": "lib/libs/ResponseHandler.js",
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~BadRequestError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseHandler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 359,
    "kind": "variable",
    "name": "UnauthorizedError",
    "memberof": "lib/libs/ResponseHandler.js",
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~UnauthorizedError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseHandler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 360,
    "kind": "variable",
    "name": "ForbiddenError",
    "memberof": "lib/libs/ResponseHandler.js",
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~ForbiddenError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseHandler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 361,
    "kind": "variable",
    "name": "NotFoundError",
    "memberof": "lib/libs/ResponseHandler.js",
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~NotFoundError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseHandler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 362,
    "kind": "variable",
    "name": "ConflictError",
    "memberof": "lib/libs/ResponseHandler.js",
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~ConflictError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseHandler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 363,
    "kind": "variable",
    "name": "PreconditionFailedError",
    "memberof": "lib/libs/ResponseHandler.js",
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~PreconditionFailedError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseHandler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 364,
    "kind": "variable",
    "name": "InvalidTokenError",
    "memberof": "lib/libs/ResponseHandler.js",
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~InvalidTokenError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseHandler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 365,
    "kind": "variable",
    "name": "InternalServerError",
    "memberof": "lib/libs/ResponseHandler.js",
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~InternalServerError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseHandler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 366,
    "kind": "class",
    "name": "ResponseHandler",
    "memberof": "lib/libs/ResponseHandler.js",
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~ResponseHandler",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseHandler.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 17,
    "ignore": true,
    "interface": false
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "success",
    "memberof": "lib/libs/ResponseHandler.js~ResponseHandler",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~ResponseHandler.success",
    "access": "public",
    "description": "Devuelve un middleware para enviar respuestas exitosas.",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Opciones para configurar el formato."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.successHandler",
        "description": "Función que se ejecuta cuando se activa el método success.\n                                             En este punto se puede manipular las respuestas."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.onSuccess",
        "description": "Función que se ejecuta despues de normalizarla y\n                                             antes de aplicar el formato. En este punto podemos ver\n                                             el contenido original de la respuesta."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.successFormat",
        "description": "Función que se ejecuta antes de enviar la respuesta.\n                                             Devuelve la respuesta final."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.all200",
        "description": "Indica si todas las peticiones tendrán como resultado `status: 200 Ok`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 368,
    "kind": "method",
    "name": "error",
    "memberof": "lib/libs/ResponseHandler.js~ResponseHandler",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~ResponseHandler.error",
    "access": "public",
    "description": "Devuelve un middleware para enviar respuestas con error.",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Opciones para configurar el formato."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.errorHandler",
        "description": "Función que se ejecuta cuando se activa el método error.\n                                           En este punto se puede manipular las respuestas."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.onSuccess",
        "description": "Función que se ejecuta despues de normalizarla y\n                                           antes de aplicar el formato. En este punto podemos ver\n                                           el contenido original de la respuesta."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.errorFormat",
        "description": "Función que se ejecuta antes de enviar la respuesta.\n                                           Devuelve la respuesta final."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.all200",
        "description": "Indica si todas las peticiones tendrán como resultado `status: 200 Ok`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 369,
    "kind": "function",
    "name": "normalizeSuccess",
    "memberof": "lib/libs/ResponseHandler.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~normalizeSuccess",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseHandler.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 103,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Resultado."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ResponseSuccess"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 370,
    "kind": "function",
    "name": "normalizeError",
    "memberof": "lib/libs/ResponseHandler.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/ResponseHandler.js~normalizeError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseHandler.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 115,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "err",
        "description": "Error."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ResponseError"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 371,
    "kind": "file",
    "name": "lib/libs/ResponseSuccess.js",
    "content": "/**\n* Clase ResponseSuccess\n*/\nclass ResponseSuccess {\n  /**\n  * Crea una instancia.\n  * @param {String} type       - Tipo de respuesta.\n  * @param {Number} code       - Número asociado al tipo de respuesta.\n  * @param {String} message    - Descripción general de la respuesta.\n  * @param {Object} data       - Datos.\n  * @param {Object} [metadata] - Metadatos.\n  */\n  constructor (type, code, message, data, metadata) {\n    /**\n    * Nombre del objeto\n    * @type {String}\n    */\n    this.name = ResponseSuccess.NAME\n\n    /**\n    * Estado de la respuesta.\n    * @type {String}\n    */\n    this.status = ResponseSuccess.STATUS\n\n    /**\n    * Tipo de respuesta\n    * @type {String}\n    */\n    this.type = type\n\n    /**\n    * Código asociado al tipo de respuesta.\n    * @type {Number}\n    */\n    this.code = code\n\n    /**\n    * Mensaje espećifico de la respuesta.\n    * @type {String}\n    */\n    this.message = message\n\n    /**\n    * Objeto con datos.\n    * @type {Object}\n    */\n    this.data = data\n\n    /**\n    * Objeto con metadatos.\n    * @type {Object}\n    */\n    this.metadata = metadata\n  }\n}\n\nResponseSuccess.NAME   = 'ResponseHandlerSuccess'\nResponseSuccess.STATUS = 'success'\n\n/**\n* @ignore\n* Crea un objeto ResponseError sin invocar un constructor.\n* @param {String} type       - Tipo de respuesta.\n* @param {Number} code       - Número asociado al tipo de respuesta.\n* @param {String} message    - Descripción general de la respuesta.\n* @param {Object} data       - Datos.\n* @param {Object} [metadata] - Metadatos.\n* @return {ResponseSuccess}\n*/\nResponseSuccess.create = (type, code, message, data, metadata) => {\n  return {\n    name     : ResponseSuccess.NAME,\n    status   : ResponseSuccess.STATUS,\n    type     : type,\n    code     : code,\n    message  : message,\n    data     : data,\n    metadata : metadata\n  }\n}\n\nmodule.exports = ResponseSuccess\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/ResponseSuccess.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 372,
    "kind": "class",
    "name": "ResponseSuccess",
    "memberof": "lib/libs/ResponseSuccess.js",
    "static": true,
    "longname": "lib/libs/ResponseSuccess.js~ResponseSuccess",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ResponseSuccess.js",
    "importStyle": null,
    "description": "Clase ResponseSuccess",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 373,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/libs/ResponseSuccess.js~ResponseSuccess",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/libs/ResponseSuccess.js~ResponseSuccess#constructor",
    "access": "public",
    "description": "Crea una instancia.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Tipo de respuesta."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": "Número asociado al tipo de respuesta."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "Descripción general de la respuesta."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Datos."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "metadata",
        "description": "Metadatos."
      }
    ]
  },
  {
    "__docId__": 374,
    "kind": "member",
    "name": "name",
    "memberof": "lib/libs/ResponseSuccess.js~ResponseSuccess",
    "static": false,
    "longname": "lib/libs/ResponseSuccess.js~ResponseSuccess#name",
    "access": "public",
    "description": "Nombre del objeto",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 375,
    "kind": "member",
    "name": "status",
    "memberof": "lib/libs/ResponseSuccess.js~ResponseSuccess",
    "static": false,
    "longname": "lib/libs/ResponseSuccess.js~ResponseSuccess#status",
    "access": "public",
    "description": "Estado de la respuesta.",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 376,
    "kind": "member",
    "name": "type",
    "memberof": "lib/libs/ResponseSuccess.js~ResponseSuccess",
    "static": false,
    "longname": "lib/libs/ResponseSuccess.js~ResponseSuccess#type",
    "access": "public",
    "description": "Tipo de respuesta",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 377,
    "kind": "member",
    "name": "code",
    "memberof": "lib/libs/ResponseSuccess.js~ResponseSuccess",
    "static": false,
    "longname": "lib/libs/ResponseSuccess.js~ResponseSuccess#code",
    "access": "public",
    "description": "Código asociado al tipo de respuesta.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 378,
    "kind": "member",
    "name": "message",
    "memberof": "lib/libs/ResponseSuccess.js~ResponseSuccess",
    "static": false,
    "longname": "lib/libs/ResponseSuccess.js~ResponseSuccess#message",
    "access": "public",
    "description": "Mensaje espećifico de la respuesta.",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 379,
    "kind": "member",
    "name": "data",
    "memberof": "lib/libs/ResponseSuccess.js~ResponseSuccess",
    "static": false,
    "longname": "lib/libs/ResponseSuccess.js~ResponseSuccess#data",
    "access": "public",
    "description": "Objeto con datos.",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 380,
    "kind": "member",
    "name": "metadata",
    "memberof": "lib/libs/ResponseSuccess.js~ResponseSuccess",
    "static": false,
    "longname": "lib/libs/ResponseSuccess.js~ResponseSuccess#metadata",
    "access": "public",
    "description": "Objeto con metadatos.",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 381,
    "kind": "file",
    "name": "lib/libs/SeedCreator.js",
    "content": "/**\n* @ignore\n* Clase para crear seeders\n*/\nclass SeedCreator {\n  /**\n  * Inserta un conjunto de registros en la base de datos.\n  * @param {SequelizeModel} model                - Modelo Sequelize.\n  * @param {!Object[]}      data                 - Lista de registros.\n  * @param {Object}         [options]            - Opciones de configuración.\n  * @param {String[]}       [options.schemas=[]] - Esquemas permitidos para la\n  *                                                inserción de registros.\n  * @param {Logger}         [options.logger]     - Instancia de logger.\n  * @return {Promise}\n  */\n  static async create (model, data, options = {}) {\n    SeedCreator.total = data.length\n    SeedCreator.cnt   = 0\n    options.schemas   = options.schemas || []\n    options.logger    = options.logger  || { appPrimary: () => {}, OK: '', FAIL: 'x' }\n    SeedCreator.startAt = Date.now()\n    if (_verifyToBulkInsert(model, data)) {\n      await model.options.sequelize.transaction(async (t) => {\n        options.t = options.transaction || t\n        options.logger.appPrimary()\n        return _bulkInsert(model, data, options)\n      })\n    } else {\n      await model.options.sequelize.transaction(async (t) => {\n        options.t = options.transaction || t\n        options.logger.appPrimary()\n        for (let i in data) {\n          await _create(model, data[i], options)\n          options.logger.appPrimary()\n        }\n      })\n    }\n    SeedCreator.endAt = Date.now()\n    const elapsedTime = (SeedCreator.endAt - SeedCreator.startAt) / 1000\n    const result = {\n      entries     : SeedCreator.total,\n      elapsedTime : elapsedTime\n    }\n    delete SeedCreator.total\n    delete SeedCreator.cnt\n    return result\n  }\n}\n\n/**\n* @ignore\n* Indica si es posible insertar registros en masa.\n* Verifica que todos los registros tengan la clave primaria y no incluyan asociaciones.\n* @param {SequelizeModel} model - Modelo Sequelize.\n* @param {!Object[]}      data  - Lista de registros.\n* @return {Boolean}\n*/\nfunction _verifyToBulkInsert (model, data) {\n  const PK = Object.keys(model.primaryKeys)[0]\n  for (let i in data) {\n    let hasPK = false\n    for (let fieldName in data[i]) {\n      if (typeof data[i][fieldName] === 'object' && !Array.isArray(data[i][fieldName])) { return false }\n      if (!model.attributes[fieldName]) { return false }\n      if (fieldName === PK) { hasPK = true }\n    }\n    if (!hasPK) { return false }\n  }\n  return true\n}\n\n/**\n* @ignore\n* Inserta un conjunto de registros en la base de datos.\n* Si la clave primaria es autoincrementabe, también se actualiza la secuencia.\n* @param {SequelizeModel} model   - Modelo Sequelize.\n* @param {!Object[]}      data    - Datos del registro.\n* @param {!Object}        options - Opciones de configuración.\n*                                   para la inserción de registros.\n* @return {Promise<Number>} ID del registro insertado.\n*/\nasync function _bulkInsert (model, data, options) {\n  let schema = model.options.schema ? `${model.options.schema}.` : ''\n  const countMsg = data.length !== 1 ? `${data.length} registros` : `${data.length} registro`\n  options.logger.appPrimary('BULK INSERT', `${schema}${model.name} [${countMsg}] ...\\n`)\n  _verifyAccess(model, options)\n  const PK = Object.keys(model.primaryKeys)[0]\n  await model.bulkCreate(data, { returning: true, transaction: options.t })\n  if (model.attributes[PK].autoIncrement === true) {\n    await _updateAutoIncrement(model, PK, options)\n  }\n}\n\n/**\n* @ignore\n* Verifica si el modelo tiene un esquema que se encuentre entre la lista de esquemas permitidos.\n* @param {SequelizeModel} model   - modelo Sequelize.\n* @param {!Object}        options - Opciones de configuración.\n*                                   para la inserción de registros.\n*/\nfunction _verifyAccess (model, options) {\n  const SCHEMA = model.options.schema\n  if (options.schemas.length > 0) {\n    if (SCHEMA && !options.schemas.includes(SCHEMA)) {\n      let esquemasPermitidos = options.schemas.toString()\n      let errMsg = `Se necesitan permisos para modificar la tabla '${SCHEMA}.${model.name}'.\\n`\n      errMsg = `  El esquema '${SCHEMA}' no se encuentra en la lista de esquemas que pueden ser modificados\\n`\n      errMsg += `  Los esquemas permitidos son: ${esquemasPermitidos}\\n\\n`\n      errMsg += `  Verifique que el módulo al que pertenece la tabla tenga permisos de instalación (setup = true)`\n      throw new Error(errMsg)\n    }\n  }\n}\n\n/**\n* @ignore\n* Prepara los datos para insertarlos en la base de datos.\n* @param {SequelizeModel} model   - Modelo Sequelize.\n* @param {!Object[]}      data    - Lista de registros.\n* @param {!Object}        options - Opciones de configuración.\n* @return {Promise<Number>} ID del registro insertado.\n*/\nasync function _create (model, data, options) {\n  if (Array.isArray(data)) {\n    for (let i in data) { await _create(model, data[i], options) } return\n  }\n  const dataToInsert = {}\n  for (let prop in model.attributes) {\n    const field = model.attributes[prop]\n    if (_isForeignKey(field) && !data[prop]) {\n      const ASSOCIATION = _getAssociationModelFromFK(model, field.fieldName)\n      if (ASSOCIATION === null) {\n        throw new Error(`Se esperaba que el modelo ${model.name} esté asociado con otro modelo como ${prop}.`)\n      }\n      if (!data[ASSOCIATION.as]) {\n        let schema = model.options.schema ? `${model.options.schema}.` : ''\n        throw new Error(`Se requiere el campo ${prop} o el objeto ${ASSOCIATION.as} para crear el registro '${schema}${model.name}'.`)\n      }\n      SeedCreator.total += Array.isArray(data[ASSOCIATION.as]) ? data[ASSOCIATION.as].length : 1\n      data[prop] = await _create(ASSOCIATION.target, data[ASSOCIATION.as], options)\n    }\n    if (typeof data[prop] !== 'undefined') {\n      dataToInsert[prop] = data[prop]\n    }\n  }\n  const ID = await _insert(model, dataToInsert, options)\n  for (let prop in data) {\n    if (!model.attributes[prop]) {\n      const ASSOC = _getAssociationModelFromAs(model, prop)\n      if (ASSOC && (ASSOC.associationType === 'HasOne' || ASSOC.associationType === 'HasMany')) {\n        if (Array.isArray(data[prop])) {\n          for (let i in data[prop]) {\n            data[prop][i][ASSOC.foreignKey] = ID\n          }\n        } else {\n          data[prop][ASSOC.foreignKey] = ID\n        }\n        SeedCreator.total += Array.isArray(data[prop]) ? data[prop].length : 1\n        await _create(ASSOC.target, data[prop], options)\n      }\n    }\n  }\n  return ID\n}\n\n/**\n* @ignore\n* Inserta un registro en la base de datos y devuelve su ID.\n* Si la clave primaria es autoincrementabe, también se actualiza la secuencia.\n* @param {SequelizeModel} model   - Modelo Sequelize.\n* @param {!Object[]}      data    - Datos del registro.\n* @param {!Object}        options - Opciones de configuración.\n* @return {Promise<Number>} ID del registro insertado.\n*/\nasync function _insert (model, data, options) {\n  let schema = model.options.schema ? `${model.options.schema}.` : ''\n  try {\n    _verifyAccess(model, options)\n    const PK     = Object.keys(model.primaryKeys)[0]\n    const RESULT = await model.create(data, { transaction: options.t })\n    const ID     = RESULT[PK]\n    await _updateAutoIncrement(model, PK, options)\n    options.logger.appPrimary('INSERT', `[${++SeedCreator.cnt}/${SeedCreator.total}] ${schema}${model.name} .... [${PK}: ${ID}] ${options.logger.OK}`)\n    return ID\n  } catch (e) {\n    options.logger.appError(`INSERT`, `[${++SeedCreator.cnt}/${SeedCreator.total}] ${schema}${model.name} ${options.logger.FAIL}\\n`)\n    throw e\n  }\n}\n\n/**\n* @ignore\n* Actualiza el valor del contador de una clave primaria, solamente si éste fuera de tipo entero y autoincrementable.\n* @param {SequelizeModel} model   - Modelo Sequelize.\n* @param {String}         PK      - Nombre del campo de la clave primaria.\n* @param {!Object}        options - Opciones de configuración.\n*/\nasync function _updateAutoIncrement (model, PK, options) {\n  const SCHEMA        = model.options.schema\n  const DIALECT       = model.options.sequelize.options.dialect\n  const MODEL_NAME    = model.name\n  const TABLE_NAME    = `${(!SCHEMA) ? '' : `${SCHEMA}.`}${MODEL_NAME}`\n  const SEQUENCE_NAME = `${(!SCHEMA) ? '' : `${SCHEMA}.`}${MODEL_NAME}_${PK}_seq`\n  const seq           = model.options.sequelize\n  const OPT           = { transaction: options.t, paranoid: false }\n  if (model.attributes[PK].type.key === 'INTEGER' && model.attributes[PK].autoIncrement === true) {\n    const ID = (await model.max(PK, OPT)) || 1\n    switch (DIALECT) {\n      case 'postgres' : await seq.query(`ALTER SEQUENCE ${SEQUENCE_NAME} RESTART WITH ${ID + 1}`,          OPT); break\n      case 'mysql'    : await seq.query(`ALTER TABLE \\`${TABLE_NAME}\\` AUTO_INCREMENT = ${ID + 1}`,        OPT); break\n      case 'mssql'    : await seq.query(`DBCC CHECKIDENT ('${TABLE_NAME}', RESEED, ${ID})`,                OPT); break\n      case 'sqlite'   : await seq.query(`UPDATE SQLITE_SEQUENCE SET SEQ=${ID} WHERE NAME='${TABLE_NAME}'`, OPT); break\n      default:\n        let errMsg = `No existe el dialecto '${DIALECT}'.\\n`\n        errMsg += `  Dialectos soportados: postgres, mysql, mssql y sqlite.\\n`\n        throw new Error(errMsg)\n    }\n  }\n}\n\n/**\n* @ignore\n* Devuelve la asociación correspondiente a una clave foránea.\n* @param {SequelizeModel} model      - Modelo sequelize.\n* @param {String}         foreignKey - Clave foranea\n* @return {Object}\n*/\nfunction _getAssociationModelFromFK (model, foreignKey) {\n  for (let key in model.associations) {\n    const ASSOCIATION = model.associations[key]\n    if (ASSOCIATION.foreignKey === foreignKey) { return ASSOCIATION }\n  }\n  return null\n}\n\n/**\n* @ignore\n* Devuelve la asociación correspondiente a partir del nombre asociado.\n* @param {SequelizeModel} model - Modelo sequelize.\n* @param {String}         as    - Nombre de la asociacion.\n* @return {Object}\n*/\nfunction _getAssociationModelFromAs (model, as) {\n  for (let key in model.associations) {\n    const ASSOCIATION = model.associations[key]\n    if (ASSOCIATION.as === as) { return ASSOCIATION }\n  }\n  return null\n}\n\n/**\n* @ignore\n* Indica si un objeto es atributo con clave foránea.\n* @param {Object} obj Objeto.\n* @return {Boolean}\n*/\nfunction _isForeignKey (obj) {\n  if (obj && obj._modelAttribute && (obj._modelAttribute === true) && obj.references) {\n    return true\n  }\n  return false\n}\n\nmodule.exports = SeedCreator\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/SeedCreator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 382,
    "kind": "class",
    "name": "SeedCreator",
    "memberof": "lib/libs/SeedCreator.js",
    "static": true,
    "longname": "lib/libs/SeedCreator.js~SeedCreator",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/SeedCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 5,
    "ignore": true,
    "interface": false
  },
  {
    "__docId__": 383,
    "kind": "method",
    "name": "create",
    "memberof": "lib/libs/SeedCreator.js~SeedCreator",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/libs/SeedCreator.js~SeedCreator.create",
    "access": "public",
    "description": "Inserta un conjunto de registros en la base de datos.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "Modelo Sequelize."
      },
      {
        "nullable": false,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Lista de registros."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Opciones de configuración."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.schemas",
        "description": "Esquemas permitidos para la\n                                               inserción de registros."
      },
      {
        "nullable": null,
        "types": [
          "Logger"
        ],
        "spread": false,
        "optional": true,
        "name": "options.logger",
        "description": "Instancia de logger."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 384,
    "kind": "function",
    "name": "_verifyToBulkInsert",
    "memberof": "lib/libs/SeedCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SeedCreator.js~_verifyToBulkInsert",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/SeedCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 58,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "Modelo Sequelize."
      },
      {
        "nullable": false,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Lista de registros."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 385,
    "kind": "function",
    "name": "_bulkInsert",
    "memberof": "lib/libs/SeedCreator.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/libs/SeedCreator.js~_bulkInsert",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/SeedCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 82,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "Modelo Sequelize."
      },
      {
        "nullable": false,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Datos del registro."
      },
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Opciones de configuración.\n                                  para la inserción de registros."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Number>"
      ],
      "spread": false,
      "description": "ID del registro insertado."
    }
  },
  {
    "__docId__": 386,
    "kind": "function",
    "name": "_verifyAccess",
    "memberof": "lib/libs/SeedCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SeedCreator.js~_verifyAccess",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/SeedCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 101,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "modelo Sequelize."
      },
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Opciones de configuración.\n                                  para la inserción de registros."
      }
    ],
    "return": null
  },
  {
    "__docId__": 387,
    "kind": "function",
    "name": "_create",
    "memberof": "lib/libs/SeedCreator.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/libs/SeedCreator.js~_create",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/SeedCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 123,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "Modelo Sequelize."
      },
      {
        "nullable": false,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Lista de registros."
      },
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Opciones de configuración."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Number>"
      ],
      "spread": false,
      "description": "ID del registro insertado."
    }
  },
  {
    "__docId__": 388,
    "kind": "function",
    "name": "_insert",
    "memberof": "lib/libs/SeedCreator.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/libs/SeedCreator.js~_insert",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/SeedCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 175,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "Modelo Sequelize."
      },
      {
        "nullable": false,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Datos del registro."
      },
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Opciones de configuración."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Number>"
      ],
      "spread": false,
      "description": "ID del registro insertado."
    }
  },
  {
    "__docId__": 389,
    "kind": "function",
    "name": "_updateAutoIncrement",
    "memberof": "lib/libs/SeedCreator.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/libs/SeedCreator.js~_updateAutoIncrement",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/SeedCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 198,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "Modelo Sequelize."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "PK",
        "description": "Nombre del campo de la clave primaria."
      },
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Opciones de configuración."
      }
    ],
    "return": null
  },
  {
    "__docId__": 390,
    "kind": "function",
    "name": "_getAssociationModelFromFK",
    "memberof": "lib/libs/SeedCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SeedCreator.js~_getAssociationModelFromFK",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/SeedCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 228,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "Modelo sequelize."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "foreignKey",
        "description": "Clave foranea"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 391,
    "kind": "function",
    "name": "_getAssociationModelFromAs",
    "memberof": "lib/libs/SeedCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SeedCreator.js~_getAssociationModelFromAs",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/SeedCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 243,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "Modelo sequelize."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "as",
        "description": "Nombre de la asociacion."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 392,
    "kind": "function",
    "name": "_isForeignKey",
    "memberof": "lib/libs/SeedCreator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SeedCreator.js~_isForeignKey",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/SeedCreator.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 257,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Objeto."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 393,
    "kind": "file",
    "name": "lib/libs/SequelizeOptions.js",
    "content": "/**\n* @ignore\n* Clase para crear el objeto options que utiliza Sequelize para realizar consultas.\n*/\nclass SequelizeOptions {\n  /**\n  * Crea el objeto options.\n  * @param {Object}         options              - Opciones de configuración.\n  * @param {Object}         [options.query]      - Filtros de una consulta.\n  * @param {Object}         [options.output]     - Formato de salida.\n  * @param {SequelizeModel} [options.model]      - Modelo que se usará para filtrar campos.\n  * @param {Boolean}        [options.keys=false] - Indica si se incluirán de forma obligatoria\n  *                                                los campos que sean claves primarias y foráneas.\n  * @return {Object}\n  */\n  static create (options = {}) {\n    const QUERY  = options.query || {}\n    const OUTPUT = options.output\n    const MODEL  = options.model\n    const KEYS   = (typeof options.keys !== 'undefined') ? options.keys : false\n    let fieldsSTR = QUERY.fields || 'ALL'\n    if (fieldsSTR.indexOf('ALL') !== -1) fieldsSTR = _fieldsALL(OUTPUT)\n    let OPT = {}\n    while (fieldsSTR.indexOf('()') !== -1) { fieldsSTR = fieldsSTR.replace('()', '(all)') }\n    const OUTPUT2 = (OUTPUT && Array.isArray(OUTPUT)) ? OUTPUT[0] : OUTPUT\n    OPT = parseFieldsSTR(fieldsSTR, OUTPUT2, MODEL, KEYS, undefined, '', QUERY)\n    if (typeof QUERY.col      !== 'undefined') { OPT.col      = QUERY.col      }\n    if (typeof QUERY.distinct !== 'undefined') { OPT.distinct = QUERY.distinct }\n    if (typeof QUERY.offset   !== 'undefined') { OPT.offset   = QUERY.offset   }\n    if (typeof QUERY.limit    !== 'undefined') { OPT.limit    = QUERY.limit    }\n    if (typeof QUERY.page     !== 'undefined') {\n      OPT.limit  = OPT.limit || 50\n      OPT.offset = (QUERY.page >= 1) ? ((QUERY.page - 1) * QUERY.limit) : 0\n    }\n    if (typeof QUERY.order    !== 'undefined') {\n      OPT.order = []\n      QUERY.order.split(',').forEach(fieldName => {\n        OPT.order.push(parseOrder(fieldName))\n      })\n    }\n    return OPT\n  }\n\n  /**\n  * Filtra los campos de un objeto (Elimina aquellos campos no requeridos).\n  * @param {Object}   data                  - Datos a filtrar.\n  * @param {Object[]} options               - Opciones de configuración.\n  * @param {Object}   [options.query]       - Filtros de una consulta.\n  * @param {Object}   [options.output]      - Formato de salida.\n  * @param {Boolean}  [options.plain=false] - Indica si los campos de los submodelos se\n  *                                           moverán al objeto raiz.\n  *                                           los campos que sean claves primarias y foráneas.\n  * @return {Object}\n  */\n  static filter (data, options = {}) {\n    if (!options.output) { return data }\n    const OUTPUT  = options.output\n    const QUERY   = options.query || {}\n    const OPTIONS = SequelizeOptions.create({ query: QUERY, output: OUTPUT })\n    if (options.plain === true) {\n      if (Array.isArray(OUTPUT)) {\n        const RESULT = []\n        for (let i in data) {\n          const OBJ = {}\n          copyPlain(data[i], OUTPUT[0], OPTIONS, '', OBJ)\n          RESULT.push(OBJ)\n        }\n        return RESULT\n      } else {\n        const OBJ = {}\n        copyPlain(data, OUTPUT, OPTIONS, '', OBJ)\n        return OBJ\n      }\n    }\n    return copy(data, OUTPUT, OPTIONS)\n  }\n}\n\n/**\n* @ignore\n* Devuelve un string que contiene todos los campos posibles.\n* @param {Object} [output] - Objeto output.\n* @return {String}\n*/\nfunction _fieldsALL (output = {}) {\n  let result = ',all'\n  if (Array.isArray(output)) {\n    output = output[0]\n  }\n  Object.keys(output).forEach(prop => {\n    if (!_isField(output[prop])) {\n      const SUB = _fieldsALL(output[prop])\n      result += `,${prop}(${SUB})`\n    }\n  })\n  return result.substr(1)\n}\n\n/**\n* @ignore\n* Copia los valores de los campos de un objeto en base a un modelo base.\n* @param {Object} DATA    - Objeto que contiene los datos.\n* @param {Object} OUTPUT  - Objeto que tiene el formato de los campos.\n* @param {Object} OPTIONS - Objeto que contiene los campos permitidos.\n* @return {Object}\n*/\nfunction copy (DATA, OUTPUT, OPTIONS) {\n  if ((typeof DATA === 'undefined') || (DATA === null)) { return undefined }\n  if (Array.isArray(OUTPUT)) {\n    if (!Array.isArray(DATA)) {\n      return undefined\n    }\n    const result = []\n    for (let i in DATA) {\n      const resultTemp = copy(DATA[i], OUTPUT[0], OPTIONS)\n      if (typeof resultTemp !== 'undefined') { result.push(resultTemp) }\n    }\n    return result\n  }\n  const result = {}\n  for (let prop in OUTPUT) {\n    if (_isField(OUTPUT[prop])) {\n      if (OPTIONS.attributes.includes(prop)) {\n        result[prop] = DATA[prop]\n      }\n    } else {\n      let assoc\n      if (OPTIONS && OPTIONS.include) {\n        OPTIONS.include.forEach(as => {\n          if (as.association === prop) {\n            assoc = as\n          }\n        })\n      }\n      if (assoc) {\n        result[prop] = copy(DATA[prop], OUTPUT[prop], assoc)\n      }\n    }\n  }\n  return Object.keys(result).length > 0 ? result : undefined\n}\n\n/**\n* @ignore\n* Copia los valores de los campos de un objeto en base a un modelo base.\n* Para el formato de salida, se copian todos los campos de los objetos anidados, en el objeto raiz.\n* @param {Object} DATA    - Objeto que contiene los datos.\n* @param {Object} OUTPUT  - Objeto que tiene el formato de los campos.\n* @param {Object} OPTIONS - Objeto que contiene los campos permitidos.\n* @param {String} PATH    - Nombre completo del campo.\n* @param {Object} OBJ     - Objeto raiz.\n* @return {Object}\n*/\nfunction copyPlain (DATA, OUTPUT, OPTIONS, PATH, OBJ) {\n  if ((typeof DATA === 'undefined') || (DATA === null)) { return undefined }\n  if (Array.isArray(OUTPUT)) {\n    if (!Array.isArray(DATA)) {\n      return undefined\n    }\n    for (let i in DATA) {\n      const fullPath = (PATH === '') ? i : `${PATH}.${i}`\n      copyPlain(DATA[i], OUTPUT[0], OPTIONS, fullPath, OBJ)\n    }\n  }\n  for (let prop in OUTPUT) {\n    if (_isField(OUTPUT[prop])) {\n      if (OPTIONS.attributes.includes(prop)) {\n        const fullPath = (PATH === '') ? prop : `${PATH}.${prop}`\n        OBJ[fullPath] = DATA[prop]\n      }\n    } else {\n      let assoc\n      if (OPTIONS && OPTIONS.include) {\n        OPTIONS.include.forEach(as => {\n          if (as.association === prop) {\n            assoc = as\n          }\n        })\n      }\n      if (assoc) {\n        const fullPath = (PATH === '') ? prop : `${PATH}.${prop}`\n        copyPlain(DATA[prop], OUTPUT[prop], assoc, fullPath, OBJ)\n      }\n    }\n  }\n  return OBJ\n}\n\n/**\n* @ignore\n* Devuelve el formato del filtro order,\n* @param {String} fieldName - Nombre del campo.\n* @return {String[]}\n*/\nfunction parseOrder (fieldName) {\n  const split = fieldName.split('.')\n  if (fieldName.charAt(0) === '-') {\n    split[0] = split[0].substr(1)\n    split.push('DESC')\n  } else {\n    split.push('ASC')\n  }\n  return split\n}\n\n/**\n* @ignore\n* Adiciona un atributo si corresponde.\n* @param {String}         word       - Palabra obtenida desde la query.\n* @param {Object}         [OUTPUT]   - Objeto que contiene el formato.\n* @param {SequelizeModel} [MODEL]    - Modelo Sequelize de referencia.\n* @param {Boolean}        KEYS       - Indica si se incluiran por defecto las claves primarias y foraneas.\n* @param {Object}         where      - Objeto que almacena la propiedad where del options.\n* @param {String[]}       attributes - Objeto que almacena la propiedad attributes del options.\n* @param {String[]}       exclude    - Objeto que almacena la propiedad exclude del options.\n* @param {Boolean}        allFields  - Bandera que indica si se adicionarón todos los fields.\n*/\nfunction addAttribute (word, OUTPUT, MODEL, KEYS, where, attributes, exclude, allFields) {\n  const split = word.split('=')\n  if (split.length === 2) {\n    word = split[0]\n    if (!OUTPUT || OUTPUT[word]) {\n      if (!MODEL || MODEL.attributes[word]) {\n        if (KEYS) {\n          // TODO validar el campo\n          where[word] = split[1]\n        }\n      }\n    }\n  }\n  if (!allFields) {\n    if (word.startsWith('-')) {\n      word = word.substr(1)\n      if (!OUTPUT || OUTPUT[word]) {\n        if (!MODEL || MODEL.attributes[word]) {\n          exclude.push(word)\n        }\n      }\n    } else {\n      if (!OUTPUT || OUTPUT[word]) {\n        if (!MODEL || MODEL.attributes[word]) {\n          attributes.push(word)\n        }\n      }\n    }\n  }\n}\n\n/**\n* @ignore\n* Parsea el valor del campo query.fields, devolviendo un include.\n* @param {String}         fieldsSTR - Valor del campo query.fields.\n* @param {Object}         [OUTPUT]  - Objeto que contiene el formato.\n* @param {SequelizeModel} [MODEL]   - Modelo Sequelize de referencia.\n* @param {Boolean}        KEYS      - Indica si se incluiran por defecto las claves primarias y foraneas.\n* @param {String}         as        - Nombre de la asociación.\n* @param {String}         trace     - Ruta del campo.\n* @param {Object}         QUERY     - Objeto query.\n* @return {Object}\n*/\nfunction parseFieldsSTR (fieldsSTR, OUTPUT, MODEL, KEYS, as, trace, QUERY) {\n  let attributes = []\n  const include = []\n  const exclude = []\n  const where   = {}\n  let allFields = false\n  let word = ''\n  for (let i = 0; i < fieldsSTR.length; i++) {\n    const ch = fieldsSTR[i]\n    if (ch === ',') {\n      if (word !== '') {\n        if (word === 'all' && !allFields) {\n          attributes = getAllAttributes(OUTPUT, MODEL)\n          allFields = true\n        } else {\n          addAttribute(word, OUTPUT, MODEL, KEYS, where, attributes, exclude, allFields)\n        }\n      }\n      word = ''\n      continue\n    }\n    if (ch === '(') {\n      const a = i + 1\n      const b = findIndex(fieldsSTR, a)\n      const c = b - a\n      const subFieldSTR = fieldsSTR.substr(a, c)\n      if (OUTPUT[word]) {\n        const SUB_OUTPUT = Array.isArray(OUTPUT[word]) ? OUTPUT[word][0] : OUTPUT[word]\n        const SUB_MODEL  = MODEL && MODEL.associations[word] ? MODEL.associations[word].target : undefined\n        const trace2     = (trace === '') ? word : `${trace}.${word}`\n        include.push(parseFieldsSTR(subFieldSTR, SUB_OUTPUT, SUB_MODEL, KEYS, word, trace2, QUERY))\n      }\n      word = ''\n      i = b\n      continue\n    }\n    word += ch\n  }\n  if (word !== '') {\n    if (word === 'all' && !allFields) {\n      attributes = getAllAttributes(OUTPUT, MODEL)\n      allFields  = true\n    } else {\n      addAttribute(word, OUTPUT, MODEL, KEYS, where, attributes, exclude, allFields)\n    }\n  }\n  const OPT = { attributes }\n  if (as) { OPT.association = as }\n  if (exclude.length > 0) { OPT.attributes = { exclude } }\n  if (include.length > 0) { OPT.include = include }\n  OPT.attributes = normalizeAttributes(OPT.attributes, OUTPUT, MODEL, KEYS)\n  // WHERE required = false. Son opcionales los filtros efectuados desde la propiedad fields.\n  if (Object.keys(where).length > 0) { OPT.where = where; OPT.required = false }\n  // WHERE required = true. Son requeridos los filtros efectuados desde el objeto QUERY\n  if (Array.isArray(OPT.attributes)) {\n    OPT.attributes.forEach(attrib => {\n      const path = (trace === '') ? attrib : `${trace}.${attrib}`\n      if (QUERY[path]) {\n        if (!OPT.where) { OPT.where = {} }\n        const value = ((typeof QUERY[path] === 'string') && (QUERY[path].indexOf(',') !== -1)) ? QUERY[path].split(',') : QUERY[path]\n        OPT.where[attrib] = value\n        OPT.required = true\n      }\n    })\n  }\n  return OPT\n}\n\n/**\n* @ignore\n* Normaliza la propiedad attributes.\n* @param {Object}         ATTRIB   - Propiedad attributes.\n* @param {Object}         [OUTPUT] - Objeto que contiene el formato.\n* @param {SequelizeModel} [MODEL]  - Modelo Sequelize de referencia.\n* @param {Boolean}        KEYS     - Indica si se incluiran por defecto las\n*                                    claves primarias y foraneas.\n* @return {Object}\n*/\nfunction normalizeAttributes (ATTRIB, OUTPUT, MODEL, KEYS) {\n  const EXCLUDE  = (ATTRIB && ATTRIB.exclude) ? ATTRIB.exclude : []\n  let attributes = (ATTRIB && Array.isArray(ATTRIB)) ? ATTRIB : []\n  if (!KEYS) {\n    if (EXCLUDE.length > 0) {\n      if (OUTPUT) {\n        for (let prop in OUTPUT) {\n          if (_isField(OUTPUT[prop])) {\n            if (!EXCLUDE.includes(prop)) {\n              if (!MODEL || MODEL.attributes[prop]) {\n                attributes.push(prop)\n              }\n            }\n          }\n        }\n      } else if (MODEL) {\n        Object.keys(MODEL.attributes).forEach(key => {\n          if (!attributes.includes(key) && !EXCLUDE.includes(key)) {\n            attributes.push(key)\n          }\n        })\n      } else {\n        attributes = ATTRIB\n      }\n    }\n  } else {\n    if (OUTPUT) {\n      for (let prop in OUTPUT) {\n        if (_isField(OUTPUT[prop]) && !attributes.includes(prop)) {\n          if ((OUTPUT[prop].primaryKey && OUTPUT[prop].primaryKey === true) || OUTPUT[prop].references) {\n            if (!MODEL || MODEL.attributes[prop]) {\n              attributes.push(prop)\n            }\n          } else {\n            if (EXCLUDE.length > 0 && !EXCLUDE.includes(prop)) {\n              if (!MODEL || MODEL.attributes[prop]) {\n                attributes.push(prop)\n              }\n            }\n          }\n        }\n      }\n    } else if (MODEL) {\n      Object.keys(MODEL.attributes).forEach(key => {\n        if (MODEL.attributes[key].primaryKey && (MODEL.attributes[key].primaryKey === true) && !attributes.includes(key)) {\n          if (EXCLUDE.length > 0 && !EXCLUDE.includes(key)) {\n            attributes.push(key)\n          }\n        }\n      })\n    } else {\n      attributes = ATTRIB\n    }\n  }\n  return attributes\n}\n\n/**\n* @ignore\n* Devuelve la propiedad attributes con todos los campos posibles.\n* @param {Object}         [OUTPUT] - Objeto que contiene el formato.\n* @param {SequelizeModel} [MODEL]  - Modelo Sequelize de referencia.\n* @return {String[]}\n*/\nfunction getAllAttributes (OUTPUT, MODEL) {\n  const ATTRIBUTES = []\n  if (OUTPUT) {\n    for (let prop in OUTPUT) {\n      if (_isField(OUTPUT[prop])) {\n        if (!MODEL || MODEL.attributes[prop]) {\n          ATTRIBUTES.push(prop)\n        }\n      }\n    }\n  } else if (MODEL) {\n    Object.keys(MODEL.attributes).forEach(prop => {\n      if (!ATTRIBUTES.includes(prop)) {\n        ATTRIBUTES.push(prop)\n      }\n    })\n  } else {\n    return undefined\n  }\n  return ATTRIBUTES\n}\n\n/**\n* @ignore\n* Devuelve el indice del parentesis de cierre que corresponde al nivel actual.\n* @param {String} str - Cadena de texto.\n* @param {Number} pos - Posición desde la que se comienza la búsqueda.\n* @return {Number}\n*/\nfunction findIndex (str, pos) {\n  let level = 0\n  for (let i = pos; i < str.length; i++) {\n    if (str[i] === ')' && level === 0) { return i }\n    if (str[i] === '(') { level++ }\n    if (str[i] === ')') { level-- }\n  }\n}\n\n/**\n* @ignore\n* Función que indica si un objeto es un campo o no.\n* @param {Object} obj - Objeto.\n* @return {String}\n*/\nfunction _isField (obj) {\n  if (obj && obj._modelAttribute && (obj._modelAttribute === true)) {\n    return true\n  }\n  return false\n}\n\nmodule.exports = SequelizeOptions\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/SequelizeOptions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 394,
    "kind": "class",
    "name": "SequelizeOptions",
    "memberof": "lib/libs/SequelizeOptions.js",
    "static": true,
    "longname": "lib/libs/SequelizeOptions.js~SequelizeOptions",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/SequelizeOptions.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 5,
    "ignore": true,
    "interface": false
  },
  {
    "__docId__": 395,
    "kind": "method",
    "name": "create",
    "memberof": "lib/libs/SequelizeOptions.js~SequelizeOptions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SequelizeOptions.js~SequelizeOptions.create",
    "access": "public",
    "description": "Crea el objeto options.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Opciones de configuración."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.query",
        "description": "Filtros de una consulta."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.output",
        "description": "Formato de salida."
      },
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": true,
        "name": "options.model",
        "description": "Modelo que se usará para filtrar campos."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.keys",
        "description": "Indica si se incluirán de forma obligatoria\n                                               los campos que sean claves primarias y foráneas."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 396,
    "kind": "method",
    "name": "filter",
    "memberof": "lib/libs/SequelizeOptions.js~SequelizeOptions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SequelizeOptions.js~SequelizeOptions.filter",
    "access": "public",
    "description": "Filtra los campos de un objeto (Elimina aquellos campos no requeridos).",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Datos a filtrar."
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Opciones de configuración."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.query",
        "description": "Filtros de una consulta."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.output",
        "description": "Formato de salida."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.plain",
        "description": "Indica si los campos de los submodelos se\n                                          moverán al objeto raiz.\n                                          los campos que sean claves primarias y foráneas."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 397,
    "kind": "function",
    "name": "_fieldsALL",
    "memberof": "lib/libs/SequelizeOptions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SequelizeOptions.js~_fieldsALL",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/SequelizeOptions.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 85,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "output",
        "description": "Objeto output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 398,
    "kind": "function",
    "name": "copy",
    "memberof": "lib/libs/SequelizeOptions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SequelizeOptions.js~copy",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/SequelizeOptions.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 107,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "DATA",
        "description": "Objeto que contiene los datos."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "OUTPUT",
        "description": "Objeto que tiene el formato de los campos."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "OPTIONS",
        "description": "Objeto que contiene los campos permitidos."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 399,
    "kind": "function",
    "name": "copyPlain",
    "memberof": "lib/libs/SequelizeOptions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SequelizeOptions.js~copyPlain",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/SequelizeOptions.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 154,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "DATA",
        "description": "Objeto que contiene los datos."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "OUTPUT",
        "description": "Objeto que tiene el formato de los campos."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "OPTIONS",
        "description": "Objeto que contiene los campos permitidos."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "PATH",
        "description": "Nombre completo del campo."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "OBJ",
        "description": "Objeto raiz."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 400,
    "kind": "function",
    "name": "parseOrder",
    "memberof": "lib/libs/SequelizeOptions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SequelizeOptions.js~parseOrder",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/SequelizeOptions.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 195,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldName",
        "description": "Nombre del campo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 401,
    "kind": "function",
    "name": "addAttribute",
    "memberof": "lib/libs/SequelizeOptions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SequelizeOptions.js~addAttribute",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/SequelizeOptions.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 218,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "word",
        "description": "Palabra obtenida desde la query."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "OUTPUT",
        "description": "Objeto que contiene el formato."
      },
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": true,
        "name": "MODEL",
        "description": "Modelo Sequelize de referencia."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "KEYS",
        "description": "Indica si se incluiran por defecto las claves primarias y foraneas."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "where",
        "description": "Objeto que almacena la propiedad where del options."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "attributes",
        "description": "Objeto que almacena la propiedad attributes del options."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "exclude",
        "description": "Objeto que almacena la propiedad exclude del options."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "allFields",
        "description": "Bandera que indica si se adicionarón todos los fields."
      }
    ],
    "return": null
  },
  {
    "__docId__": 402,
    "kind": "function",
    "name": "parseFieldsSTR",
    "memberof": "lib/libs/SequelizeOptions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SequelizeOptions.js~parseFieldsSTR",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/SequelizeOptions.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 261,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldsSTR",
        "description": "Valor del campo query.fields."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "OUTPUT",
        "description": "Objeto que contiene el formato."
      },
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": true,
        "name": "MODEL",
        "description": "Modelo Sequelize de referencia."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "KEYS",
        "description": "Indica si se incluiran por defecto las claves primarias y foraneas."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "as",
        "description": "Nombre de la asociación."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "trace",
        "description": "Ruta del campo."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "QUERY",
        "description": "Objeto query."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 403,
    "kind": "function",
    "name": "normalizeAttributes",
    "memberof": "lib/libs/SequelizeOptions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SequelizeOptions.js~normalizeAttributes",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/SequelizeOptions.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 339,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "ATTRIB",
        "description": "Propiedad attributes."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "OUTPUT",
        "description": "Objeto que contiene el formato."
      },
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": true,
        "name": "MODEL",
        "description": "Modelo Sequelize de referencia."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "KEYS",
        "description": "Indica si se incluiran por defecto las\n                                   claves primarias y foraneas."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 404,
    "kind": "function",
    "name": "getAllAttributes",
    "memberof": "lib/libs/SequelizeOptions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SequelizeOptions.js~getAllAttributes",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/SequelizeOptions.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 403,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "OUTPUT",
        "description": "Objeto que contiene el formato."
      },
      {
        "nullable": null,
        "types": [
          "SequelizeModel"
        ],
        "spread": false,
        "optional": true,
        "name": "MODEL",
        "description": "Modelo Sequelize de referencia."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 405,
    "kind": "function",
    "name": "findIndex",
    "memberof": "lib/libs/SequelizeOptions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SequelizeOptions.js~findIndex",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/SequelizeOptions.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 432,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "Cadena de texto."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "pos",
        "description": "Posición desde la que se comienza la búsqueda."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 406,
    "kind": "function",
    "name": "_isField",
    "memberof": "lib/libs/SequelizeOptions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/libs/SequelizeOptions.js~_isField",
    "access": "private",
    "export": false,
    "importPath": "insac/lib/libs/SequelizeOptions.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 447,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Objeto."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 407,
    "kind": "file",
    "name": "lib/libs/ValidationError.js",
    "content": "/**\n* Formato de error\n*/\nclass ValidationError extends Error {\n  /**\n  * Crea una instancia de error.\n  * @param {Object[]} errors Lista de errors\n  */\n  constructor (errors) {\n    super('Error de validación')\n    /**\n    * Nombre del error\n    * @type {String}\n    */\n    this.name = 'InputDataValidationError'\n\n    /**\n    * Lista de errores\n    * @type {Object[]}\n    */\n    this.errors = errors\n  }\n}\n\nmodule.exports = ValidationError\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/ValidationError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 408,
    "kind": "class",
    "name": "ValidationError",
    "memberof": "lib/libs/ValidationError.js",
    "static": true,
    "longname": "lib/libs/ValidationError.js~ValidationError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/ValidationError.js",
    "importStyle": null,
    "description": "Formato de error",
    "lineNumber": 4,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 409,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/libs/ValidationError.js~ValidationError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/libs/ValidationError.js~ValidationError#constructor",
    "access": "public",
    "description": "Crea una instancia de error.",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "errors",
        "description": "Lista de errors"
      }
    ]
  },
  {
    "__docId__": 410,
    "kind": "member",
    "name": "name",
    "memberof": "lib/libs/ValidationError.js~ValidationError",
    "static": false,
    "longname": "lib/libs/ValidationError.js~ValidationError#name",
    "access": "public",
    "description": "Nombre del error",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 411,
    "kind": "member",
    "name": "errors",
    "memberof": "lib/libs/ValidationError.js~ValidationError",
    "static": false,
    "longname": "lib/libs/ValidationError.js~ValidationError#errors",
    "access": "public",
    "description": "Lista de errores",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "Object[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 412,
    "kind": "file",
    "name": "lib/libs/errors/BadRequestError.js",
    "content": "/** @ignore */ const ResponseError = require('../ResponseError')\n\n/**\n* Clase BadRequestError\n*/\nclass BadRequestError extends ResponseError {\n  /**\n  * Crea una instancia.\n  * @param {String} msg - Descripción específica del error.\n  *                       También puede ser un objeto ó incluso un array de objetos que tengan\n  *                       las propiedades <code>msg</code> y <code>dev</code>.\n  */\n  constructor (msg = BadRequestError.MSG) {\n    const errors = Array.isArray(msg) ? msg : (typeof msg === 'object' ? [msg] : [{ msg }])\n    errors.forEach(err => {\n      err.msg = err.msg || BadRequestError.MSG\n      err.dev = err.dev || null\n    })\n    super(\n      BadRequestError.TYPE,\n      BadRequestError.CODE,\n      BadRequestError.MESSAGE,\n      errors\n    )\n  }\n}\n\nBadRequestError.TYPE    = 'BAD_REQUEST'\nBadRequestError.CODE    = 400\nBadRequestError.MESSAGE = 'Petición incorrecta'\nBadRequestError.MSG     = 'Hubo un error al procesar su solicitud, revise el formato en el envío de datos e inténtelo nuevamente.'\n\n/**\n* @ignore\n* Crea un objeto de tipo error sin invocar al constructor.\n* Esto es para mantener en la cima del stack el punto exacto donde ocurrio el error.\n* @param {String} msg - Descripción específica del error.\n*                       También puede ser un objeto ó incluso un array de objetos que tengan\n*                       las propiedades <code>msg</code> y <code>dev</code>.\n* @return {Object}\n*/\nBadRequestError.create = (msg = BadRequestError.MSG) => {\n  const errors = Array.isArray(msg) ? msg : (typeof msg === 'object' ? [msg] : [{ msg }])\n  errors.forEach(err => {\n    err.msg = err.msg || BadRequestError.MSG\n    err.dev = err.dev || null\n  })\n  return ResponseError.create(\n    BadRequestError.TYPE,\n    BadRequestError.CODE,\n    BadRequestError.MESSAGE,\n    errors\n  )\n}\n\nmodule.exports = BadRequestError\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/errors/BadRequestError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 413,
    "kind": "variable",
    "name": "ResponseError",
    "memberof": "lib/libs/errors/BadRequestError.js",
    "static": true,
    "longname": "lib/libs/errors/BadRequestError.js~ResponseError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/BadRequestError.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 414,
    "kind": "class",
    "name": "BadRequestError",
    "memberof": "lib/libs/errors/BadRequestError.js",
    "static": true,
    "longname": "lib/libs/errors/BadRequestError.js~BadRequestError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/BadRequestError.js",
    "importStyle": null,
    "description": "Clase BadRequestError",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "ResponseError"
    ]
  },
  {
    "__docId__": 415,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/libs/errors/BadRequestError.js~BadRequestError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/libs/errors/BadRequestError.js~BadRequestError#constructor",
    "access": "public",
    "description": "Crea una instancia.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "Descripción específica del error.\n                      También puede ser un objeto ó incluso un array de objetos que tengan\n                      las propiedades <code>msg</code> y <code>dev</code>."
      }
    ]
  },
  {
    "__docId__": 416,
    "kind": "file",
    "name": "lib/libs/errors/ConflictError.js",
    "content": "/** @ignore */ const ResponseError = require('../ResponseError')\n\n/**\n* Clase ConflictError\n*/\nclass ConflictError extends ResponseError {\n  /**\n  * Crea una instancia.\n  * @param {String} msg - Descripción específica del error.\n  *                       También puede ser un objeto ó incluso un array de objetos que tengan\n  *                       las propiedades <code>msg</code> y <code>dev</code>.\n  */\n  constructor (msg = ConflictError.MSG) {\n    const errors = Array.isArray(msg) ? msg : (typeof msg === 'object' ? [msg] : [{ msg }])\n    errors.forEach(err => {\n      err.msg = err.msg || ConflictError.MSG\n      err.dev = err.dev || null\n    })\n    super(\n      ConflictError.TYPE,\n      ConflictError.CODE,\n      ConflictError.MESSAGE,\n      errors\n    )\n  }\n}\n\nConflictError.TYPE    = 'CONFLICT'\nConflictError.CODE    = 409\nConflictError.MESSAGE = 'Conflicto.'\nConflictError.MSG     = 'Hubo un error durante el proceso, inténtelo nuevamente.'\n\n/**\n* @ignore\n* Crea un objeto de tipo error sin invocar al constructor.\n* Esto es para mantener en la cima del stack el punto exacto donde ocurrio el error.\n* @param {String} msg - Descripción específica del error.\n*                       También puede ser un objeto ó incluso un array de objetos que tengan\n*                       las propiedades <code>msg</code> y <code>dev</code>.\n* @return {Object}\n*/\nConflictError.create = (msg = ConflictError.MSG) => {\n  const errors = Array.isArray(msg) ? msg : (typeof msg === 'object' ? [msg] : [{ msg }])\n  errors.forEach(err => {\n    err.msg = err.msg || ConflictError.MSG\n    err.dev = err.dev || null\n  })\n  return ResponseError.create(\n    ConflictError.TYPE,\n    ConflictError.CODE,\n    ConflictError.MESSAGE,\n    errors\n  )\n}\n\nmodule.exports = ConflictError\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/errors/ConflictError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 417,
    "kind": "variable",
    "name": "ResponseError",
    "memberof": "lib/libs/errors/ConflictError.js",
    "static": true,
    "longname": "lib/libs/errors/ConflictError.js~ResponseError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/ConflictError.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 418,
    "kind": "class",
    "name": "ConflictError",
    "memberof": "lib/libs/errors/ConflictError.js",
    "static": true,
    "longname": "lib/libs/errors/ConflictError.js~ConflictError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/ConflictError.js",
    "importStyle": null,
    "description": "Clase ConflictError",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "ResponseError"
    ]
  },
  {
    "__docId__": 419,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/libs/errors/ConflictError.js~ConflictError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/libs/errors/ConflictError.js~ConflictError#constructor",
    "access": "public",
    "description": "Crea una instancia.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "Descripción específica del error.\n                      También puede ser un objeto ó incluso un array de objetos que tengan\n                      las propiedades <code>msg</code> y <code>dev</code>."
      }
    ]
  },
  {
    "__docId__": 420,
    "kind": "file",
    "name": "lib/libs/errors/ForbiddenError.js",
    "content": "/** @ignore */ const ResponseError = require('../ResponseError')\n\n/**\n* Clase ForbiddenError\n*/\nclass ForbiddenError extends ResponseError {\n  /**\n  * Crea una instancia.\n  * @param {String} msg - Descripción específica del error.\n  *                       También puede ser un objeto ó incluso un array de objetos que tengan\n  *                       las propiedades <code>msg</code> y <code>dev</code>.\n  */\n  constructor (msg = ForbiddenError.MSG) {\n    const errors = Array.isArray(msg) ? msg : (typeof msg === 'object' ? [msg] : [{ msg }])\n    errors.forEach(err => {\n      err.msg = err.msg || ForbiddenError.MSG\n      err.dev = err.dev || null\n    })\n    super(\n      ForbiddenError.TYPE,\n      ForbiddenError.CODE,\n      ForbiddenError.MESSAGE,\n      errors\n    )\n  }\n}\n\nForbiddenError.TYPE    = 'FORBIDDEN'\nForbiddenError.CODE    = 403\nForbiddenError.MESSAGE = 'Acceso denegado'\nForbiddenError.MSG     = 'No cuenta con los privilegios suficientes para acceder al recurso.'\n\n/**\n* @ignore\n* Crea un objeto de tipo error sin invocar al constructor.\n* Esto es para mantener en la cima del stack el punto exacto donde ocurrio el error.\n* @param {String} msg - Descripción específica del error.\n*                       También puede ser un objeto ó incluso un array de objetos que tengan\n*                       las propiedades <code>msg</code> y <code>dev</code>.\n* @return {Object}\n*/\nForbiddenError.create = (msg = ForbiddenError.MSG) => {\n  const errors = Array.isArray(msg) ? msg : (typeof msg === 'object' ? [msg] : [{ msg }])\n  errors.forEach(err => {\n    err.msg = err.msg || ForbiddenError.MSG\n    err.dev = err.dev || null\n  })\n  return ResponseError.create(\n    ForbiddenError.TYPE,\n    ForbiddenError.CODE,\n    ForbiddenError.MESSAGE,\n    errors\n  )\n}\n\nmodule.exports = ForbiddenError\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/errors/ForbiddenError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 421,
    "kind": "variable",
    "name": "ResponseError",
    "memberof": "lib/libs/errors/ForbiddenError.js",
    "static": true,
    "longname": "lib/libs/errors/ForbiddenError.js~ResponseError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/ForbiddenError.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 422,
    "kind": "class",
    "name": "ForbiddenError",
    "memberof": "lib/libs/errors/ForbiddenError.js",
    "static": true,
    "longname": "lib/libs/errors/ForbiddenError.js~ForbiddenError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/ForbiddenError.js",
    "importStyle": null,
    "description": "Clase ForbiddenError",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "ResponseError"
    ]
  },
  {
    "__docId__": 423,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/libs/errors/ForbiddenError.js~ForbiddenError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/libs/errors/ForbiddenError.js~ForbiddenError#constructor",
    "access": "public",
    "description": "Crea una instancia.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "Descripción específica del error.\n                      También puede ser un objeto ó incluso un array de objetos que tengan\n                      las propiedades <code>msg</code> y <code>dev</code>."
      }
    ]
  },
  {
    "__docId__": 424,
    "kind": "file",
    "name": "lib/libs/errors/InternalServerError.js",
    "content": "/** @ignore */ const ResponseError = require('../ResponseError')\n\n/**\n* Clase InternalServerError\n*/\nclass InternalServerError extends ResponseError {\n  /**\n  * Crea una instancia.\n  * @param {Object} err - Error.\n  * @param {String} msg - Mensaje de error personalizado.\n  */\n  constructor (err, msg = InternalServerError.MSG) {\n    super(\n      InternalServerError.TYPE,\n      InternalServerError.CODE,\n      InternalServerError.MESSAGE,\n      [{ msg, dev: err ? err.toString() : null }],\n      err\n    )\n  }\n}\n\nInternalServerError.TYPE    = 'INTERNAL_SERVER_ERROR'\nInternalServerError.CODE    = 500\nInternalServerError.MESSAGE = 'Error interno'\nInternalServerError.MSG     = 'Hubo un error inesperado, inténtelo mas tarde.'\n\n/**\n* @ignore\n* Crea un objeto de tipo error sin invocar al constructor.\n* Esto es para mantener en la cima del stack el punto exacto donde ocurrio el error.\n* @param {Object} err - Error.\n* @param {String} msg - Mensaje de error personalizado.\n* @return {Object}\n*/\nInternalServerError.create = (err, msg = InternalServerError.MSG) => {\n  return ResponseError.create(\n    InternalServerError.TYPE,\n    InternalServerError.CODE,\n    InternalServerError.MESSAGE,\n    [{ msg, dev: err ? err.toString() : null }],\n    err\n  )\n}\n\nmodule.exports = InternalServerError\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/errors/InternalServerError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 425,
    "kind": "variable",
    "name": "ResponseError",
    "memberof": "lib/libs/errors/InternalServerError.js",
    "static": true,
    "longname": "lib/libs/errors/InternalServerError.js~ResponseError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/InternalServerError.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 426,
    "kind": "class",
    "name": "InternalServerError",
    "memberof": "lib/libs/errors/InternalServerError.js",
    "static": true,
    "longname": "lib/libs/errors/InternalServerError.js~InternalServerError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/InternalServerError.js",
    "importStyle": null,
    "description": "Clase InternalServerError",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "ResponseError"
    ]
  },
  {
    "__docId__": 427,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/libs/errors/InternalServerError.js~InternalServerError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/libs/errors/InternalServerError.js~InternalServerError#constructor",
    "access": "public",
    "description": "Crea una instancia.",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "err",
        "description": "Error."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "Mensaje de error personalizado."
      }
    ]
  },
  {
    "__docId__": 428,
    "kind": "file",
    "name": "lib/libs/errors/InvalidTokenError.js",
    "content": "/** @ignore */ const ResponseError = require('../ResponseError')\n\n/**\n* Clase InvalidTokenError\n*/\nclass InvalidTokenError extends ResponseError {\n  /**\n  * Crea una instancia.\n  * @param {String} msg - Descripción específica del error.\n  *                       También puede ser un objeto ó incluso un array de objetos que tengan\n  *                       las propiedades <code>msg</code> y <code>dev</code>.\n  */\n  constructor (msg = InvalidTokenError.MSG) {\n    const errors = Array.isArray(msg) ? msg : (typeof msg === 'object' ? [msg] : [{ msg }])\n    errors.forEach(err => {\n      err.msg = err.msg || InvalidTokenError.MSG\n      err.dev = err.dev || null\n    })\n    super(\n      InvalidTokenError.TYPE,\n      InvalidTokenError.CODE,\n      InvalidTokenError.MESSAGE,\n      errors\n    )\n  }\n}\n\nInvalidTokenError.TYPE    = 'INVALID_TOKEN'\nInvalidTokenError.CODE    = 498\nInvalidTokenError.MESSAGE = 'Token inválido'\nInvalidTokenError.MSG     = 'La sesión ha expirado.'\n\n/**\n* @ignore\n* Crea un objeto de tipo error sin invocar al constructor.\n* Esto es para mantener en la cima del stack el punto exacto donde ocurrio el error.\n* @param {String} msg - Descripción específica del error.\n*                       También puede ser un objeto ó incluso un array de objetos que tengan\n*                       las propiedades <code>msg</code> y <code>dev</code>.\n* @return {Object}\n*/\nInvalidTokenError.create = (msg = InvalidTokenError.MSG) => {\n  const errors = Array.isArray(msg) ? msg : (typeof msg === 'object' ? [msg] : [{ msg }])\n  errors.forEach(err => {\n    err.msg = err.msg || InvalidTokenError.MSG\n    err.dev = err.dev || null\n  })\n  return ResponseError.create(\n    InvalidTokenError.TYPE,\n    InvalidTokenError.CODE,\n    InvalidTokenError.MESSAGE,\n    errors\n  )\n}\n\nmodule.exports = InvalidTokenError\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/errors/InvalidTokenError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 429,
    "kind": "variable",
    "name": "ResponseError",
    "memberof": "lib/libs/errors/InvalidTokenError.js",
    "static": true,
    "longname": "lib/libs/errors/InvalidTokenError.js~ResponseError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/InvalidTokenError.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 430,
    "kind": "class",
    "name": "InvalidTokenError",
    "memberof": "lib/libs/errors/InvalidTokenError.js",
    "static": true,
    "longname": "lib/libs/errors/InvalidTokenError.js~InvalidTokenError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/InvalidTokenError.js",
    "importStyle": null,
    "description": "Clase InvalidTokenError",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "ResponseError"
    ]
  },
  {
    "__docId__": 431,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/libs/errors/InvalidTokenError.js~InvalidTokenError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/libs/errors/InvalidTokenError.js~InvalidTokenError#constructor",
    "access": "public",
    "description": "Crea una instancia.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "Descripción específica del error.\n                      También puede ser un objeto ó incluso un array de objetos que tengan\n                      las propiedades <code>msg</code> y <code>dev</code>."
      }
    ]
  },
  {
    "__docId__": 432,
    "kind": "file",
    "name": "lib/libs/errors/NotFoundError.js",
    "content": "/** @ignore */ const ResponseError = require('../ResponseError')\n\n/**\n* Clase NotFoundError\n*/\nclass NotFoundError extends ResponseError {\n  /**\n  * Crea una instancia.\n  * @param {String} msg - Descripción específica del error.\n  *                       También puede ser un objeto ó incluso un array de objetos que tengan\n  *                       las propiedades <code>msg</code> y <code>dev</code>.\n  */\n  constructor (msg = NotFoundError.MSG) {\n    const errors = Array.isArray(msg) ? msg : (typeof msg === 'object' ? [msg] : [{ msg }])\n    errors.forEach(err => {\n      err.msg = err.msg || NotFoundError.MSG\n      err.dev = err.dev || null\n    })\n    super(\n      NotFoundError.TYPE,\n      NotFoundError.CODE,\n      NotFoundError.MESSAGE,\n      errors\n    )\n  }\n}\n\nNotFoundError.TYPE    = 'NOT_FOUND'\nNotFoundError.CODE    = 404\nNotFoundError.MESSAGE = 'Recurso no disponible'\nNotFoundError.MSG     = 'El servidor no puede encontrar el recurso solicitado.'\n\n/**\n* @ignore\n* Crea un objeto de tipo error sin invocar al constructor.\n* Esto es para mantener en la cima del stack el punto exacto donde ocurrio el error.\n* @param {String} msg - Descripción específica del error.\n*                       También puede ser un objeto ó incluso un array de objetos que tengan\n*                       las propiedades <code>msg</code> y <code>dev</code>.\n* @return {Object}\n*/\nNotFoundError.create = (msg = NotFoundError.MSG) => {\n  const errors = Array.isArray(msg) ? msg : (typeof msg === 'object' ? [msg] : [{ msg }])\n  errors.forEach(err => {\n    err.msg = err.msg || NotFoundError.MSG\n    err.dev = err.dev || null\n  })\n  return ResponseError.create(\n    NotFoundError.TYPE,\n    NotFoundError.CODE,\n    NotFoundError.MESSAGE,\n    errors\n  )\n}\n\nmodule.exports = NotFoundError\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/errors/NotFoundError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 433,
    "kind": "variable",
    "name": "ResponseError",
    "memberof": "lib/libs/errors/NotFoundError.js",
    "static": true,
    "longname": "lib/libs/errors/NotFoundError.js~ResponseError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/NotFoundError.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 434,
    "kind": "class",
    "name": "NotFoundError",
    "memberof": "lib/libs/errors/NotFoundError.js",
    "static": true,
    "longname": "lib/libs/errors/NotFoundError.js~NotFoundError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/NotFoundError.js",
    "importStyle": null,
    "description": "Clase NotFoundError",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "ResponseError"
    ]
  },
  {
    "__docId__": 435,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/libs/errors/NotFoundError.js~NotFoundError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/libs/errors/NotFoundError.js~NotFoundError#constructor",
    "access": "public",
    "description": "Crea una instancia.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "Descripción específica del error.\n                      También puede ser un objeto ó incluso un array de objetos que tengan\n                      las propiedades <code>msg</code> y <code>dev</code>."
      }
    ]
  },
  {
    "__docId__": 436,
    "kind": "file",
    "name": "lib/libs/errors/PreconditionFailedError.js",
    "content": "/** @ignore */ const ResponseError = require('../ResponseError')\n\n/**\n* Clase PreconditionFailedError\n*/\nclass PreconditionFailedError extends ResponseError {\n  /**\n  * Crea una instancia.\n  * @param {String} msg - Descripción específica del error.\n  *                       También puede ser un objeto ó incluso un array de objetos que tengan\n  *                       las propiedades <code>msg</code> y <code>dev</code>.\n  */\n  constructor (msg = PreconditionFailedError.MSG) {\n    const errors = Array.isArray(msg) ? msg : (typeof msg === 'object' ? [msg] : [{ msg }])\n    errors.forEach(err => {\n      err.msg = err.msg || PreconditionFailedError.MSG\n      err.dev = err.dev || null\n    })\n    super(\n      PreconditionFailedError.TYPE,\n      PreconditionFailedError.CODE,\n      PreconditionFailedError.MESSAGE,\n      errors\n    )\n  }\n}\n\nPreconditionFailedError.TYPE    = 'PRECONDITION_FAILED'\nPreconditionFailedError.CODE    = 412\nPreconditionFailedError.MESSAGE = 'Condición insuficiente'\nPreconditionFailedError.MSG     = 'No se cumple con algunas condiciones que son necesarias para completar la tarea.'\n\n/**\n* @ignore\n* Crea un objeto de tipo error sin invocar al constructor.\n* Esto es para mantener en la cima del stack el punto exacto donde ocurrio el error.\n* @param {String} msg - Descripción específica del error.\n*                       También puede ser un objeto ó incluso un array de objetos que tengan\n*                       las propiedades <code>msg</code> y <code>dev</code>.\n* @return {Object}\n*/\nPreconditionFailedError.create = (msg = PreconditionFailedError.MSG) => {\n  const errors = Array.isArray(msg) ? msg : (typeof msg === 'object' ? [msg] : [{ msg }])\n  errors.forEach(err => {\n    err.msg = err.msg || PreconditionFailedError.MSG\n    err.dev = err.dev || null\n  })\n  return ResponseError.create(\n    PreconditionFailedError.TYPE,\n    PreconditionFailedError.CODE,\n    PreconditionFailedError.MESSAGE,\n    errors\n  )\n}\n\nmodule.exports = PreconditionFailedError\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/errors/PreconditionFailedError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 437,
    "kind": "variable",
    "name": "ResponseError",
    "memberof": "lib/libs/errors/PreconditionFailedError.js",
    "static": true,
    "longname": "lib/libs/errors/PreconditionFailedError.js~ResponseError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/PreconditionFailedError.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 438,
    "kind": "class",
    "name": "PreconditionFailedError",
    "memberof": "lib/libs/errors/PreconditionFailedError.js",
    "static": true,
    "longname": "lib/libs/errors/PreconditionFailedError.js~PreconditionFailedError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/PreconditionFailedError.js",
    "importStyle": null,
    "description": "Clase PreconditionFailedError",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "ResponseError"
    ]
  },
  {
    "__docId__": 439,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/libs/errors/PreconditionFailedError.js~PreconditionFailedError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/libs/errors/PreconditionFailedError.js~PreconditionFailedError#constructor",
    "access": "public",
    "description": "Crea una instancia.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "Descripción específica del error.\n                      También puede ser un objeto ó incluso un array de objetos que tengan\n                      las propiedades <code>msg</code> y <code>dev</code>."
      }
    ]
  },
  {
    "__docId__": 440,
    "kind": "file",
    "name": "lib/libs/errors/UnauthorizedError.js",
    "content": "/** @ignore */ const ResponseError = require('../ResponseError')\n\n/**\n* Clase UnauthorizedError\n*/\nclass UnauthorizedError extends ResponseError {\n  /**\n  * Crea una instancia.\n  * @param {String} msg - Descripción específica del error.\n  *                       También puede ser un objeto ó incluso un array de objetos que tengan\n  *                       las propiedades <code>msg</code> y <code>dev</code>.\n  */\n  constructor (msg = UnauthorizedError.MSG) {\n    const errors = Array.isArray(msg) ? msg : (typeof msg === 'object' ? [msg] : [{ msg }])\n    errors.forEach(err => {\n      err.msg = err.msg || UnauthorizedError.MSG\n      err.dev = err.dev || null\n    })\n    super(\n      UnauthorizedError.TYPE,\n      UnauthorizedError.CODE,\n      UnauthorizedError.MESSAGE,\n      errors\n    )\n  }\n}\n\nUnauthorizedError.TYPE    = 'UNAUTHORIZED'\nUnauthorizedError.CODE    = 401\nUnauthorizedError.MESSAGE = 'Acceso no autorizado'\nUnauthorizedError.MSG     = 'Debe autenticarse para acceder al recurso.'\n\n/**\n* @ignore\n* Crea un objeto de tipo error sin invocar al constructor.\n* Esto es para mantener en la cima del stack el punto exacto donde ocurrio el error.\n* @param {String} msg - Descripción específica del error.\n*                       También puede ser un objeto ó incluso un array de objetos que tengan\n*                       las propiedades <code>msg</code> y <code>dev</code>.\n* @return {Object}\n*/\nUnauthorizedError.create = (msg = UnauthorizedError.MSG) => {\n  const errors = Array.isArray(msg) ? msg : (typeof msg === 'object' ? [msg] : [{ msg }])\n  errors.forEach(err => {\n    err.msg = err.msg || UnauthorizedError.MSG\n    err.dev = err.dev || null\n  })\n  return ResponseError.create(\n    UnauthorizedError.TYPE,\n    UnauthorizedError.CODE,\n    UnauthorizedError.MESSAGE,\n    errors\n  )\n}\n\nmodule.exports = UnauthorizedError\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/errors/UnauthorizedError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 441,
    "kind": "variable",
    "name": "ResponseError",
    "memberof": "lib/libs/errors/UnauthorizedError.js",
    "static": true,
    "longname": "lib/libs/errors/UnauthorizedError.js~ResponseError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/UnauthorizedError.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 442,
    "kind": "class",
    "name": "UnauthorizedError",
    "memberof": "lib/libs/errors/UnauthorizedError.js",
    "static": true,
    "longname": "lib/libs/errors/UnauthorizedError.js~UnauthorizedError",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/errors/UnauthorizedError.js",
    "importStyle": null,
    "description": "Clase UnauthorizedError",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "ResponseError"
    ]
  },
  {
    "__docId__": 443,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/libs/errors/UnauthorizedError.js~UnauthorizedError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/libs/errors/UnauthorizedError.js~UnauthorizedError#constructor",
    "access": "public",
    "description": "Crea una instancia.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "Descripción específica del error.\n                      También puede ser un objeto ó incluso un array de objetos que tengan\n                      las propiedades <code>msg</code> y <code>dev</code>."
      }
    ]
  },
  {
    "__docId__": 444,
    "kind": "file",
    "name": "lib/libs/lang/es.js",
    "content": "module.exports = {\n  errors: {\n    default      : `El campo {{fieldName}} no tiene el formato correcto.`,\n    allowNull    : `Se requiere el campo {{fieldName}}`,\n    allowNullObj : `Se requiere el objeto {{fieldName}}.`,\n    len          : `El campo {{fieldName}} debe tener entre {{args0}} y {{args1}} caracteres.`,\n    min          : `El campo {{fieldName}} debe ser mayor o igual a {{args}}`,\n    max          : `El campo {{fieldName}} debe ser menor o igual a {{args}}`,\n    isIn         : `El campo {{fieldName}} debe ser uno de los siguientes valores: {{args0}}`,\n    isInt        : `El campo {{fieldName}} debe ser un número entero.`,\n    isFloat      : `El campo {{fieldName}} debe ser un número en coma flotante.`,\n    isBoolean    : `El campo {{fieldName}} debe ser un valor booleano.`,\n    isDate       : `El campo {{fieldName}} debe ser una fecha válida.`,\n    isTime       : `El campo {{fieldName}} debe ser una hora válida.`,\n    isJson       : `El campo {{fieldName}} debe ser un objeto de tipo JSON válido.`,\n    isUUID       : `El campo {{fieldName}} debe ser un código UUID válido.`,\n    isArray      : `El campo {{fieldName}} debe ser una lista.`,\n    isObject     : `El campo {{fieldName}} debe ser un objeto.`\n  }\n}\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/lang/es.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 445,
    "kind": "file",
    "name": "lib/libs/successes/CreatedSuccess.js",
    "content": "/** @ignore */ const ResponseSuccess = require('../ResponseSuccess')\n\n/**\n* Clase CreatedSuccess\n*/\nclass CreatedSuccess extends ResponseSuccess {\n  /**\n  * Crea una instancia.\n  * @param {Object} [data]     - Datos.\n  * @param {String} [message]  - Descripción general de la respuesta.\n  * @param {Object} [metadata] - Metadatos.\n  */\n  constructor (data = null, message = CreatedSuccess.MESSAGE, metadata = null) {\n    super(\n      CreatedSuccess.TYPE,\n      CreatedSuccess.CODE,\n      message,\n      data,\n      metadata\n    )\n  }\n}\n\nCreatedSuccess.TYPE    = 'CREATED'\nCreatedSuccess.CODE    = 201\nCreatedSuccess.MESSAGE = 'Recurso creado exitosamente.'\n\n/**\n* @ignore\n* Crea un objeto CreatedSuccess sin invocar un constructor.\n* @param {Object} [data]     - Datos.\n* @param {String} [message]  - Descripción general de la respuesta.\n* @param {Object} [metadata] - Metadatos.\n* @return {OkSuccess}\n*/\nCreatedSuccess.create = (data = null, message = CreatedSuccess.MESSAGE, metadata = null) => {\n  return ResponseSuccess.create(\n    CreatedSuccess.TYPE,\n    CreatedSuccess.CODE,\n    message,\n    data,\n    metadata\n  )\n}\n\nmodule.exports = CreatedSuccess\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/successes/CreatedSuccess.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 446,
    "kind": "variable",
    "name": "ResponseSuccess",
    "memberof": "lib/libs/successes/CreatedSuccess.js",
    "static": true,
    "longname": "lib/libs/successes/CreatedSuccess.js~ResponseSuccess",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/successes/CreatedSuccess.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 447,
    "kind": "class",
    "name": "CreatedSuccess",
    "memberof": "lib/libs/successes/CreatedSuccess.js",
    "static": true,
    "longname": "lib/libs/successes/CreatedSuccess.js~CreatedSuccess",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/successes/CreatedSuccess.js",
    "importStyle": null,
    "description": "Clase CreatedSuccess",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "ResponseSuccess"
    ]
  },
  {
    "__docId__": 448,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/libs/successes/CreatedSuccess.js~CreatedSuccess",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/libs/successes/CreatedSuccess.js~CreatedSuccess#constructor",
    "access": "public",
    "description": "Crea una instancia.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "data",
        "description": "Datos."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Descripción general de la respuesta."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "metadata",
        "description": "Metadatos."
      }
    ]
  },
  {
    "__docId__": 449,
    "kind": "file",
    "name": "lib/libs/successes/NoContentSuccess.js",
    "content": "/** @ignore */ const ResponseSuccess = require('../ResponseSuccess')\n\n/**\n* Clase NoContentSuccess\n*/\nclass NoContentSuccess extends ResponseSuccess {\n  /**\n  * Crea una instancia.\n  * @param {Object} [data]     - Datos.\n  * @param {String} [message]  - Descripción general de la respuesta.\n  * @param {Object} [metadata] - Metadatos.\n  */\n  constructor (message = NoContentSuccess.MESSAGE) {\n    super(\n      NoContentSuccess.TYPE,\n      NoContentSuccess.CODE,\n      message\n    )\n  }\n}\n\nNoContentSuccess.TYPE    = 'NO CONTENT'\nNoContentSuccess.CODE    = 204\nNoContentSuccess.MESSAGE = 'Tarea completada exitosamente.'\n\n/**\n* @ignore\n* Crea un objeto NoContentSuccess sin invocar un constructor.\n* @param {Object} [data]     - Datos.\n* @param {String} [message]  - Descripción general de la respuesta.\n* @param {Object} [metadata] - Metadatos.\n* @return {OkSuccess}\n*/\nNoContentSuccess.create = (message = NoContentSuccess.MESSAGE) => {\n  return ResponseSuccess.create(\n    NoContentSuccess.TYPE,\n    NoContentSuccess.CODE,\n    message\n  )\n}\n\nmodule.exports = NoContentSuccess\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/successes/NoContentSuccess.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 450,
    "kind": "variable",
    "name": "ResponseSuccess",
    "memberof": "lib/libs/successes/NoContentSuccess.js",
    "static": true,
    "longname": "lib/libs/successes/NoContentSuccess.js~ResponseSuccess",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/successes/NoContentSuccess.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 451,
    "kind": "class",
    "name": "NoContentSuccess",
    "memberof": "lib/libs/successes/NoContentSuccess.js",
    "static": true,
    "longname": "lib/libs/successes/NoContentSuccess.js~NoContentSuccess",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/successes/NoContentSuccess.js",
    "importStyle": null,
    "description": "Clase NoContentSuccess",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "ResponseSuccess"
    ]
  },
  {
    "__docId__": 452,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/libs/successes/NoContentSuccess.js~NoContentSuccess",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/libs/successes/NoContentSuccess.js~NoContentSuccess#constructor",
    "access": "public",
    "description": "Crea una instancia.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "data",
        "description": "Datos."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Descripción general de la respuesta."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "metadata",
        "description": "Metadatos."
      }
    ]
  },
  {
    "__docId__": 453,
    "kind": "file",
    "name": "lib/libs/successes/OkSuccess.js",
    "content": "/** @ignore */ const ResponseSuccess = require('../ResponseSuccess')\n\n/**\n* Clase OkSuccess\n*/\nclass OkSuccess extends ResponseSuccess {\n  /**\n  * Crea una instancia.\n  * @param {Object} [data]     - Datos.\n  * @param {String} [message]  - Descripción general de la respuesta.\n  * @param {Object} [metadata] - Metadatos.\n  */\n  constructor (data = null, message = OkSuccess.MESSAGE, metadata = null) {\n    super(\n      OkSuccess.TYPE,\n      OkSuccess.CODE,\n      message,\n      data,\n      metadata\n    )\n  }\n}\n\nOkSuccess.TYPE    = 'OK'\nOkSuccess.CODE    = 200\nOkSuccess.MESSAGE = 'Tarea completada exitosamente.'\n\n/**\n* @ignore\n* Crea un objeto OkSuccess sin invocar un constructor.\n* @param {Object} [data]     - Datos.\n* @param {String} [message]  - Descripción general de la respuesta.\n* @param {Object} [metadata] - Metadatos.\n* @return {OkSuccess}\n*/\nOkSuccess.create = (data = null, message = OkSuccess.MESSAGE, metadata = null) => {\n  return ResponseSuccess.create(\n    OkSuccess.TYPE,\n    OkSuccess.CODE,\n    message,\n    data,\n    metadata\n  )\n}\n\nmodule.exports = OkSuccess\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/libs/successes/OkSuccess.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 454,
    "kind": "variable",
    "name": "ResponseSuccess",
    "memberof": "lib/libs/successes/OkSuccess.js",
    "static": true,
    "longname": "lib/libs/successes/OkSuccess.js~ResponseSuccess",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/successes/OkSuccess.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 455,
    "kind": "class",
    "name": "OkSuccess",
    "memberof": "lib/libs/successes/OkSuccess.js",
    "static": true,
    "longname": "lib/libs/successes/OkSuccess.js~OkSuccess",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/libs/successes/OkSuccess.js",
    "importStyle": null,
    "description": "Clase OkSuccess",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "ResponseSuccess"
    ]
  },
  {
    "__docId__": 456,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/libs/successes/OkSuccess.js~OkSuccess",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/libs/successes/OkSuccess.js~OkSuccess#constructor",
    "access": "public",
    "description": "Crea una instancia.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "data",
        "description": "Datos."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Descripción general de la respuesta."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "metadata",
        "description": "Metadatos."
      }
    ]
  },
  {
    "__docId__": 457,
    "kind": "file",
    "name": "lib/tools/errors.js",
    "content": "\n/**\n* Objeto para instanciar objetos de tipo 'error'\n* @type {Object}\n* @property {BadRequestError}         BadRequest              - Clase BadRequestError\n* @property {UnauthorizedError}       Unauthorized            - Clase UnauthorizedError\n* @property {ForbiddenError}          Forbidden               - Clase ForbiddenError\n* @property {NotFoundError}           NotFoundError           - Clase NotFoundError\n* @property {ConflictError}           ConflictError           - Clase ConflictError\n* @property {PreconditionFailedError} PreconditionFailedError - Clase PreconditionFailedError\n* @property {InvalidTokenError}       InvalidTokenError       - Clase InvalidTokenError\n* @property {InternalServerError}     InternalServerError     - Clase InternalServerError\n*/\nconst errors = {\n  BadRequest         : require('../libs/errors/BadRequestError'),\n  Unauthorized       : require('../libs/errors/UnauthorizedError'),\n  Forbidden          : require('../libs/errors/ForbiddenError'),\n  NotFound           : require('../libs/errors/NotFoundError'),\n  Conflict           : require('../libs/errors/ConflictError'),\n  PreconditionFailed : require('../libs/errors/PreconditionFailedError'),\n  InvalidToken       : require('../libs/errors/InvalidTokenError'),\n  InternalServer     : require('../libs/errors/InternalServerError')\n}\n\nmodule.exports = errors\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/tools/errors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 458,
    "kind": "variable",
    "name": "errors",
    "memberof": "lib/tools/errors.js",
    "static": true,
    "longname": "lib/tools/errors.js~errors",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/errors.js",
    "importStyle": null,
    "description": "Objeto para instanciar objetos de tipo 'error'",
    "lineNumber": 14,
    "properties": [
      {
        "nullable": null,
        "types": [
          "BadRequestError"
        ],
        "spread": false,
        "optional": false,
        "name": "BadRequest",
        "description": "Clase BadRequestError"
      },
      {
        "nullable": null,
        "types": [
          "UnauthorizedError"
        ],
        "spread": false,
        "optional": false,
        "name": "Unauthorized",
        "description": "Clase UnauthorizedError"
      },
      {
        "nullable": null,
        "types": [
          "ForbiddenError"
        ],
        "spread": false,
        "optional": false,
        "name": "Forbidden",
        "description": "Clase ForbiddenError"
      },
      {
        "nullable": null,
        "types": [
          "NotFoundError"
        ],
        "spread": false,
        "optional": false,
        "name": "NotFoundError",
        "description": "Clase NotFoundError"
      },
      {
        "nullable": null,
        "types": [
          "ConflictError"
        ],
        "spread": false,
        "optional": false,
        "name": "ConflictError",
        "description": "Clase ConflictError"
      },
      {
        "nullable": null,
        "types": [
          "PreconditionFailedError"
        ],
        "spread": false,
        "optional": false,
        "name": "PreconditionFailedError",
        "description": "Clase PreconditionFailedError"
      },
      {
        "nullable": null,
        "types": [
          "InvalidTokenError"
        ],
        "spread": false,
        "optional": false,
        "name": "InvalidTokenError",
        "description": "Clase InvalidTokenError"
      },
      {
        "nullable": null,
        "types": [
          "InternalServerError"
        ],
        "spread": false,
        "optional": false,
        "name": "InternalServerError",
        "description": "Clase InternalServerError"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 459,
    "kind": "file",
    "name": "lib/tools/fake/index.js",
    "content": "/**\n* Devuelve un número aleatorio entre A y B.\n* @param {Number} [a=1]       - Número A\n* @param {Number} [b=1000000] - Número B\n* @return {Number}\n*/\nexports.randomInt = function randomInt (a = 1, b = 1000000) {\n  return Math.floor((Math.random() * (b + 1)) + a)\n}\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/tools/fake/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 460,
    "kind": "function",
    "name": "randomInt",
    "memberof": "lib/tools/fake/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/fake/index.js~randomInt",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/fake/index.js",
    "importStyle": null,
    "description": "Devuelve un número aleatorio entre A y B.",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "a",
        "description": "Número A"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1000000",
        "defaultRaw": 1000000,
        "name": "b",
        "description": "Número B"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 461,
    "kind": "file",
    "name": "lib/tools/successes.js",
    "content": "/**\n* Objeto para instanciar objetos de tipo 'success'\n* @type {Object}\n* @property {OkSuccess}         Ok        - Clase OkSuccess\n* @property {CreatedSuccess}    Created   - Clase CreatedSuccess\n* @property {NoContentSuccess}  NoContent - Clase NoContentSuccess\n*/\nconst successes = {\n  Ok        : require('../libs/successes/OkSuccess'),\n  Created   : require('../libs/successes/CreatedSuccess'),\n  NoContent : require('../libs/successes/NoContentSuccess')\n}\n\nmodule.exports = successes\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/tools/successes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 462,
    "kind": "variable",
    "name": "successes",
    "memberof": "lib/tools/successes.js",
    "static": true,
    "longname": "lib/tools/successes.js~successes",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/successes.js",
    "importStyle": null,
    "description": "Objeto para instanciar objetos de tipo 'success'",
    "lineNumber": 8,
    "properties": [
      {
        "nullable": null,
        "types": [
          "OkSuccess"
        ],
        "spread": false,
        "optional": false,
        "name": "Ok",
        "description": "Clase OkSuccess"
      },
      {
        "nullable": null,
        "types": [
          "CreatedSuccess"
        ],
        "spread": false,
        "optional": false,
        "name": "Created",
        "description": "Clase CreatedSuccess"
      },
      {
        "nullable": null,
        "types": [
          "NoContentSuccess"
        ],
        "spread": false,
        "optional": false,
        "name": "NoContent",
        "description": "Clase NoContentSuccess"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 463,
    "kind": "file",
    "name": "lib/tools/util/index.js",
    "content": "/** @ignore */ const fs       = require('fs')\n/** @ignore */ const path     = require('path')\n/** @ignore */ const mkdirp   = require('mkdirp')\n/** @ignore */ const { exec } = require('child_process')\n\n// |=============================================================|\n// |-------------- CONSTANTES -----------------------------------|\n// |=============================================================|\n\n/**\n* Valor máximo de un número entero\n* @const {Number}\n*/\nconst INTEGER_MAX_VALUE = 2147483647\n\nexports.INTEGER_MAX_VALUE = INTEGER_MAX_VALUE\n\n// |=============================================================|\n// |-------------- VARIOS ---------------------------------------|\n// |=============================================================|\n\n/**\n* Devuelve una lista que contiene información de los archivos encontrados.\n* Adicionalmente puede ejecutar una función (onFind) cuando encuentra un archivo.\n* @param {String}   dirPath                - Directorio de búsqueda.\n* @param {String}   ext                    - Extensión del archivo.\n* @param {Function} [onFind]               - Función que se ejecuta cuando encuentra el archivo.\n* @param {Object}   [options]              - Opciones adicionales de búsqueda\n* @param {String[]} [options.ignoredPaths] - Lista de las rutas que serán ignoradas\n* @return {Object[]}\n* @property {!String} fileName - Nombre del archivo, sin la extensión.\n* @property {!String} filePath - Ruta absoluta del archivo.\n* @property {!String} dirName  - Nombre del directorio dond se encuentra el archivo.\n* @property {!String} dirPath  - Ruta absoluta del directorio donde se encuentra el archivo.\n* @property {!String} fileExt  - Extensión del archivo.\n* @example\n* const result = util.findAsync('/search/path', '.config.js', (fileInfo) => {\n*   console.log('FileName = ', fileInfo.fileName)\n*   console.log('FilePath = ', fileInfo.filePath)\n*   console.log('DirName  = ', fileInfo.dirName)\n*   console.log('DirPath  = ', fileInfo.dirPath)\n*   console.log('FileExt  = ', fileInfo.fileExt)\n* })\n* console.log(result) // Muestra una lista de todos los archivos encontrados\n*/\nexports.find = function find (dirPath, ext, onFind, options = {}) {\n  options.ignoredPaths = options.ignoredPaths || []\n  const result = []\n  function _isIgnored (filePath) {\n    for (let i in options.ignoredPaths) {\n      if (filePath.startsWith(options.ignoredPaths[i])) { return true }\n    }\n  }\n  function _find (filePath) {\n    if (_isIgnored(filePath)) { return }\n    if (fs.statSync(filePath).isDirectory()) {\n      fs.readdirSync(filePath).forEach((fileName) => {\n        _find(path.resolve(filePath, fileName))\n      })\n    } else {\n      if (filePath.endsWith(ext)) {\n        const dirPath  = path.dirname(filePath)\n        const fileName = filePath.split(path.sep).pop().replace(ext, '')\n        const dirName  = dirPath.split(path.sep).pop()\n        const fileExt  = ext\n        const fileInfo = { filePath, dirPath, fileName, dirName, fileExt }\n        if (onFind) { onFind(fileInfo) }\n        result.push(fileInfo)\n      }\n    }\n  }\n  _find(dirPath)\n  return result\n}\n\n/**\n* Devuelve una lista que contiene información de los archivos encontrados.\n* Adicionalmente puede ejecutar una función (async onFind) cuando encuentra un archivo.\n* @param {String}        dirPath           - Directorio de búsqueda.\n* @param {String}        ext               - Extensión del archivo.\n* @param {AsyncFunction} onFind            - Función asíncrona que se ejecuta cuando\n*                                            encuentra el archivo.\n* @param {Object}   [options]              - Opciones adicionales de búsqueda\n* @param {String[]} [options.ignoredPaths] - Lista de las rutas que serán ignoradas\n* @return {Promise<Object[]>}\n* @property {!String} fileName - Nombre del archivo, sin la extensión.\n* @property {!String} filePath - Ruta absoluta del archivo.\n* @property {!String} dirName  - Nombre del directorio dond se encuentra el archivo.\n* @property {!String} dirPath  - Ruta absoluta del directorio donde se encuentra el archivo.\n* @property {!String} fileExt  - Extensión del archivo.\n* @example\n* const result = await util.findAsync('/search/path', '.config.js', async (fileInfo) => {\n*   console.log('FileName = ', fileInfo.fileName)\n*   console.log('FilePath = ', fileInfo.filePath)\n*   console.log('DirName  = ', fileInfo.dirName)\n*   console.log('DirPath  = ', fileInfo.dirPath)\n*   console.log('FileExt  = ', fileInfo.fileExt)\n* })\n* console.log(result) // Muestra una lista de todos los archivos encontrados\n*/\nexports.findAsync = async function findAsync (dirPath, ext, onFind, options = {}) {\n  options.ignoredPaths = options.ignoredPaths || []\n  const result = []\n  function _isIgnored (filePath) {\n    for (let i in options.ignoredPaths) {\n      if (filePath.startsWith(options.ignoredPaths[i])) { return true }\n    }\n  }\n  async function _find (filePath) {\n    if (_isIgnored(filePath)) { return }\n    if (fs.statSync(filePath).isDirectory()) {\n      const directories = fs.readdirSync(filePath)\n      for (let i in directories) {\n        await _find(path.resolve(filePath, directories[i]))\n      }\n    } else {\n      if (filePath.endsWith(ext)) {\n        const dirPath  = path.dirname(filePath)\n        const fileName = filePath.split(path.sep).pop().replace(ext, '')\n        const dirName  = dirPath.split(path.sep).pop()\n        const fileExt  = ext\n        const fileInfo = { filePath, dirPath, fileName, dirName, fileExt }\n        if (onFind) { await onFind(fileInfo) }\n        result.push(fileInfo)\n      }\n    }\n  }\n  await _find(dirPath)\n  return result\n}\n\n/**\n* Devuelve una promesa que simula una tarea.\n* @param {Number} timeout - Tiempo de espera.\n* @return {Promise}\n*/\nexports.timer = function timer (timeout) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => { resolve() }, timeout)\n  })\n}\n\n/**\n* Ejecuta un comando desde la terminal.\n* @param {String} command     - Comando a ejecutar.\n* @param {String} executePath - Ruta desde donde se ejecutará el comando.\n* @return {Promise}\n*/\nexports.cmd = function cmd (command, executePath) {\n  return new Promise((resolve, reject) => {\n    exec(command, { cwd: executePath }, (error, stdout, stderr) => {\n      if (error !== null) { reject(stderr) } else { resolve(stdout) }\n    })\n  })\n}\n\n/**\n* Devuelve datos parseados de una respuesta sequelize.\n* @param {Object} data - Resultado de una consulta sequelize.\n* @return {Object}\n*/\nexports.toJson = function toJson (data) {\n  return JSON.parse(JSON.stringify(data))\n}\n\n/**\n* Devuelve un array de datos a partir de un array de objetos,\n* indicando una propiedad del objeto.\n* @param {Object[]} data     - Lista de objetos.\n* @param {String}   property - Propiedad a extraer.\n* @return {String|Number|Boolean[]}\n*/\nexports.toArray = function toArray (data, property) {\n  const result = []\n  const props = property.split('.')\n  data.forEach(obj => {\n    for (let i in props) { obj = obj[props[i]] }\n    result.push(obj)\n  })\n  return result\n}\n\n// |=============================================================|\n// |-------------- DIRECTORIOS ----------------------------------|\n// |=============================================================|\n\n/**\n* Indica si existe un directorio.\n* @param {String} dirPath - Ruta del directorio\n* @return {Boolean}\n*/\nexports.isDir = function isDir (dirPath) {\n  return fs.existsSync(dirPath) && fs.statSync(dirPath).isDirectory()\n}\n\n/**\n* Crea un directorio recursivamente.\n* @param {String} dirPath - Ruta del directorio\n*/\nexports.mkdir = function mkdir (dirPath) {\n  mkdirp.sync(dirPath)\n}\n\n/**\n* Elimina un directorio recursivamente.\n* @param {String} dirPath - Ruta del directorio\n*/\nexports.rmdir = function rmdir (dirPath) {\n  function _rmdir (dirPath) {\n    if (fs.statSync(dirPath).isDirectory()) {\n      fs.readdirSync(dirPath).forEach(fileName => {\n        const filePath = path.resolve(dirPath, fileName)\n        if (fs.statSync(dirPath).isDirectory()) {\n          _rmdir(filePath)\n        } else { fs.unlinkSync(filePath) }\n      })\n      fs.rmdirSync(dirPath)\n    } else { fs.unlinkSync(dirPath) }\n  }\n  _rmdir(dirPath)\n}\n\n/**\n* Copia un directorio.\n* @param {String} source - Ruta de origen.\n* @param {String} target - Ruta de destino.\n*/\nexports.copyDir = function copyDir (source, target) {\n  function _copy (sourcePath, targetPath) {\n    if (fs.statSync(sourcePath).isDirectory()) {\n      mkdirp.sync(targetPath)\n      fs.readdirSync(sourcePath).forEach(fileName => {\n        _copy(path.resolve(sourcePath, fileName), path.resolve(targetPath, fileName))\n      })\n    } else {\n      fs.createReadStream(sourcePath).pipe(fs.createWriteStream(targetPath))\n    }\n  }\n  _copy(source, target)\n}\n\n// |=============================================================|\n// |-------------- ARCHIVOS -------------------------------------|\n// |=============================================================|\n\n/**\n* Indica si existe un archivo.\n* @param {String} filePath - Ruta del archivo.\n* @return {Boolean}\n*/\nexports.isFile = function isFile (filePath) {\n  return fs.existsSync(filePath) && !(fs.statSync(filePath).isDirectory())\n}\n\n/**\n* Devuelve el contenido de un archivo de texto.\n* @param {String} filePath - Ruta del archivo.\n* @return {String}\n*/\nexports.readFile = function readFile (filePath) {\n  return fs.readFileSync(filePath, 'utf-8')\n}\n\n/**\n* Crea un archivo.\n* @param {String} filePath - Ruta del archivo.\n* @param {String} content  - Contenido del archivo.\n*/\nexports.writeFile = function writeFile (filePath, content) {\n  mkdirp.sync(path.dirname(filePath))\n  fs.writeFileSync(filePath, content)\n}\n\n/**\n* Elimina un archivo.\n* @param {String} filePath - Ruta del archivo.\n*/\nexports.removeFile = function removeFile (filePath) {\n  if (fs.existsSync(filePath)) {\n    fs.unlinkSync(filePath)\n  }\n}\n\n/**\n* Copia un archivo.\n* @param {String} sourcePath - Ruta de origen.\n* @param {String} targetPath - Ruta de destino.\n*/\nexports.copyFile = function copyFile (sourcePath, targetPath) {\n  fs.createReadStream(sourcePath).pipe(fs.createWriteStream(targetPath))\n}\n\n/**\n* Devuelve la cantidad de ficheros existentes dentro de un directorio.\n* @param {String} dirPath           - Ruta del directorio.\n* @param {String} [ext='.js']        - Se contarán todos los ficheros que tengan esta extensión.\n* @param {Boolean} [recursive=true] - Indica si se buscarán dentro de los subdirectorios.\n* @return {Number}\n*/\nexports.countFiles = function countFiles (dirPath, ext = '.js', recursive = true) {\n  let sw = false\n  function _count (dirPath) {\n    if (fs.statSync(dirPath).isDirectory()) {\n      if (!recursive && sw) { return 0 }\n      sw = true\n      let count = 0\n      fs.readdirSync(dirPath).forEach(fileName => {\n        count += _count(path.resolve(dirPath, fileName))\n      })\n      return count\n    } else {\n      return dirPath.endsWith(ext) ? 1 : 0\n    }\n  }\n  return _count(dirPath)\n}\n\n/**\n* Devuelve el contenido de un archivo, alternativamente, es posible ejecutar\n* su contenido si se trata de una función devolviendo en todo caso el resultado de dicha función.\n* @param {String} app      - Instancia del servidor (es para mostrar los logs).\n* @param {String} filePath - Ruta del archivo.\n* @return {Object} data\n* @example\n* module.exports = (app) => {\n*   const data = {}\n*   return data\n* }\n*\n* @example\n* const data = {}\n* module.exports = data\n*/\nexports.loadFile = async function loadFile (app, filePath) {\n  let content = {}\n  try {\n    if (fs.existsSync(filePath) && !(fs.statSync(filePath).isDirectory())) {\n      content = require(filePath)\n    }\n    if (typeof content === 'function') {\n      content = await content(app)\n    }\n    app.logger.appPrimary('[archivo]', `${filePath.replace(app.config.PATH.project, '')} ${app.logger.OK}`)\n  } catch (e) {\n    app.logger.appError('[archivo]', `${filePath.replace(app.config.PATH.project, '')} ${app.logger.FAIL}\\n`)\n    throw e\n  }\n  return content\n}\n\n// |=============================================================|\n// |-------------- FILTROS Y CONSULTAS --------------------------|\n// |=============================================================|\n\n/**\n* Crea los metadatos para una consulta de tipo findAndCountAll.\n* @param {Request}         req    - Objeto Request\n* @param {SequelizeResult} result - Resultado de la consulta findAndCountAll\n* @return {Object}\n*/\nexports.metadata = function metadata (req, result) {\n  let count = result.count\n  let limit = req.query.limit\n  let page  = req.query.page\n  let start = req.query.offset + 1\n  if (start > count) start = 0\n  let end = start + limit - 1\n  if (start === 0) { end = 0 }\n  if (end > count) { end = count }\n  return { count, limit, page, start, end }\n}\n",
    "static": true,
    "longname": "/home/alex/INSAC/insac/lib/tools/util/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 464,
    "kind": "variable",
    "name": "fs",
    "memberof": "lib/tools/util/index.js",
    "static": true,
    "longname": "lib/tools/util/index.js~fs",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 465,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/tools/util/index.js",
    "static": true,
    "longname": "lib/tools/util/index.js~path",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 466,
    "kind": "variable",
    "name": "mkdirp",
    "memberof": "lib/tools/util/index.js",
    "static": true,
    "longname": "lib/tools/util/index.js~mkdirp",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 467,
    "kind": "variable",
    "name": "exec",
    "memberof": "lib/tools/util/index.js",
    "static": true,
    "longname": "lib/tools/util/index.js~exec",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 468,
    "kind": "variable",
    "name": "INTEGER_MAX_VALUE",
    "memberof": "lib/tools/util/index.js",
    "static": true,
    "longname": "lib/tools/util/index.js~INTEGER_MAX_VALUE",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Valor máximo de un número entero",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": "{Number}"
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 469,
    "kind": "function",
    "name": "find",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~find",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Devuelve una lista que contiene información de los archivos encontrados.\nAdicionalmente puede ejecutar una función (onFind) cuando encuentra un archivo.",
    "examples": [
      "const result = util.findAsync('/search/path', '.config.js', (fileInfo) => {\n  console.log('FileName = ', fileInfo.fileName)\n  console.log('FilePath = ', fileInfo.filePath)\n  console.log('DirName  = ', fileInfo.dirName)\n  console.log('DirPath  = ', fileInfo.dirPath)\n  console.log('FileExt  = ', fileInfo.fileExt)\n})\nconsole.log(result) // Muestra una lista de todos los archivos encontrados"
    ],
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dirPath",
        "description": "Directorio de búsqueda."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "ext",
        "description": "Extensión del archivo."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "onFind",
        "description": "Función que se ejecuta cuando encuentra el archivo."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Opciones adicionales de búsqueda"
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "name": "options.ignoredPaths",
        "description": "Lista de las rutas que serán ignoradas"
      }
    ],
    "properties": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "Nombre del archivo, sin la extensión."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "Ruta absoluta del archivo."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dirName",
        "description": "Nombre del directorio dond se encuentra el archivo."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dirPath",
        "description": "Ruta absoluta del directorio donde se encuentra el archivo."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fileExt",
        "description": "Extensión del archivo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 470,
    "kind": "function",
    "name": "findAsync",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/tools/util/index.js~findAsync",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Devuelve una lista que contiene información de los archivos encontrados.\nAdicionalmente puede ejecutar una función (async onFind) cuando encuentra un archivo.",
    "examples": [
      "const result = await util.findAsync('/search/path', '.config.js', async (fileInfo) => {\n  console.log('FileName = ', fileInfo.fileName)\n  console.log('FilePath = ', fileInfo.filePath)\n  console.log('DirName  = ', fileInfo.dirName)\n  console.log('DirPath  = ', fileInfo.dirPath)\n  console.log('FileExt  = ', fileInfo.fileExt)\n})\nconsole.log(result) // Muestra una lista de todos los archivos encontrados"
    ],
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dirPath",
        "description": "Directorio de búsqueda."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "ext",
        "description": "Extensión del archivo."
      },
      {
        "nullable": null,
        "types": [
          "AsyncFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "onFind",
        "description": "Función asíncrona que se ejecuta cuando\n                                           encuentra el archivo."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Opciones adicionales de búsqueda"
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "name": "options.ignoredPaths",
        "description": "Lista de las rutas que serán ignoradas"
      }
    ],
    "properties": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "Nombre del archivo, sin la extensión."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "Ruta absoluta del archivo."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dirName",
        "description": "Nombre del directorio dond se encuentra el archivo."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dirPath",
        "description": "Ruta absoluta del directorio donde se encuentra el archivo."
      },
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fileExt",
        "description": "Extensión del archivo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object[]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 471,
    "kind": "function",
    "name": "timer",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~timer",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Devuelve una promesa que simula una tarea.",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeout",
        "description": "Tiempo de espera."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 472,
    "kind": "function",
    "name": "cmd",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~cmd",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Ejecuta un comando desde la terminal.",
    "lineNumber": 149,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": "Comando a ejecutar."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "executePath",
        "description": "Ruta desde donde se ejecutará el comando."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 473,
    "kind": "function",
    "name": "toJson",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~toJson",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Devuelve datos parseados de una respuesta sequelize.",
    "lineNumber": 162,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Resultado de una consulta sequelize."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 474,
    "kind": "function",
    "name": "toArray",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~toArray",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Devuelve un array de datos a partir de un array de objetos,\nindicando una propiedad del objeto.",
    "lineNumber": 173,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Lista de objetos."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "property",
        "description": "Propiedad a extraer."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Number",
        "Boolean[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 475,
    "kind": "function",
    "name": "isDir",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~isDir",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Indica si existe un directorio.",
    "lineNumber": 192,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dirPath",
        "description": "Ruta del directorio"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 476,
    "kind": "function",
    "name": "mkdir",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~mkdir",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Crea un directorio recursivamente.",
    "lineNumber": 200,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dirPath",
        "description": "Ruta del directorio"
      }
    ],
    "return": null
  },
  {
    "__docId__": 477,
    "kind": "function",
    "name": "rmdir",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~rmdir",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Elimina un directorio recursivamente.",
    "lineNumber": 208,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dirPath",
        "description": "Ruta del directorio"
      }
    ],
    "return": null
  },
  {
    "__docId__": 478,
    "kind": "function",
    "name": "copyDir",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~copyDir",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Copia un directorio.",
    "lineNumber": 228,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": "Ruta de origen."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Ruta de destino."
      }
    ],
    "return": null
  },
  {
    "__docId__": 479,
    "kind": "function",
    "name": "isFile",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~isFile",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Indica si existe un archivo.",
    "lineNumber": 251,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "Ruta del archivo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 480,
    "kind": "function",
    "name": "readFile",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~readFile",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Devuelve el contenido de un archivo de texto.",
    "lineNumber": 260,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "Ruta del archivo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 481,
    "kind": "function",
    "name": "writeFile",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~writeFile",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Crea un archivo.",
    "lineNumber": 269,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "Ruta del archivo."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": "Contenido del archivo."
      }
    ],
    "return": null
  },
  {
    "__docId__": 482,
    "kind": "function",
    "name": "removeFile",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~removeFile",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Elimina un archivo.",
    "lineNumber": 278,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "Ruta del archivo."
      }
    ],
    "return": null
  },
  {
    "__docId__": 483,
    "kind": "function",
    "name": "copyFile",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~copyFile",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Copia un archivo.",
    "lineNumber": 289,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "sourcePath",
        "description": "Ruta de origen."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "targetPath",
        "description": "Ruta de destino."
      }
    ],
    "return": null
  },
  {
    "__docId__": 484,
    "kind": "function",
    "name": "countFiles",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~countFiles",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Devuelve la cantidad de ficheros existentes dentro de un directorio.",
    "lineNumber": 300,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dirPath",
        "description": "Ruta del directorio."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'.js'",
        "defaultRaw": "'.js'",
        "name": "ext",
        "description": "Se contarán todos los ficheros que tengan esta extensión."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "recursive",
        "description": "Indica si se buscarán dentro de los subdirectorios."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 485,
    "kind": "function",
    "name": "loadFile",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/tools/util/index.js~loadFile",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Devuelve el contenido de un archivo, alternativamente, es posible ejecutar\nsu contenido si se trata de una función devolviendo en todo caso el resultado de dicha función.",
    "examples": [
      "module.exports = (app) => {\n  const data = {}\n  return data\n}",
      "const data = {}\nmodule.exports = data"
    ],
    "lineNumber": 334,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "app",
        "description": "Instancia del servidor (es para mostrar los logs)."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "Ruta del archivo."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "data"
    }
  },
  {
    "__docId__": 486,
    "kind": "function",
    "name": "metadata",
    "memberof": "lib/tools/util/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tools/util/index.js~metadata",
    "access": "public",
    "export": false,
    "importPath": "insac/lib/tools/util/index.js",
    "importStyle": null,
    "description": "Crea los metadatos para una consulta de tipo findAndCountAll.",
    "lineNumber": 361,
    "params": [
      {
        "nullable": null,
        "types": [
          "Request"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Objeto Request"
      },
      {
        "nullable": null,
        "types": [
          "SequelizeResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "Resultado de la consulta findAndCountAll"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "kind": "index",
    "content": "<h1 align=\"center\">Framework de creación de servicios web</h1>\n\n<p align=\"center\">\n  <img src=\"https://github.com/insacjs/insac/raw/master/assets/insac-logo-256.png\" alt=\"Logo Insac JS\" />\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/insacjs/insac/releases\">\n      <img src=\"https://img.shields.io/github/release/insacjs/insac.svg\" alt=\"Release\" />\n  </a>\n\n  <a href=\"https://npmcharts.com/compare/insac\">\n    <img src=\"https://img.shields.io/npm/dm/insac.svg\" alt=\"Downloads\">\n  </a>\n\n  <a href=\"https://www.npmjs.com/package/insac\">\n    <img src=\"https://img.shields.io/npm/v/insac.svg\" alt=\"Version\">\n  </a>\n\n  <a href=\"https://opensource.org/licenses/MIT\">\n      <img src=\"https://img.shields.io/github/license/insacjs/insac.svg\" alt=\"License: MIT\" />\n  </a>\n</p>\n\nInsac JS es un framework de creación de servicios web basado en lenguaje script que utiliza arquitectura REST. Está enfocado en la organización, automatización y reutilización de código.\n\nLa documentación se encuentra disponible en la página [https://insacjs.github.io](https://insacjs.github.io).\n\nPara crear nuevos proyectos, utilice la [Interfaz de línea de comandos INSAC CLI](https://github.com/insacjs/insac-cli)\n\n## Tecnologías utilizadas\n\nEl framework ha sido implementado utilizando el lenguaje JavaScript bajo el estándar de programación ECMAScript 2017, esto por el potencial que alcanzó el lenguaje gracias a NodeJS, un entorno de ejecución para JavaScript construido con el motor de JavaScript V8 de Chrome.\n\nNodeJS permite crear aplicaciones del lado del servidor, además de que es una excelente herramienta para crear servicios web gracias a su modelo de operaciones E/S sin bloqueo orientado a eventos, que lo hace liviano y eficiente.\n\nA continuación de describen las diferentes tecnologías y herramientas mas importantes con las que trabaja el framework:\n\n| Nombre      | Versión  | Descripción                                                    |\n| ----------- | -------- | -------------------------------------------------------------- |\n| `NodeJS`    | ^8.0     | Entorno de programación de JavaScript.                         |\n| `NPM`       | ^6.3     | Gestor de paquetes de NodeJS.                                  |\n| `Express`   | ^4.16    | Framework de NodeJS.                                           |\n| `Sequelize` | ^4.37    | Framework ORM de NodeJS.                                       |\n| `Yarn`      | ^1.7     | Manejador de dependencias.                                     |\n| `PM2`       | ^2.7     | Gestor avanzado de procesos de producción para NodeJS.         |\n| `Git`       | ^2.7     | Sistema de control de versiones distribuido de código abierto. |\n| `Eslint`    | ^4.19    | Herramienta de linting para JavaScript.                        |\n\n## Soporta los siguientes gestores de base de datos:\n\n| Nombre        | Versión  |\n| ------------- | -------- |\n| `PostgreSQL`  | 9.4      |\n| `MySQL`       | 5.7      |\n| `MSSQLSERVER` | 2017     |\n| `SQLite`      | 3.24     |\n\n## Características\n\nEntre las características más importantes del framework se encuentran las siguientes:\n\n- **Estructura de proyecto:** Utiliza un sistema que permite identificar a los componentes de la aplicación y sus respectivas funciones a través del nombre y la extensión de los ficheros.\n\n- **Creación automática del APIDOC:** Crea el APIDOC de manera automática cada vez que se ejecuta la aplicación, de esta forma se garantiza que siempre estará actualizada.\n\n- **Validador automático:** Valida los datos de entrada de forma automática, cuando los datos llegan al Middleware o al Controlador, éstos ya se encuentran validados y convertidos al tipo de dato correspondiente.\n\n- **Sistema de filtrado de datos:** Por defecto, todas las peticiones incluyen un sistema de filtrado por campos, adicionalmente, es posible optimizar la consulta con la base de datos utilizando los filtros que se envían a través de la URL.\n\n- **Esquemas de base de datos:** Sobre una base de datos, se crea un esquema para cada módulo, de esta forma es posible tener dos tablas o modelos con el mismo nombre, pero en diferentes módulos. Es posible relacionar modelos de diferentes módulos.\n\n- **Sistema de logs:** Por defecto, se muestran mensajes en la terminal para monitorear todas las peticiones y éstas se registran en ficheros de logs.\n\n## Referencias externas\n\n- [Node JS](https://nodejs.org/es/)\n- [NPM](https://www.npmjs.com/)\n- [Express](http://expressjs.com/es/)\n- [Sequelize](http://docs.sequelizejs.com/)\n- [Yarn](https://yarnpkg.com/es-ES/)\n- [PM2](http://pm2.keymetrics.io/)\n- [GIT](https://git-scm.com/)\n- [ESLint](https://eslint.org/)\n\n## Ejemplo.-\n\nPara preparar un proyecto básico, desde la terminal ejecuta los siguientes comandos:\n\n```bash\n# Crea la carpeta del proyecto\n$ mkdir app\n$ cd app\n\n# Inicializa el gestor de paquetes de Node.\n$ npm init\n\n# Instala el framework\n$ npm install --save insac\n```\n\nPosteriormente, deberá crear algunos archivos con la siguiente estructura:\n\n```txt\napp\n  ├─ src\n  │     └─ modules\n  │           └─ API\n  │                 ├─ resources\n  │                 │     └─ welcome\n  │                 │           ├─ welcome.controller.js\n  │                 │           ├─ welcome.input.js\n  │                 │           ├─ welcome.output.js\n  │                 │           └─ welcome.route.js\n  │                 └─ api.module.js\n  ├─ node_modules\n  ├─ index.js\n  └─ package.json\n```\n\nY el siguiente contenido:\n\n### `api.module.js`\n```js\nconst { Module } = require('insac')\n\nmodule.exports = (app) => {\n  return new Module(app.config.API)\n}\n```\n\n### `welcome.route.js`\n```js\nmodule.exports = (app) => {\n  const ROUTE = {}\n\n  ROUTE.hello = {\n    path   : '/welcome/hello/:name',\n    method : 'get'\n  }\n\n  return ROUTE\n}\n```\n\n### `welcome.input.js`\n```js\nconst { Field } = require('insac')\n\nmodule.exports = (app) => {\n  const INPUT = {}\n\n  INPUT.hello = {\n    params: {\n      name: Field.STRING({ allowNull: false })\n    },\n    query: {\n      number: Field.INTEGER({ allowNull: false })\n    }\n  }\n\n  return INPUT\n}\n```\n\n### `welcome.output.js`\n```js\nconst { Field } = require('insac')\n\nmodule.exports = (app) => {\n  const OUTPUT = {}\n\n  OUTPUT.hello = {\n    message : Field.STRING(),\n    number  : Field.INTEGER()\n  }\n\n  return OUTPUT\n}\n```\n\n### `welcome.controller.js`\n```js\nmodule.exports = (app) => {\n  const CONTROLLER = {}\n\n  CONTROLLER.hello = async (req, res, next) => {\n    try {\n      const NAME   = req.params.name\n      const NUMBER = req.query.number\n      const RESULT = { message: `Hola ${NAME}!!!`, number: NUMBER }\n      res.success200(RESULT, 'Mensaje enviado exitosamente.')\n    } catch (err) { return next(err) }\n  }\n\n  return CONTROLLER\n}\n```\n\n### `index.js`\n```js\nconst { Insac } = require('insac')\n\nconst service = new Insac()\n\nservice.addModule('api')\n\nservice.init().catch(e => {\n  console.log(e)\n  process.exit(1)\n})\n\nmodule.exports = service\n```\n\nDespués, ejecuta la aplicación:\n\n```bash\n$ node index.js\n```\n\n### `http://localhost:4000`\n\n![Captura 1](./assets/hola-mundo/app/captura01.jpg)\n\n### `http://localhost:4000/apidoc/API`\n\n![Captura 2](./assets/hola-mundo/app/captura02.jpg)\n\n### Petición de ejemplo\n\n![Captura 3](./assets/hola-mundo/app/captura03.jpg)\n\n### Mensajes de logs\n\n![Captura 4](./assets/hola-mundo/app/captura04.jpg)\n",
    "longname": "/home/alex/INSAC/insac/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"insac\",\n  \"version\": \"3.1.2\",\n  \"description\": \"Framework de creación de servicios web basado en lenguaje script que utiliza arquitectura REST.\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"npm run test-unit && npm run test-integration\",\n    \"test-unit\": \"./node_modules/.bin/mocha --recursive \\\"./test/unit/{,/**/}*.spec.js\\\"\",\n    \"test-integration\": \"./node_modules/.bin/mocha --recursive \\\"./test/integration/{,/**/}*.spec.js\\\"\",\n    \"doc\": \"./node_modules/.bin/esdoc && cp -r ./assets ./docs\",\n    \"lint\": \"./node_modules/.bin/eslint ./lib ./test\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/insacjs/insac.git\"\n  },\n  \"keywords\": [\n    \"insac\",\n    \"insacjs\",\n    \"framework\",\n    \"api\",\n    \"rest\",\n    \"web\",\n    \"service\"\n  ],\n  \"author\": \"Wilmer Alex Quispe Quispe <q.wilmer.alex@gmail.com>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/insacjs/insac/issues\"\n  },\n  \"homepage\": \"https://github.com/insacjs/insac#readme\",\n  \"engines\": {\n    \"node\": \">=8.0.0\"\n  },\n  \"dependencies\": {\n    \"apidoc\": \"^0.17.6\",\n    \"cors\": \"^2.8.4\",\n    \"ejs\": \"^2.6.1\",\n    \"express\": \"^4.16.3\",\n    \"handlebars\": \"^4.0.11\",\n    \"helmet\": \"^3.13.0\",\n    \"lodash\": \"^4.17.10\",\n    \"mkdirp\": \"^0.5.1\",\n    \"moment\": \"^2.22.2\",\n    \"pg\": \"^7.4.3\",\n    \"sequelize\": \"^4.38.0\",\n    \"uuid\": \"^3.3.2\",\n    \"winston\": \"^3.0.0\"\n  },\n  \"devDependencies\": {\n    \"chai\": \"^4.1.2\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"esdoc-publish-html-plugin\": \"^1.1.2\",\n    \"eslint\": \"^5.4.0\",\n    \"eslint-config-standard\": \"^11.0.0\",\n    \"eslint-plugin-import\": \"^2.14.0\",\n    \"eslint-plugin-node\": \"^7.0.1\",\n    \"eslint-plugin-promise\": \"^4.0.0\",\n    \"eslint-plugin-standard\": \"^3.1.0\",\n    \"mocha\": \"^5.2.0\",\n    \"mysql2\": \"^1.6.1\",\n    \"request\": \"^2.88.0\",\n    \"sqlite3\": \"^4.0.2\",\n    \"tedious\": \"^2.6.4\"\n  }\n}\n",
    "longname": "/home/alex/INSAC/insac/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]